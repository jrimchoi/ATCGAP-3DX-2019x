define("DS/CfgXRules/CfgXRules_en",{});define("DS/CfgXRules/assets/nls/Commons/VariabilityCriteriaSelector",{OK:"OK",Cancel:"Cancel",Standard:"Standard",Available:"Available",NonAvailable:"Non-Available",Default:"Default",Criterias:"Criterias",Of:"of",Selected:"Selected",SearchFor:"Search for...",items:"items",Variants:"Variants",Options:"Options",Packs:"Packs",VariantClass:"Variant Class",Variant:"Variant",Option:"Option",Pack:"Pack",DisplayNameColLabel:"Display Name",TypeColLabel:"Type",NameColLabel:"Name",OriginatorColLabel:"Originator",TitleColLabel:"Title",RevisionColLabel:"Revision",Search:"Search",SwitchView:"Switch View",Close:"Close",ConfigurationFeature:"Configuration Feature",ConfigurationOption:"Configuration Option",SortByName:"Name",SortByCreator:"Creator",SortByModifiedDate:"Modified Date",Sort:"Sort",Back:"Back",SortBy:"Sort by",Add:"Add"});define("DS/CfgXRules/assets/nls/LanguageInformationComponent/LanguageInformationComponent",{languageInformation_title:"Language Information",criteria_title:"Criteria",criteria_description:"a description of a criteria",sample_VariantClassSample1:"Color",sample_Variant1Sample:"Blue",sample_Variant1Sample2:"Green",sample_VariantClassSample2:"City",sample_Variant2Sample1:"Paris",sample_Variant2Sample2:"London",sample_VariantClassSample3:"Citizenship",sample_Variant3Sample1:"French",sample_VariantClassSample4:"Country",sample_Variant3Sample4:"France",sample_OptionSample:"Wi-Fi Card",sample_PackSample:"Sport Pack",standard_operators_title:"Standard Operators",standard_operators_description:"NLS-Standard operators description",standard_operators_not:"NOT",standard_operators_and:"AND",standard_operators_or:"OR",standard_operators_parenthesis:"Parenthesis",conditional_requirement_title:"Conditional Requirement",conditional_requirement_description:"Conditional Requirement Description",conditional_requirement_imply:"IMPLY",co_dependency_title:"Co-dependency Statement",co_dependency_description:"Co-dependency Description",co_dependency_equivalent:"EQUIVALENT",incompatibility_title:"Incompatible Statement",incompatibility_description:"A and B are incompatible is equivalent to",criteria_Feature:"Feature",criteria_option:"Option",criteria_severalOptions:"Several options",criteria_Pack:"Pack",criteria_variantClass:"Variant class",criteria_variant:"variant",criteria_variants:"variants",criteria_severalOptions_explanation:"A feature followed by a list of options is equivalent to a OR in between all listed options",criteria_variantclassvariants_explanation:"A variant class followed by a list of variants is equivalent to a OR in between all listed variants",example:"example",criteria_featureoption_explanation:"A feature with an option is a valid expression",criteria_variantclassvariant_explanation:"A variant class with a variant is a valid expression",criteria_feature_explanation:"A feature without any option refers to all options associated with this feature",criteria_variantClass_explanation:"A variant class without any variant refers to all variants associated with this variant class",expression1:"expression1",expression2:"expression2",not_explanation:"An expression preceded by a NOT is the logical complement of this expression",and_explanation:"AND between two expressions express the logical conjunction of the two expressions",or_explanation:"OR between two expressions express the logical disjunction of the two expressions",parenthesis_explanation:"One may want to create a more complex expression using parenthesis",imply_explanation:"A conditional requirement - if (expression 1) , then (expression 2) - uses the IMPLY operator",equivalent_explanation:"Equivalent make expression 1 and expression 2 have the same logical content",incompatibility_explanation:"One may want to create two incompatible statements, this can be done using existing operators",option_explanation:"An option can be used as a criteria",pack_explanation:"A Pack can be used as a criteria"});define("DS/CfgXRules/assets/nls/RuleExpressionComponent/RuleExpressionComponent",{under_computation:"Under computation",conflict_with_existing_rules:"Conflict with existing rules",conflicting_additional_information:"Conflicting Additional Information",invalid_expression_due_to:"Invalid Expression due to",invalid_expression_without_reason:"Invalid Expression",unknown_reason:"Unknown reason",OK:"OK",cancel:"Cancel",errorInContextOf:"Error in context of",badge:"Badge",isNotInPossibleCriteria:"is not in possible criteria",isNotExpectingToBeFollowedBy:"is not expecting to be followed by",pack:"pack",packclass:"packclass",variant:"variant",variantclass:"variant class",baseline:"baseline",option:"option",rule:"rule",portfolioComponent:"portfolio Component",opening_separator:"Opening Operator",unary_operator:"Unary Operator",closing_separator:"Closing Operator",binary_operator:"Binary Operator",genericError:"Error",isUnknown:"is unknown",correspondingClosingOperatorNotFound:"corresponding closing operator not found",correspondingOpeningOperatorNotFound:"corresponding opening operator not found",unknown:"unknown"});