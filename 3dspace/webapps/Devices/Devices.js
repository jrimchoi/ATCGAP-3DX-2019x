define("DS/Devices/HMD",["UWA/Core","DS/Visualization/ThreeJS_DS"],function(c,b){var a=c.Class.extend({init:function(f){this._vrHMD=f;this._vrHMD.depthNear=100;this._vrHMD.depthFar=10000000;this._position=new b.Vector3(0,0,0);this._orientation=new b.Quaternion(1,0,0,Math.PI/2);this._frameData=new VRFrameData();var d=this._vrHMD.getEyeParameters("left");var e=this._vrHMD.getEyeParameters("right");if(d&&e){this.width=Math.max(d.renderWidth,e.renderWidth)*2;this.height=Math.max(d.renderHeight,e.renderHeight)}else{this.width=0;this.height=0}},getPosition:function(){return new b.Vector3().copy(this._position)},getOrientation:function(){return new b.Quaternion().copy(this._orientation)},getEyeParameters:function(d){if(this._vrHMD&&(d==="left"||d==="right")){return this._vrHMD.getEyeParameters(d)}},getProjectionMatrix:function(e){var d=new b.Matrix4();if(e==="left"){d.elements=this._frameData.leftProjectionMatrix}else{if(e==="right"){d.elements=this._frameData.rightProjectionMatrix}}return d},getSittingToStanding:function(){if(!this._vrHMD){return}var e=new b.Matrix4();var d=this._vrHMD.stageParameters;if(d){e.elements=d.sittingToStandingTransform}return e},update:function(e){if(this._vrHMD===null){return}this._vrHMD.getFrameData(this._frameData);var d=this._frameData.pose;if(d.position&&e){this._position.x=d.position[0]*1000;this._position.y=d.position[1]*1000;this._position.z=d.position[2]*1000}else{if(!e){this._position.x=0;this._position.y=0;this._position.z=0}}if(d.orientation){this._orientation.x=d.orientation[0];this._orientation.y=d.orientation[1];this._orientation.z=d.orientation[2];this._orientation.w=d.orientation[3]}},beginRender:function(d){if(!this._vrHMD){return}if(this._vrHMD.capabilities.canPresent){return this._vrHMD.requestPresent(d)}else{return Promise.resolve()}},endRender:function(){if(!this._vrHMD){return}if(!this._vrHMD.isPresenting){return Promise.resolve()}return this._vrHMD.exitPresent()},render:function(d){var e=this._vrHMD;d();if(e.isPresenting){e.submitFrame()}},setNear:function(d){this._vrHMD.depthNear=d},setFar:function(d){this._vrHMD.depthFar=d},updateFrameData:function(){this._vrHMD.getFrameData(this._frameData)},hasStandingMatrix:function(){var d=this._vrHMD.stageParameters;return !!d}});return a});define("DS/Devices/Controller",["UWA/Core","DS/Visualization/ThreeJS_DS","DS/Visualization/Node3D",],function(d,a,b){var c=d.Class.extend({init:function(f,e){this._position=new a.Vector3(0,0,0);this._orientation=new a.Quaternion(0,0,0,1);this._scale=new a.Vector3(1,1,1);this.index=f;this._hand=e;var h=this.getGamepad();if(h.id==="OpenVR Gamepad"){this._type="ViveController"}this._buttonStateChange=[];for(var g=0;g<h.buttons;++g){this._buttonStateChange.push(false)}this._model=null;this._node=new b(this.id);this._node.exludeFromBounding(true);this._controllerAction=[]},getGamepad:function(){var h=navigator.getGamepads();for(var g=0,e=0;g<h.length;g++){var f=h[g];if(f){if(e===this.index){return f}e++}}},getId:function(){var e=this.getGamepad();if(e){return e.id}},getMatrix:function(){return new a.Matrix4().compose(this._position,this._orientation,this._scale)},getType:function(){return this._type},getNode:function(){return this._node},update:function(){var e=this.getGamepad();if(e){var f=e.pose;if(f.position){this._position.x=f.position[0]*1000;this._position.y=f.position[1]*1000;this._position.z=f.position[2]*1000}if(f.orientation){this._orientation.x=f.orientation[0];this._orientation.y=f.orientation[1];this._orientation.z=f.orientation[2];this._orientation.w=f.orientation[3]}this.updateButtonState()}},addControllerAction:function(i){var f=this.getGamepad();var g={};if(i.type!=="pressed"&&i.type!=="touched"&&i.type!=="axis"){g.type="none"}else{g.type=i.type}var h=f.buttons.length;if(i.buttonIdx<0||i.buttonIdx>=h){console.log("Button number "+i.buttonIdx+" doesn't exist");return -1}if(g.type==="pressed"||g.type==="touched"){g.buttonIdx=i.buttonIdx;var e=f.buttons[g.buttonIdx];if(g.type==="pressed"){g.activated=e.pressed}else{if(g.type==="touched"){g.activated=e.touched}}if(!i.onActivate){g.onActivate=function(){}}else{g.onActivate=i.onActivate}if(!i.onDeactivate){g.onDeactivate=function(){}}else{g.onDeactivate=i.onDeactivate}}else{if(g.type==="axis"){g.axesIdx=i.axesIdx}}if(!i.onFrameUpdate){g.onFrameUpdate=function(){}}else{g.onFrameUpdate=i.onFrameUpdate}this._controllerAction.push(g);return this._controllerAction.length-1},removeControllerAction:function(e){this._controllerAction.splice(e,1)},pulse:function(e,g){var f=this.getGamepad();if("hapticActuators" in f&&f.hapticActuators.length>0){f.hapticActuators[0].pulse(e,g)}},updateButtonState:function(){var j=this.getGamepad();for(var h=0;h<this._controllerAction.length;++h){var l=this._controllerAction[h];if(l.type==="pressed"||l.type==="touched"){var g=j.buttons[l.buttonIdx];var e;if(l.type==="pressed"){e=g.pressed}else{if(l.type==="touched"){e=g.touched}}if(l.activated!==e){l.activated=e;if(l.activated){l.onActivate()}else{l.onDeactivate()}}if(l.activated){l.onFrameUpdate()}}else{if(l.type==="axis"){var n=[];for(var f=0;f<l.axesIdx.length;++f){var m=l.axesIdx[f];if(m>=0&&m<j.axes.length){n.push(j.axes[m])}}l.onFrameUpdate(n)}else{if(l.type==="none"){l.onFrameUpdate()}}}}},picking3d:function(i){var m=i.floorZ||i.viewer.offsetPlaneBackground.z||0;var o=this._node.getMatrix();var l=o.decompose();var j=i.userPoint||l[0];if(!j||!this._orientation){return{valid:false}}var f={};var s=i.userDirection||new a.Vector3(0,0,-1).applyQuaternion(l[1]);s.normalize();var t;var p;if(i.intersectFloor!==null){if(s.z!==0){t=(m-j.z)/s.z}if(!!t&&t>0){p=function(u,k,w){var v=new a.Vector3().copy(k);v.multiplyScalar(w);v.add(u);return{distance:w,point:v,valid:true}}}}var r=new a.Ray(new a.Vector3().copy(j),new a.Vector3().copy(s));var n=i.viewer.castRay(r);var f;if(n.length>0){var g=function(k){return !!k&&(k.object.getNode().intersectable!==false)};var e=function(u){var k=u.normal;if(k){var w=new a.Vector3(0,0,1).dot(k);var v=w;return(v>=0.7)}return false};for(var h=0;h<n.length;h++){f=n[h];if(g(f)){var q=e(f);if(p&&t<f.distance){f=p(j,s,t);return f}f.valid=q;f=f;return f}}}if(p){f=p(j,s,t);return f}f={valid:false};return f}});return c});define("DS/Devices/DeviceFactory",["UWA/Core","DS/Devices/HMD","DS/Devices/Controller","DS/Notifications/NotificationsManagerUXMessages","DS/Notifications/NotificationsManagerViewOnScreen"],function(f,d,e,c,a){var b=f.Class.singleton({createHMD:function(){if(!window.vrnotifs){window.vrnotifs=c;a.setNotificationManager(window.vrnotifs)}var h={level:"info",title:"HMD connected",sticky:false,};var g={level:"warning",title:"HMD not found",message:"Be sure to have a compatible browser and device",sticky:false,};if(navigator.getVRDisplays){return navigator.getVRDisplays().then(function(i){var j;if(i.length>0){j=i[0];window.vrnotifs.addNotif(h);return new d(j)}window.vrnotifs.addNotif(g);return Promise.reject()})}window.vrnotifs.addNotif(g);return Promise.reject()},createControllers:function(m){var n=[];for(var k=0,g=0;k<m.length&&n.length<2;k++){var h=m[k];if(h){var l;if(g===0){l=new e(g,"right")}else{l=new e(g,"left")}n.push(l);g++}}return n}});return b});