define("DS/RTDriver/RTGroup",["UWA/Class","UWA/Class/Events","DS/RTProxyDriver/RTLogger"],function(b,a,c){c.debug("RTGroup load");var d=b.extend(a,{init:function(e){this.groupId=e.groupId;this.groupName=e.groupName;this.users={}},addUser:function(e){this.users[e.getId()]=e},removeUser:function(e){delete this.users[e]},updateUser:function(e){this.users[e.getId()]=e},getUsers:function(){return this.users},getName:function(){return this.groupName},getId:function(){return this.groupId}});return d});define("DS/RTDriver/RTDetectClient",["DS/RTProxyDriver/RTLogger"],function(a){a.debug("RTDetectClient load");var b=false;["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCIceGatherer"].forEach(function(c){if(b){return}if(c in window){b=true}});a.debug("WebRTCCompatible = "+b);return{getClientInfos:function(){return{WebRTCCompatible:b,userAgent:navigator?navigator.userAgent:null,appVersion:navigator?navigator.appVersion:null,platform:navigator?navigator.platform:null,hasMicrophone:true,hasWebcam:true}}}});define("DS/RTDriver/RTUserStatus",[],function(){var a={Offline:"Offline",Away:"Away",Busy:"Busy",Online:"Online"};return a});define("DS/RTDriver/RTDriver",["UWA/Class","UWA/Class/Events","DS/RTProxyDriver/RTProxyDriver","DS/RTDriver/RTUserStatus","DS/RTProxyDriver/RTLogger"],function(c,b,f,a,e){e.debug("RTDriver load");var d=c.extend(b,{init:function(g){var h=this;this.driver=undefined;this.jid=g.credentials.jid;this.options=g;this.driverName=g.driverName;e.debug("RTDriver Require : "+g.driverName);require(["DS/RTDriver/drivers/"+g.driverName],function(i){e.info("RTDriver driver "+g.driverName+" loaded");h.driver=new i(g);if(h.driver){f.dispatch(f.eventName.GETSTATUSLIST,[h.getListOfStatus()]);h.connect()}})},connect:function(){var g=this;e.debug("RTDriver login");if(this.driver){this.driver.addEvent(f.eventName.CONNECTED,function(h){e.debug("RTDriver CONNECTED");f.dispatch(f.eventName.CONNECTED,h);g.driver.getBuddylist()});this.driver.addEvent(f.eventName.SIGNOUT,function(h){f.dispatch(f.eventName.SIGNOUT,h)});this.driver.addEvent(f.eventName.BUDDYLISTBUILT,function(h){e.debug("RTDriver BUDDYLISTBUILT");f.dispatch(f.eventName.BUDDYLISTBUILT,h)});this.driver.addEvent(f.eventName.RESULTOFSEARCH,function(h){e.debug("RTDriver RESULTOFSEARCH");f.dispatch(f.eventName.RESULTOFSEARCH,[h])});this.driver.addEvent(f.eventName.RESULTOFSEARCHFORSEARCHAPI,function(h){e.debug("RTDriver RESULTOFSEARCHFORSEARCHAPI");f.dispatch(f.eventName.RESULTOFSEARCHFORSEARCHAPI,[h])});this.driver.addEvent(f.eventName.ONPRESENCERECEIVED,function(h){e.debug("RTDriver ONPRESENCERECEIVED");f.dispatch(f.eventName.ONPRESENCERECEIVED,[h])});this.driver.addEvent(f.eventName.STATUSUPDATED,function(h){e.debug("RTDriver STATUSUPDATED");f.dispatch(f.eventName.STATUSUPDATED,[h])});this.driver.addEvent(f.eventName.ONMESSAGERECEIVED,function(h){e.debug("RTDriver ONMESSAGERECEIVED");f.dispatch(f.eventName.ONMESSAGERECEIVED,h)});this.driver.addEvent(f.eventName.ONARCHIVERECEIVED,function(h){e.debug("RTDriver ONARCHIVERECEIVED");f.dispatch(f.eventName.ONARCHIVERECEIVED,h)});this.driver.addEvent(f.eventName.ONDATARECEIVED,function(h){e.debug("RTDriver ONDATARECEIVED");f.dispatch(f.eventName.ONDATARECEIVED,h)});this.driver.addEvent(f.eventName.DISCONNECTED,function(h){e.debug("RTDriver DISCONNECTED");f.dispatch(f.eventName.DISCONNECTED,h)});this.driver.addEvent(f.eventName.GROUPREMOVED,function(h){e.debug("RTDriver GROUPREMOVED");f.dispatch(f.eventName.GROUPREMOVED,h)});this.driver.addEvent(f.eventName.REMOVECONTACT,function(h){e.debug("RTDriver REMOVECONTACT");f.dispatch(f.eventName.REMOVECONTACT,h)});f.addEvent("getMedias",function(h){g.driver.getMedias(h)});f.addEvent("uploadMedia",function(h){g.driver.uploadMedia(h)});f.addEvent("coreview",function(h){g.driver.coreview(h)});f.addEvent(f.eventName.LOGOUT,function(h){if(g.driverName==="XMPP"){g.closeSession()}g.logout()});f.addEvent(f.eventName.CLOSESESSION,function(h){g.closeSession()});f.addEvent(f.eventName.SENDMSG,function(h){g.sendMessage(h)});f.addEvent(f.eventName.SENDDATA,function(h){g.sendData(h)});f.addEvent(f.eventName.SENDSYSMSG,function(h){g.sendSystemMsg(h)});f.addEvent(f.eventName.SENDNOTIF,function(h){g.sendNotif(h)});f.addEvent(f.eventName.GETSTATUS,function(h){g.getStatus(h)});f.addEvent(f.eventName.SETSTATUS,function(h){g.setMyStatus(h.myStatus,h.statusMsg)});f.addEvent(f.eventName.CREATEGROUP,function(h){g.addGroup(h)});f.addEvent(f.eventName.ADDCONTACT,function(h){g.addContact(h.user,h.group)});f.addEvent(f.eventName.REMOVEGROUP,function(h){g.removeGroup(h)});f.addEvent(f.eventName.REMOVECONTACT,function(h){if(!h.fromDriver){g.removeContact(h.user,h.group)}});f.addEvent(f.eventName.SEARCHCONTACT,function(h){g.searchContact(h)});f.addEvent(f.eventName.RENAMEGROUP,function(h){g.renameGroup(h)});f.addEvent(f.eventName.GETARCHIVES,function(h){g.getArchives(h)});f.addEvent(f.eventName.CLEANARCHIVES,function(h){g.cleanArchives(h)});f.addEvent("GETROOM",function(h){g.getRoom(h)});f.addEvent("JOINROOM",function(h){g.joinRoom(h)});f.addEvent("LEAVEROOM",function(h){g.leaveRoom(h)});f.addEvent("discover",function(h){g.discover(h)});f.addEvent("startCall",function(h){g.startCall(h)});f.addEvent("webrtcIceCandidate",function(h){g.webrtcIceCandidate(h)});f.addEvent("SDP",function(h){g.SDP(h)});f.addEvent("endCall",function(h){g.endCall(h)});f.addEvent("acceptCall",function(h){g.acceptCall(h)});f.addEvent("callEventFromView",function(h){g.driver.onCallEventFromView(h)});this.driver.addEvent("inviteSent",function(h){f.dispatch("inviteSent",h)});this.driver.addEvent("callEvent",function(h){f.dispatch("callEvent",h)});this.driver.addEvent("inviteToCall",function(h){f.dispatch("inviteToCall",h)});this.driver.addEvent("callEnded",function(h){f.dispatch("callEnded",h)});this.driver.addEvent("callAccepted",function(h){f.dispatch("callAccepted",h)});this.driver.addEvent("webrtcIceCandidateReceived",function(h){f.dispatch("webrtcIceCandidateReceived",h)});this.driver.addEvent("mediaReceived",function(h){f.dispatch("mediaReceived",h)});this.driver.addEvent("SDPreceived",function(h){f.dispatch("SDPreceived",h)});this.driver.addEvent("GROUP",function(h){f.dispatch("GROUP",h)});this.driver.addEvent("ROOM",function(h){f.dispatch("ROOM",h)});this.driver.addEvent("COREVIEW",function(h){f.dispatch("COREVIEW",h)});this.driver.addEvent("roomLeft",function(h){f.dispatch("onLeaveRoom",h)});this.driver.addEvent("roomJoined",function(h){f.dispatch("onJoinRoom",h)});this.driver.addEvent("miscellaneous",function(h){f.dispatch("miscellaneous",h)});this.driver.addEvent("discovered",function(h){f.dispatch("discovered",h)});f.addEvent("getRoomInfos",function(h){g.driver.getRoomInfos(h)});f.addEvent("UPDATEROOM",function(h){g.driver.updateRoom(h)});f.addEvent("JOINPUBLICROOM",function(h){g.driver.joinPublicRoom(h)});this.driver.login()}},startCall:function(g){this.driver.startCall(g)},endCall:function(g){this.driver.endCall(g)},acceptCall:function(g){this.driver.acceptCall(g)},webrtcIceCandidate:function(g){this.driver.webrtcIceCandidate(g)},SDP:function(g){this.driver.SDP(g)},sendData:function(g){g.from=this.jid;this.driver.sendData(g)},sendMessage:function(g){var h={};h.msg=g;h.from=this.jid;this.driver.sendMessage(h)},sendSystemMsg:function(g){g.from=this.jid;this.driver.sendSystemMsg(g)},sendNotif:function(g){g.from=this.jid;this.driver.sendNotif(g)},addGroup:function(g){this.driver.addGroup(g)},removeGroup:function(g){this.driver.removeGroup(g)},addContact:function(g,h){this.driver.addContact(g,h)},removeContact:function(g,h){this.driver.removeContact(g,h)},getStatus:function(g){this.driver.getStatus(g)},setMyStatus:function(g,h){this.driver.setPresence(g,h)},searchContact:function(g){this.driver.searchContact(g)},logout:function(){this.driver.logout();f.removeEvent(f.eventName.SENDMSG);f.removeEvent(f.eventName.SEARCHCONTACT);f.removeEvent(f.eventName.GETARCHIVES);f.removeEvent(f.eventName.RENAMEGROUP);f.removeEvent(f.eventName.SENDDATA);f.removeEvent(f.eventName.SENDDATA);f.removeEvent("startCall");f.removeEvent("webrtcIceCandidate");f.removeEvent("SDP");f.removeEvent("endCall");f.removeEvent("acceptCall")},closeSession:function(){this.driver.setPresence(a.Offline,a.Offline)},getListOfStatus:function(){return a},renameGroup:function(g){this.driver.renameGroup(g)},getArchives:function(g){this.driver.getArchives(g)},cleanArchives:function(g){this.driver.cleanArchives(g)},getRoom:function(g){this.driver.getRoom(g)},joinRoom:function(g){this.driver.joinRoom(g)},leaveRoom:function(g){this.driver.leaveRoom(g)},discover:function(g){this.driver.discover(g)}});return d});define("DS/RTDriver/RTUser",["UWA/Class","UWA/Class/Events","DS/RTProxyDriver/RTLogger","DS/RTDriver/RTUserStatus"],function(c,b,d,a){d.debug("3DIM - RTUser load");var e=c.extend(b,{init:function(f){this.userId=f.userId;this.userName=(f.userName===undefined)?this.userId:f.userName;this.status=a.Offline;if(f.status){this.status=a[f.status]?a[f.status]:a.Offline}},getId:function(){return this.userId},getName:function(){return this.userName},setStatus:function(f){this.status=f},getStatus:function(){return this.status}});return e});define("DS/RTDriver/drivers/NODE",["UWA/Class","UWA/Class/Events","DS/RTDriver/RTUser","DS/RTDriver/RTDetectClient","DS/RTDriver/RTGroup","DS/WAFData/WAFData","DS/PlatformAPI/PlatformAPI","DS/DSNodeSocketioClient/DSNodeSocketioClient","DS/RTProxyDriver/RTLogger"],function(b,k,f,m,l,g,h,i,j){j.addLevel("nodeDriver","green");j.nodeDriver("driver nodejs load 7/18/2019");var d={};var e=undefined;var a={Online:"available",Away:"away",Busy:"busy",DND:"dnd",Idle:"available",ON_THE_PHONE:"chat",Offline:"xa",Unknown:"xa"};var c=b.extend(k,{init:function(n){j.nodeDriver("init");this.MAX_CONNECTION_TRIES=5;this.url=n.url.replace(":5281",":443").replace("/rest","").replace(":443:443",":443");this.credentials=n.credentials;if(this.credentials.jid&&this.credentials.jid.indexOf("@")!=1){this.credentials.jid=this.credentials.jid.split("@")[0]}this.start_time=undefined;this.sid=n.sid;this.domaineName=n.domaineName;this.myStatus=undefined;this.username=n.username;this.webSocket={};this.devEnv=n.devEnv;this.passportUrl=n.passportUrl;this.connection=undefined;this.roster={};this.loginsToSub=[];e=this},tryLogin:function(n){j.nodeDriver("login user "+this.credentials.jid+" on tenant "+this.domaineName);this.tryConnect(n)},tryConnect:function(q){try{this.io=q;this.webSocket=q.connect(this.url,{forceNew:true,reconnection:false,reconnectionDelay:1000,reconnectionDelayMax:this.MAX_CONNECTION_TRIES*1000,reconnectionAttempts:this.MAX_CONNECTION_TRIES,timeout:15000,transports:["websocket"]});if(this.devEnv){document.webSocket=this.webSocket}e=this;if(this.webSocket){this.webSocket.onmessage=this.onMsgReceived;if(isNaN(this.MAX_CONNECTION_TRIES)){return j.nodeDriver("MAX_CONNECTION_TRIES is not a number")}this.webSocket.io.reconnectionAttempts(this.MAX_CONNECTION_TRIES);this.webSocket.io.reconnectionDelayMax(this.MAX_CONNECTION_TRIES*1000);var p,n={search:e.onSearchReceived,message:e.onMessage,presence:e.onPresenceChanged,roster:e.onRosterChanged,data:e.onDataReceived,roomInfos:e.roomInfosReceived,userInfo:e.userInfoReceived,sendScreen:e.onScreenReceived,stream:e.onStreamReceived,addContact:e.onAddContact,group:e.onGroupAdded,"3dimError":function(r){var s=r.error?r.error:r;j.nodeDriver("3DIM [ERROR] ");j.nodeDriver(r)},loginOK:e.onLoginOK,loginKO:e.onLoginKO,archive:e.onArchivesReceived,connectionOK:function(){},cleanRoom:e.onArchivesCleanedReceived,room:e.onRoomReceived,renameGroup:e.onGroupRenamed,removeGroup:e.onGroupRemoved,removeContact:e.onContactRemoved,disconnect:e.onDisconnect,leaveroom:e.onLeaveRoom,joinroom:e.onJoinRoom,miscellaneous:e.onSpecialEvent,connect_timeout:e.onConnectError,reconnect:e.onConnectError,reconnecting:e.onConnectError,reconnect_attempt:e.onReConnectAttempt,reconnect_error:e.onConnectError,reconnect_failed:e.onConnectError,connect_error:e.onConnectError,inviteSent:e.onInviteSent,inviteToCall:e.onInviteToCall,callEnded:e.onCallEnded,callAccepted:e.onCallAccepted,webrtcIceCandidate:e.onWebRTCIceCandidate,SDPreceived:e.onSDPreceived,callEvent:e.onCallEvent,media:e.onMediaReceived,coreview:e.onCoreview,discovered:e.onDiscover};for(p in n){this.webSocket.on(p,(function(r){return function(s){j.nodeDriver("[EVENT RECEIVED] "+r+" [DATA] "+JSON.stringify(s));j.nodeDriver(s);if(typeof n[r]==="function"){n[r](s)}else{j.nodeDriver("An event is not associated with a function : "+r)}}})(p))}this.webSocket.on("connect",function(r){j.nodeDriver("connected to server, now trying to login. "+r);e.getServiceTicket(true)})}}catch(o){j.nodeDriver("error login: "+o)}},login:function(){this.tryLogin(i)},getServiceTicket:function(n,s){j.nodeDriver("getServiceTicket ");if(!this.passportUrl){this.passportUrl=h.getApplicationConfiguration("app.urls.passport")}if(!this.passportUrl){if(n){this.serverLogin()}return j.error("NodeDriver has no passportUrl set")}var p=this;var r=this.passportUrl+"/login?service=3DSIM";var q=function(t){j.nodeDriver("Retrieved from PASSPORT : "+JSON.stringify(t));if(!t){return console.error("no answer from Passport")}if(t.access_token){p.credentials.password=t.access_token}else{try{p.credentials.password=JSON.parse(t).access_token}catch(u){console.error(u)}}if(n){p.serverLogin()}};var o={type:"json",onComplete:q,onFailure:function(t){j.nodeDriver(t)},onTimeout:function(t){j.nodeDriver(t)}};if(this.devEnv){return q('{"access_token":"osef"}')}g.authenticatedRequest(r,o)},serverLogin:function(){this.webSocket.emit("login",{login:this.credentials.jid,username:this.username,st:this.devEnv?"osef":this.credentials.password,tenant:this.domaineName,clientDevice:m.getClientInfos()})},onReConnectAttempt:function(n){if(isNaN(n)){return j.nodeDriver("socket io onReConnectAttempt arg is not a number !")}if(!e.webSocket||!e.webSocket.io){return false}e.webSocket.io.reconnectionDelay(n*1000);j.nodeDriver("RTC NODE "+n+" tries to connect to RTC server have occured, the reconnection delay has been raised to "+n+"s");if(n>=e.MAX_CONNECTION_TRIES){j.nodeDriver("RTC NODE max tries quantity have been reached. Stopping connection attempts");e.webSocket.io.reconnection(false);e.webSocket.close()}},onConnectError:function(n){j.nodeDriver("generic connection handler raised")},onContactRemoved:function(n){j.nodeDriver("onContactRemoved "+JSON.stringify(n));if(!n||!n.group||!n.group.name||!n.user||!n.user.login){return j.nodeDriver("onContactRemoved bad args")}n.fromDriver=true;e.dispatchEvent("REMOVECONTACT",[n]);try{delete e.roster[n.group.name].users[n.user.login]}catch(o){j.node("unable to remove user from roster")}},onGroupRemoved:function(o){j.nodeDriver("onGroupRemoved "+JSON.stringify(o));if(!o||!o.name){return j.nodeDriver("onGroupRemoved bad args")}var n=[{name:o.name,removeGroup:true}];e.buildBuddyList(n)},onLoginOK:function(o){j.nodeDriver("loginOK !");var n={userId:o.user.login,status:o.user.presence.show,username:o.user.username,user_id:o.user.user_id,data:o,clientDevice:m.getClientInfos()};e.dispatchEvent("CONNECTED",[n])},onLoginKO:function(n){j.nodeDriver("loginKO : "+JSON.stringify(n))},chatWith:function(n){e.webSocket.emit("chatwith",n)},roomInfosReceived:function(n){j.nodeDriver("roomInfosReceived : ");e.dispatchEvent("ROOMINFOSRECEIVED",[n])},userInfoReceived:function(n){j.nodeDriver("userInfoReceived : ");e.dispatchEvent("USERINFOSRECEIVED",[n])},getUserInfo:function(n){j.nodeDriver("getUserInfo : ");this.webSocket.emit("getUserInfo",n)},logout:function(){this.users={};this.roster={};this.empty={};this.myStatus=undefined;if(this.webSocket&&this.webSocket.io){this.webSocket.io.disconnect()}},onRoomReceived:function(n){var o=n.room;if(!o||!o.room_id){return j.nodeDriver("onRoomReceived bad args")}if(!e.rooms||!e.rooms[o.room_id]){if(!e.rooms||!e.rooms[o.room_id]){e.rooms={}}e.rooms[o.room_id]=true}e.dispatchEvent("ROOM",n)},getRoomInfos:function(n){e.webSocket.emit("getRoomInfos",n.room_id)},getRoom:function(n){e.webSocket.emit("getRoom",n)},joinRoom:function(n){e.webSocket.emit("joinRoom",n)},leaveRoom:function(n){e.webSocket.emit("leaveRoom",n)},onMessage:function(q){j.nodeDriver("onMessage : "+JSON.stringify(q));var n=q.message;try{n=decodeURIComponent(escape(window.atob(n)))}catch(p){j.nodeDriver("driver onMessage - unable to decode the message "+n)}var o={origin:q.origin,data:q.data,message_id:q.message_id,msg_id:q.message_id,to:q.author.login===e.credentials.jid?q.room_id:e.credentials.jid,from:q.author.login,username:q.author.username||q.author.login,typeMsg:q.type,activeArchive:true,msg:n,status:q.author&&q.author.presence?q.author.presence.show||"Online":"Offline",where:undefined,login:q.author.login,roomId:q.room_id};if(o.origin=="data"){e.onDataReceived(q)}else{e.dispatchEvent("ONMESSAGERECEIVED",[o])}e.webSocket.emit("setMessageRead",{room_id:o.roomId,message_id:o.message_id})},sendMessage:function(n){this.webSocket.emit("message",{message:btoa(unescape(encodeURIComponent(n.msg.msg))),room:n.msg.room,uuid:n.msg.uuid})},uploadMedia:function(n){this.webSocket.emit("uploadMedia",n)},getMedias:function(n){this.webSocket.emit("getMedias",n)},coreview:function(n){this.webSocket.emit("coreview",n)},onMessageSys:function(n){j.nodeDriver("onMessageSys : "+n)},onDataReceived:function(o){j.nodeDriver("onDataReceived : "+JSON.stringify(o));if(!o||!o.author||!o.message){return j.nodeDriver("onDataReceived : bad format received")}if(typeof o.message=="string"&&o.message.indexOf("CATRTC")!=-1){return false}var n={to:o.author.login===e.credentials.jid?o.room_id:e.credentials.jid,from:o.author.login,username:o.author.username,typeMsg:o.type,status:o.author&&o.author.presence?o.author.presence.show||"Online":"Offline",where:undefined,activeArchive:false,login:o.from,data:o.message.data||o.message,typeData:o.message.typeData,message_id:o.message_id,roomId:o.room_id,fileName:o.message.fileName,fileId:o.message.fileId,nbpart:1,numpart:1,origin:o.origin};e.dispatchEvent("ONMESSAGERECEIVED",[n])},onScreenReceived:function(n){var o={to:e.credentials.jid,from:n.from,login:n.from,roomId:n.room,screenData:n.screenData};e.dispatchEvent("ONSCREENRECEIVED",[o])},onStreamReceived:function(n){var o={to:e.credentials.jid,from:n.from,login:n.from,roomId:n.room,stream:n.stream};e.dispatchEvent("ONSTREAMRECEIVED",[o])},onRosterChanged:function(n){j.nodeDriver("onRosterChanged : "+n);e.buildBuddyList(n)},onPresenceChanged:function(o){var p,q,n={userId:o.login,status:o.presence.show,username:o.username};e.dispatchEvent("ONPRESENCERECEIVED",[n]);for(p in e.roster){for(q in e.roster[p].users){if(q==o.login){e.roster[p].users[q].presence=o.presence;e.roster[p].users[q].status=o.presence.show}}}},onDisconnect:function(o){j.nodeDriver("disconnection : "+o);var n={userId:e.credentials.jid,status:"Offline"};e.dispatchEvent("ONPRESENCERECEIVED",[n]);e.dispatchEvent("DISCONNECTED",[{forced:o==="transport close"}])},onSearchReceived:function(q){j.nodeDriver("onSearchReceived : "+q);var n=[];for(var o=0;o<q.users.length;o++){var r={userId:q.users[o].login,userName:q.users[o].username,status:q.users[o].presence&&q.users[o].presence.show?q.users[o].presence.show:"Offline"};var p=new f(r);n.push(p);e.dispatchEvent("ONPRESENCERECEIVED",[p])}if(e.nextSearchIsForShareAPI){e.dispatchEvent("RESULTOFSEARCHFORSEARCHAPI",[n]);e.nextSearchIsForShareAPI=false;return true}e.dispatchEvent("RESULTOFSEARCH",[n]);return true},onArchivesReceived:function(q){j.nodeDriver("- archive received : "+JSON.stringify(q));if(!q.room_id){return j.nodeDriver("received a message without room_id : "+JSON.stringify(q))}var n=q.message;if(!(q.type==="archive_qty"||n==="3DIMmessages3DIMsoon3DIMdeleted3DIM"||n==="3DIMmessages3DIMdeleted3DIM")){try{n=decodeURIComponent(escape(window.atob(n)))}catch(p){j.nodeDriver("driver onArchivesReceived - unable to decode the message "+n)}}var o={origin:q.origin,data:q.data,to:q.room_name,from:q.login,username:q.username,typeMsg:q.type,msg:n,status:null,where:null,login:q.login,isSend:e.credentials.jid.split("/")[0]==q.login?true:false,dateMsg:q.date?q.date+"Z":null,type:q.type,msg_id:q.message_id,message_id:q.message_id,roomID:q.room_name,read_date:q.read_date,uuid:q.room_id};if(q.type==="archive_qty"){o.archive_qty=parseInt(q.message?q.message:"0",10);j.nodeDriver("- onArchivesReceived : waiting for "+o.archive_qty+" archived messages in the room "+q.room_id+" / "+q.room_name)}e.dispatchEvent("ONARCHIVERECEIVED",[o])},onArchivesCleanedReceived:function(n){j.nodeDriver("- archive Cleaned : "+JSON.stringify(n));if(!n||!n.uuid){return j.nodeDriver("- archive Cleaned bad args")}var o={uuid:n.uuid,qty:"some",type:"archiveCleaned"};e.dispatchEvent("ONARCHIVERECEIVED",[o]);return true},setPresence:function(n,o){j.nodeDriver("setPresence : "+n+" - "+o);if(this.webSocket){this.webSocket.emit("setPresence",{login:this.credentials.jid,statusMsg:n,show:o})}},requestForSubscribe:function(n){},sendSystemMsg:function(n){},sendNotif:function(n){},sendData:function(r){j.nodeDriver("sendData "+r.data);var o=0;var t=10000;var s=r.data.length;var q=Math.floor(s/t);if(q*t<s){q++}var p=0;var n=(q>1)?t:s;this.webSocket.emit("data",{from:e.credentials.jid,data:{robotName:r.robotName,typeData:r.typeData,type:"DSRTData",dataSize:s,data:r.data,persisted:r.persisted,accept:r.accept,fileName:r.fileName,fileId:r.fileId,nbpart:r.data=="progress"?r.nbpart:q,numpart:r.data=="progress"?r.numpart:o},room:r.roomId,uuid:r.roomId})},sendStream:function(n){j.nodeDriver("sendData");this.webSocket.emit("stream",{from:e.credentials.jid,stream:n.stream,room:n.roomId})},getBuddylist:function(){if(this.webSocket){this.webSocket.emit("getRoster",{from:this.credentials.jid})}},onAddContact:function(o){var n=[{name:o.name,login:o.user.login,username:o.user.username,status:o.user.presence?(o.user.presence.show||o.user.presence.statusMsg):"Offline"}];e.buildBuddyList(n)},onGroupAdded:function(p){j.nodeDriver("onGroupAdded");var o,q,n;if(!p||!p.name||!p.users){return j.nodeDriver("[error] onGroupAdded received bad args")}e.dispatchEvent("GROUP",p);q=e.roster[p.name];if(!q){q=new l({groupName:p.name,groupId:p.name});e.roster[q.groupId]=q}if(e.roster[q.groupId]&&e.roster[q.groupId] instanceof l){for(o=0;o<p.users.length;o++){(function(r){n=new f({userId:r.login,userName:r.username||r.login,status:r.presence.show||r.presence.statusMsg});e.addUserToGroup(e.roster[q.groupId],n);e.dispatchEvent("ONPRESENCERECEIVED",[n])})(p.users[o])}}else{j.nodeDriver("[error] onGroupAdded unable to add group to roster")}e.dispatchEvent("BUDDYLISTBUILT",[e.roster])},addUserToGroup:function(o,n){var p=n.userId;if(!o.users){o.users={}}if(o.users[p]){return j.nodeDriver("[error] addUserToGroup user "+p+" is already in the group "+o.groupId)}o.users[p]=n;j.nodeDriver("addUserToGroup user "+p+" added to the group "+o.groupId)},buildBuddyList:function(p){j.nodeDriver("buildBuddyList");if(p.length>0){for(var n=0;n<p.length;n++){var r=e.roster[p[n].name];if(r&&r.toRemove){r.toRemove=false}if(!r){r=new l({groupName:p[n].name,groupId:p[n].name});e.roster[p[n].name]=r}if(r){if(p[n].removeGroup){e.roster[p[n].name].toRemove=true;continue}var q={userId:p[n].login,userName:p[n].username,status:p[n].status?p[n].status:"Offline"};var o=new f(q);if(p[n].removeUser){o.toRemove=true}e.addUserToGroup(r,o);e.dispatchEvent("ONPRESENCERECEIVED",[o])}}e.dispatchEvent("BUDDYLISTBUILT",[this.roster])}},onGroupRenamed:function(n){j.nodeDriver("onGroupRenamed "+JSON.stringify(n));if(!n||!n.oldName||!n.name){return j.nodeDriver("onGroupRenamed bad args")}if(e.roster[n.oldName]){e.roster[n.name]=new l({groupName:n.name,groupId:n.name});e.roster[n.name].users=e.roster[n.oldName].users;delete e.roster[n.oldName];e.roster[n.oldName]={toRemove:true};e.dispatchEvent("BUDDYLISTBUILT",[e.roster])}else{e.onGroupAdded(n)}},addGroup:function(n){if(this.webSocket){this.webSocket.emit("addGroup",{from:this.credentials.jid,name:n})}},removeGroup:function(n){if(this.webSocket){this.webSocket.emit("removeGroup",{name:n})}},renameGroup:function(n){if(this.webSocket&&n.oldName&&n.newName){this.webSocket.emit("renameGroup",n)}else{j.nodeDriver("renameGroup bad args")}},addContact:function(n,o){if(this.webSocket){this.webSocket.emit("addContact",{name:o,login:n.userId,tenant:this.domaineName})}},removeContact:function(n,o){if(this.webSocket){this.webSocket.emit("removeContact",{name:o,login:n})}},getStatus:function(n){if(this.webSocket){this.webSocket.emit("getPresence",{from:this.credentials.jid,login:n.login,to:n.userId})}},UpdateStatus:function(o,n){},searchContact:function(n){if(this.webSocket){this.webSocket.emit("search",{login:this.credentials.jid,text:n,tenant:this.domaineName})}if(n.isForShareAPI){this.nextSearchIsForShareAPI=true}},auth:function(n){},analyseForCATIA:function(n){},setPresenceForCATIA:function(n){},getArchives:function(n){j.nodeDriver("NODE getArchives "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("getMessages",n)}},cleanArchives:function(n){if(this.webSocket){this.webSocket.emit("cleanRoom",n)}},startCall:function(n){j.nodeDriver("NODE startCall "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("startCall",n)}},endCall:function(n){j.nodeDriver("NODE endCall "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("endCall",n)}},acceptCall:function(n){j.nodeDriver("NODE acceptCall "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("acceptCall",n)}},webrtcIceCandidate:function(n){j.nodeDriver("NODE webrtcIceCandidate "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("iceCandidate",n)}},SDP:function(n){j.nodeDriver("NODE SDP "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("SDP",n)}},onInviteSent:function(n){e.dispatchEvent("inviteSent",[n])},onCallEvent:function(n){e.dispatchEvent("callEvent",[n])},onCallEventFromView:function(n){j.nodeDriver("NODE onCallEventFromView "+JSON.stringify(n));if(this.webSocket){this.webSocket.emit("callEvent",n)}},onInviteToCall:function(n){e.dispatchEvent("inviteToCall",[n])},onCallEnded:function(n){e.dispatchEvent("callEnded",[n])},onCallAccepted:function(n){e.dispatchEvent("callAccepted",[n])},onWebRTCIceCandidate:function(n){e.dispatchEvent("webrtcIceCandidateReceived",[n])},onSDPreceived:function(n){e.dispatchEvent("SDPreceived",[n])},onMediaReceived:function(n){e.dispatchEvent("mediaReceived",[n])},onCoreview:function(n){e.dispatchEvent("COREVIEW",[n])},onLeaveRoom:function(n){e.dispatchEvent("roomLeft",[n])},onJoinRoom:function(n){e.dispatchEvent("roomJoined",[n])},onSpecialEvent:function(n){e.dispatchEvent("miscellaneous",[n])},updateRoom:function(n){if(this.webSocket){this.webSocket.emit("updateRoom",n)}},onDiscover:function(n){e.dispatchEvent("discovered",[n])},discover:function(n){if(this.webSocket){this.webSocket.emit("discover",n)}},joinPublicRoom:function(n){if(this.webSocket){this.webSocket.emit("joinPublicRoom",n)}}});return c});