define("DS/ENOXVersionExplorerModel/VersionTreeDocumentModel",["DS/LifecycleDAGModel/DAGDocumentModel","DS/ENOXVersionExplorerUtils/VersionExplorerSettings","DS/LifecycleDAGUtils/ArrayFunctions",],function(a,b,c){return a.extend({init:function(d){this._parent(d);this.highlightedLinks=[]},usePersistentColor:function(){if(this.persistentColor!==true&&b.historyConfig&&b.historyConfig.settings&&b.historyConfig.settings.thumbnailGraph&&b.historyConfig.settings.thumbnailGraph.persistentColor==="true"){this.persistentColor=true}return this.persistentColor},highlightLink:function(d){if(Array.isArray(d)&&d.length===2){this.highlightedLinks.push(d);this._trueRoot._modelEvents.publish({event:"highlightLink",data:c.intersectionDifference(this._nodeList,d,function(f,g){return f.options.id===g})[0].intersection,})}},unhighlightLink:function(e){if(Array.isArray(e)&&e.length===2){var d=this.highlightedLinks.findIndex(function(f){return(f[0]===e[0]&&f[1]===e[1])||(f[1]===e[0]&&f[0]===e[1])});if(d>=0){this._trueRoot._modelEvents.publish({event:"unhighlightLink",data:c.intersectionDifference(this._nodeList,this.highlightedLinks.splice(d,1)[0],function(f,g){return f.options.id===g})[0].intersection,})}}},getHighlightedLinksData:function(){var d=[],e=this;if(this.highlightedLinks.length){d=this.highlightedLinks.reduce(function(f,g){f.push(c.intersectionDifference(e._nodeList,g,function(h,i){return h.options.id===i})[0].intersection);return f},d)}return d}})});define("DS/ENOXVersionExplorerModel/VersionTreeNodeModel",["DS/LifecycleDAGModel/DAGNodeModelBase","UWA/Core",],function(d,c){var a=null;var b=function(k,j,f,i,e,h){if(!k){this.options={isEmpty:true}}else{if(k instanceof d){this.options={};for(var g in k.options){(g!=="children")&&(this.options[g]=c.clone(k.options[g]))}}else{this.options={id:k,creationDate:f,ancestors:i,grid:c.extend(j,{__isLeaf__:e,context:"",creationDate:f,__isActive__:false}),label:j.title,data:{id:k,physicalid:k,type:h,displayName:j.title,revision:j.code,name:j.title}}}}d.call(this,this.options)};b.prototype=Object.create(d.prototype);b.prototype.constructor=b;b.prototype.isLeaf=function(){return(this.options.grid.__isLeaf__===true)};b.prototype.isActive=function(){return(this.options.grid.__isActive__===true)};b.prototype.clone=function(){return new b(this)};b.prototype.sortFunction=function(f,e){(!e)&&(f=this,e=f);return(f.options.creationDate.getTime()<e.options.creationDate.getTime())};b.prototype.addMergeParent=function(e){if(e instanceof d){e=e._getID()}else{if(!(typeof e==="string"&&e.length)){throw Error("VersionTreeNodeModel.addMergeAncestor:parent cannot be null")}}Array.isArray(this.options.ancestors)&&this.options.ancestors.findIndex(function(f){return f.id===e&&f.semantic==="I"})<0&&this.options.ancestors.push({semantic:"I",id:e})};b.prototype._getID=function(){return this.isEmpty()?this._id:this.options.id};b.prototype.refreshNodeData=function(g){g=g||{};var f=(g instanceof d)?g.options.grid:g;for(var e in f){if(!(e.startsWith("__")&&e.endsWith("__"))){if(e==="title"){var h=f.title||f.label;if(h&&(this.options.label!==h)){this.setAttribute("title",this.options.data.displayName=this.options.label=h)}}else{if(f[e] instanceof Date){f[e].getTime()!==this.options.grid[e].getTime()&&this.setAttribute(e,f[e])}else{if((f[e]!==this.options.grid[e])){this.setAttribute(e,f[e])}}}}}if(g.options&&Array.isArray(g.options.ancestors)&&g.options.ancestors.length){this.options.ancestors=g.options.ancestors}};b.prototype.getAttribute=function(e){return this.options.grid[e]};return b});