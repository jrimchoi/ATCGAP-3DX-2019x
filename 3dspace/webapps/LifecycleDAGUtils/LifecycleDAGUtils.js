define("DS/LifecycleDAGUtils/ArrayFunctions",["UWA/Array","UWA/Internal/Polyfill/NativeObjects"],function(c,b){var a={};if(!Array.prototype.find){Array.prototype.find=function(d){if(this===null){throw new TypeError("Array.prototype.find called on null or undefined")}if(typeof d!=="function"){throw new TypeError("predicate must be a function")}var j=Object(this);var g=j.length>>>0;var e=arguments[1];var h;for(var f=0;f<g;f++){h=j[f];if(d.call(e,h,f,j)){return h}}return undefined}}if(!Array.prototype.findIndex){Array.prototype.findIndex=function(d){if(this===null){throw new TypeError("Array.prototype.findIndex called on null or undefined")}if(typeof d!=="function"){throw new TypeError("predicate must be a function")}var j=Object(this);var g=j.length>>>0;var e=arguments[1];var h;for(var f=0;f<g;f++){h=j[f];if(d.call(e,h,f,j)){return f}}return -1}}a.separate=function(d,g){if(!Array.isArray(this)){throw new TypeError("ArrayFunctions.separate called on a non array object")}var l=this;var h=l.length;var k;var e=[],j=[];for(var f=0;f<h;f++){k=l[f];if(d.call(g,k,f,l)){e.push(k)}else{j.push(k)}}return{match:e,dontMatch:j}};a.intersectionDifference=function(m,l,n,k){if(!Array.isArray(m)&&!Array.isArray(l)){throw Error("ArrayUtils.setDifference: both inputs should be an array")}var e=m.slice(),d=l.slice(),g={intersection:[],difference:undefined},f={intersection:[],difference:undefined};for(var j=(k===true?e.length-1:0);(k===true?j>=0:j<e.length);j=(k===true?j-1:j+1)){for(var h=(k===true?d.length-1:0);(k===true?h>=0:h<d.length);h=(k===true?h-1:h+1)){if(n(e[j],d[h])){g.intersection.unshift(e.splice(j,1)[0]);f.intersection.unshift(d.splice(h,1)[0]);(!k)&&(j-=1);break}}}g.difference=e;f.difference=d;return[g,f]};a.insert=function(e,d){if(!Array.isArray(this)){throw new TypeError("ArrayFunctions.insert called on a non array object")}this.splice(d,0,e)};a.orderedInsert=function(f,h,e,g){if(!Array.isArray(this)){throw new TypeError("ArrayFunctions.orderedInsert called on a non array object")}var d=e=(e>=0&&e<=this.length?e:this.length);h=(h>=0?h:0);g=(typeof g==="function")?g:function(j,i){return(i.toString()>j.toString())};while((d>h)&&g(f,this[d-1])){d=d-1}this.splice(d,0,f)};a.MapArray=function(d){if(!Array.isArray(d)||!d.length){throw Error("Invalid initialization")}this.array=d};a.MapArray.prototype.mapToValue=function(h){var f=0;if(h){var e=h.slice(16);var g=parseInt("0x"+e);f=g%this.array.length}else{f=0}var d={index:f,value:this.array[f]};return d};a.CircularArray=function(e,d){this.startIndex=d||0;if(!Array.isArray(e)||!e.length||d>=(e.length-1)||d<0){throw Error("Invalid initialization")}this.array=e;this.currentIndex=d};a.CircularArray.prototype.next=function(e){var d;if(this.array.length===1){d={index:0,value:this.array[0]}}else{e=(e>=0&&e<this.array.length)?e:this.currentIndex;this.currentIndex=(e>=0&&e<this.array.length-1)?e+1:0;d={index:this.currentIndex,value:this.array[this.currentIndex]}}return d};a.CircularArray.prototype.prev=function(e){var d;if(this.array.length===1){d={index:0,value:this.array[0]}}else{e=(e>=0&&e<this.array.length)?e:this.currentIndex;this.currentIndex=(e===0)?this.array.length-1:e-1;d={index:this.currentIndex,value:this.array[this.currentIndex]}}return d};a.CircularArray.prototype.mapToValue=function(g){var f=parseInt("0x"+g);var e=f%this.array.length;var d={index:e,value:this.array[e]};return d};a.CircularArray.prototype.getCurrent=function(){return(this.array&&this.array.length&&this.currentIndex>=0)?{index:this.currentIndex,value:this.array[this.currentIndex]}:undefined};a.CircularArray.prototype.setCurrent=function(d){return(this.array&&this.array.length)&&(this.currentIndex=this.array.indexOf(d),this.currentIndex)};a.CircularArray.prototype.resetCurrentIndex=function(d){this.currentIndex=d||this.startIndex||0};return a});