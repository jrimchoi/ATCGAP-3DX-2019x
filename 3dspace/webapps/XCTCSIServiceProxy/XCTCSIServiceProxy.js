define("DS/XCTCSIServiceProxy/XCTCSIConnection",["UWA/Class","UWA/Class/Promise","DS/CoreEvents/Events","DS/CSICommandBinder/CSICommandBinder","DS/XCTInfServiceProxy/XCTInfServiceProxy","DS/ExperienceKernel/ExperienceKernel","DS/WAFData/WAFData","DS/XCTInfUtilsWeb/XCTLogger","i18n!DS/XCTCSIServiceProxy/assets/nls/XCTCSIServiceProxy"],function(a,h,c,f,g,j,i,b,k){var d=function(q,p,m){if(q.forWho==="EK.Hypervisor"||q.forWho==="xct.pool.ems"||q.forWho==="xct.pool.xrender"||q.forWho==="xct.pool.cityillustration"||q.forWho==="xct.pool.producthighlight"||q.forWho==="XCTRenBatchRenderingPool"||q.forWho==="XCTRenPreviewSessionPool"||q.forWho==="StudioModelCSI"){var l=q.passportURL;var o=q.forWho==="XCTRenBatchRenderingPool"?"https://"+this._hypervisorIp:l;var n=encodeURIComponent(o).replace(/'/g,"%27").replace(/"/g,"%22");i.authenticatedRequest(l+"/login?service="+n,{method:"GET",headers:{Accept:"application/json"},onComplete:function(s){var r=JSON.parse(s).access_token;p(o,r)},onFailure:function(s,r){m("Failed to retrieve ticket");b.error("Failed to retrieve ticket: "+r)}})}};var e=a.extend(a.Events,{init:function(l){this._self="XCTCSIConnection";this._connected=false;if(l.hypervisorUrl){this._hypervisorUrl=l.hypervisorUrl;this._hypervisorIp=this._hypervisorUrl.split(":")[0];this._webSocketPort=this._hypervisorUrl.split(":")[1]}else{this._hypervisorUrl=l.hypervisorIp+":"+l.webSocketPort;this._hypervisorIp=l.hypervisorIp;this._webSocketPort=l.webSocketPort}this._ssl=l.ssl||false;this._destinationPoolName=l.destinationPoolName;this._clientPoolName=l.clientPoolName;this._autoReconnectTimeout=l.autoReconnectTimeout||1000;this._pool=f.getPool(l.clientPoolName);this._sessionId=l.sessionId},connect:function(){if(this._connected){return h.resolve()}return this._doConnect()},disconnect:function(){b.log(this._self+": Disconnect from Hypervisor");this._clearTimeout();this._autoReconnectTimeout=undefined;this._doDisconnect();this._updateState(false);return h.resolve()},isConnected:function(){return this._connected},getNode:function(){return this._node},getServicesNode:function(){return this._servicesNode},_doConnect:function(){this._clearTimeout();var l=this;return new h(function(p,o){function n(){l._updateState(true);p(l)}function m(){l._updateState(false);o(new Error(k.error_failedToConnectToHypervisor))}l._node=l._pool.createNode({hypervisorIp:l._hypervisorIp,webSocketPort:l._webSocketPort,ssl:l._ssl,onHypervisorConnect:n,onHypervisorDisconnect:m,onDisconnect:m,authentication:d.bind(l)});l._servicesNode=l._node.select(l._destinationPoolName,j.Criterion.identifier(l._sessionId||g.getSessionId()))})},_doDisconnect:function(){if(this._node){this._node.stop();this._node=undefined}this._servicesNode=undefined},_clearTimeout:function(){if(this._timeout){clearTimeout(this._timeout);this._timeout=undefined}},_updateState:function(m){var l=this._connected!==m;if(l){this._connected=m;this.dispatchEvent("connectionChanged");if(this._connected){b.log(this._self+": Connected to Hypervisor")}else{b.log(this._self+": Disconnected from Hypervisor")}c.publish({event:"Connection:CSIchange",data:{connected:this._connected}})}if(!this._connected){this._doDisconnect();if(this._autoReconnectTimeout){this._clearTimeout();this._timeout=setTimeout(this._doConnect.bind(this),this._autoReconnectTimeout)}}}});return e});define("DS/XCTCSIServiceProxy/XCTCSIConnectorView",["UWA/Core","UWA/Controls/Abstract"],function(c,b){var a=b.extend({init:function(){this.buildSkeleton()},buildSkeleton:function(){if(this.elements){if(!this.elements.container){this.elements.container=c.createElement("div",{Class:"connectorView",styles:{width:"100%",height:"100%"}})}}return this}});return a});define("DS/XCTCSIServiceProxy/XCTCSIServiceProxy",["UWA/Core","UWA/Class","UWA/Class/Events","UWA/Class/Promise","DS/CSICommandBinder/CSICommandBinder","DS/i3DXCompassPlatformServices/i3DXCompassPlatformServices","DS/WAFData/WAFData","DS/XCTInfServiceProxy/XCTInfServiceProxy","DS/XCTInfUtilsWeb/XCTLogger","i18n!DS/XCTCSIServiceProxy/assets/nls/XCTCSIServiceProxy"],function(f,o,g,l,j,b,m,k,c,p){var n="plm_init_session_output";var q="is_logged_in";var d="role_id";var i="user_id";var h="collabspace";var e="organization";var a=o.extend(g,{init:function(r){r=r||{};this.loggedIn=false;this._connectionListener=this._connectionListener.bind(this);this.setConnection(r.connection)},_connectionListener:function(){if(!this.connection.isConnected()){this.loggedIn=false;this.loginPromise=undefined}this.dispatchEvent("connectionChanged")},setConnection:function(r){if(this.connection){this.connection.removeEvent("connectionChanged",this._connectionListener)}this.connection=r;if(this.connection){this.connection.addEvent("connectionChanged",this._connectionListener)}this.dispatchEvent("connectionChanged")},loginToLocalVault:function(r){return this.sendRequestInitLocalSession({prettyCommandName:"Login To Local Vault",commandName:"xct.cmd.plm_init_local_session",local_vault_path:r})},login:function(r){if(!this.loginPromise){this.loginPromise=this.retrieveLoginTicket(r).then(function(s){return this._loginWithLoginTicket(s)}.bind(this))}return this.loginPromise},_loginWithLoginTicket:function(r){if(this.loggedIn){return l.resolve()}return k.retrievePlatformUrl().then(function(s){return this.sendRequestInitSession({prettyCommandName:"Login",commandName:"xct.cmd.plm_init_session",server_url:s,login_ticket:r,tenant_id:this.getTenantId()}).then(function(t){var u=t[n];var w=u[q];var v;if(!w){v=l.reject(new Error(p.error_loginFailed))}c.log("Session info",{collabSpace:u[h],organization:u[e],role:u[d],user:u[i],loginTicket:r});return v})}.bind(this))},logout:function(){return this.sendRequest({prettyCommandName:"Logout",commandName:"xct.cmd.plm_close_session",data:{}}).then(function(r){this.loginPromise=undefined;this.loggedIn=false;return r}.bind(this))},retrieve3DDriveUrl:function(){return new l(function(s,r){b.getServiceUrl({serviceName:"3DDrive",platformId:window.widget.getValue("x3dPlatformId"),onComplete:function(t){c.log("3DDrive url"+t);s(t)},onFailure:function(t){c.log("Failed to get 3DDrive URL"+t);r(t)}})})},getFCSTicket:function(r){return new l(function(t,s){r+="tenant="+window.widget.getValue("x3dPlatformId");c.log("Inside the getFCSTicket: "+r);m.authenticatedRequest(r,{method:"GET",type:"json",onComplete:function(u,v){return t({body:u,headers:v})},onFailure:function(u){c.log("Unable to get FCS ticket: "+u);s(u)}})}).then(function(s){var t=s.body;t.csrfToken=s.headers["x-ds-csrftoken"]?s.headers["x-ds-csrftoken"]:s.headers["X-DS-CSRFTOKEN"];t.tenant=window.widget.getValue("x3dPlatformId");return t})},uploadFilesToDrive:function(v,s,u,w){var r=this;var t=new FormData();t.append("__fcs__nohtml",true);t.append(v.jobticket,v.ticket);t.append("file_0",u,w);t.append("file-name",w);t.append("file-title",w);t.append("file-description",w);return fetch(v.actionurl,{method:"POST",body:t}).then(function(x){return x.text()}).then(function(x){return x.trim()}).then(function(x){return r.createFilesinDrive(x,v.csrfToken,"DSROOT",window.widget.getValue("x3dPlatformId"),s,w)})},createFilesinDrive:function(x,w,t,z,v,u){var y={type:"DriveFile",receipt:x,title:u,description:p.msg_uploadFromIRS,file:u};var s=JSON.stringify(y);var r=v+t+"/contents?tenant="+z;return new l(function(B,A){m.authenticatedRequest(r,{method:"POST",type:"json",headers:{"Content-Type":"application/json","X-DS-CSRFTOKEN":w},data:s,onComplete:function(C){B(C)},onFailure:function(C){c.log("Unable to upload files to 3DDrive: "+C.message);c.log("Fail message: "+C.body);A(C)}})}).then(function(){c.log("Successfully Files uploaded to 3DDrive")})},retrievePlatformUrl:function(){c.warn("XCTCSIServiceProxy.retrievePlatformUrl is deprecated. Please use XCTInfServiceProxy.retrievePlatformUrl instead.");return k.retrievePlatformUrl()},retrieveServerUrl:function(){c.warn("XCTCSIServiceProxy.retrieveServerUrl is deprecated. Please use XCTInfServiceProxy.retrievePlatformUrl instead.");return k.retrievePlatformUrl()},retrieveCollabSpaces:function(){c.warn("XCTCSIServiceProxy.retrieveCollabSpaces is deprecated. Please use XCTInfServiceProxy.retrieveCollabSpaces instead.");return k.retrieveCollabSpaces()},getTenantId:function(){if(window.widget){var r=window.widget.getValue("tenantId");return r||window.widget.getValue("x3dPlatformId")}else{return"OnPremise"}},retrieveLoginTicket:function(r){c.log("Start: Retrieve login ticket");var s=r.loginTicket;if(s){c.log("Resolve: Retrieve login ticket");c.log({loginTicket:s});return l.resolve(s)}return k.retrieveLoginTicket(r)},retrieveTransientToken:function(){return k.retrieveTransientToken({serviceUrl:this.connection._hypervisorUrl})},getProductIds:function(r){c.warn("XCTCSIServiceProxy.getProductIds is deprecated. Please use XCTInfServiceProxy.getProductIds instead.");return k.getProductIds(r)},getPhysicalId:function(s,t,r){c.warn("XCTCSIServiceProxy.getPhysicalId is deprecated. Please use XCTInfServiceProxy.getPhysicalId instead.");return k.getPhysicalId(s,t,r)},sendRequest:function(r){var s=r.prettyCommandName||r.commandName.split(".")[2];if(!r.commandParameters){r.commandParameters=new j.Parameters()}this._serializeInput(r.commandParameters,r.data);return this.sendCommand(r).then(function(v){var t;if(r.resultWithParameters){t={csiParameters:v,deserializedOutput:this._deserializeOutput(v)}}else{t=this._deserializeOutput(v)}var u=v.readBool("param_result");if(u){c.log("Resolved command: "+s);return l.resolve(t)}else{c.log("Rejected command: "+s);return l.reject(t)}}.bind(this))},sendRequestInitSession:function(r){var s=r.prettyCommandName||r.commandName.split(".")[2];if(!r.commandParameters){r.commandParameters=new j.Parameters()}r.commandParameters.writeString("server_url",r.server_url);r.commandParameters.writeString("login_ticket",r.login_ticket);r.commandParameters.writeString("tenant_id",r.tenant_id);return this.sendCommand(r).then(function(D){var t=D.readString("plm_init_session_output");if(t){c.log("Login result: "+t)}if(t.includes("Success")){c.log("Resolved command: "+s);var x=D.readBool("is_logged_in");if(x){var w=D.readString("server_url");var v=D.readString("server_name");var y=D.readString("server_version");var A=D.readString("user_id");var C=D.readString("security_context");var z=D.readString("role_id");var B=D.readString("collabspace");var u=D.readString("organization");var E={plm_init_session_output:{collabspace:B,is_logged_in:x,organization:u,role_id:z,security_context:C,server_name:v,server_url:w,server_version:y,user_id:A}};return l.resolve(E)}else{return l.reject(t)}}else{c.log("Rejected command: "+s);return l.reject(t)}})},sendRequestInitLocalSession:function(r){var s=r.prettyCommandName||r.commandName.split(".")[2];if(!r.commandParameters){r.commandParameters=new j.Parameters()}r.commandParameters.writeString("local_vault_path",r.local_vault_path);return this.sendCommand(r).then(function(t){var u=t.readString("plm_init_local_session_output");if(u){c.log("Login result: "+u)}if(u.includes("Success")){c.log("Resolved command: "+s);return l.resolve(u)}else{c.log("Rejected command: "+s);return l.reject(u)}})},subscribeToEvent:function(s,r){if(this.connection.isConnected()){this.connection.getNode().subscribe(this.connection.getServicesNode(),s,r)}},unsubscribeFromEvent:function(r){if(this.connection&&this.connection.isConnected()){this.connection.getNode().unsubscribe(this.connection.getServicesNode(),r)}},sendCommand:function(t){var s=l.deferred();var w=t.prettyCommandName||t.commandName.split(".")[2];c.log("Start command: "+w);var u=function(){if(!this.connection.isConnected()){s.reject("Connection to hypervisor lost")}this.connection.removeEvent("connectionChanged",u)}.bind(this);var r=function(x){this.connection.removeEvent("connectionChanged",u);s.resolve(x)}.bind(this);if(this.connection.isConnected()){this.connection.addEvent("connectionChanged",u);var v=this.connection.getNode().createRequest({destinationNodeId:this.connection.getServicesNode(),command:t.commandName,version:t.commandVersion||1,onComplete:r});v.send(t.beginParameters,t.commandParameters,t.endParameters)}else{c.log("Rejected command: "+w);s.reject()}return s.promise},buildParameters:function(){return new j.Parameters()},_serializeInput:function(s,r){if(f.is(r,"object")){r=JSON.stringify(r)}s.writeString("param_serialized_input",r)},_deserializeOutput:function(s){var r=s.readString("param_serialized_output");return r?JSON.parse(r.trim()):undefined}});return a});define("DS/XCTCSIServiceProxy/XCTPreferences",["UWA/Core","UWA/Class/Model"],function(c,b){var a=b.extend({setup:function(e){var d=this;e=e||{};if(window.widget){window.widget.addEvents({endEdit:function(){d._update()}})}if(e.config){this.mergeConfig(e.config)}this._update()},mergeConfig:function(d){this.config=this.config||{};c.extend(this.config,d)},setAndWrite:function(d,e){this.set(d,e);if(window.widget){window.widget.setValue(this.config[d]||d,e)}},update:function(){this._update()},_update:function(){this.set(this._getPreferences())},_getPreferences:function(){var d={};if(window.widget){for(var e in this.config){if(this.config.hasOwnProperty(e)){var f=window.widget.getValue(this.config[e]);if(this.get(e)!==f){d[e]=window.widget.getValue(this.config[e])}}}}return d}});return a});define("DS/XCTCSIServiceProxy/XCTProductStructurePreview",["UWA/Core","DS/CSICommandBinder/CSICommandBinder"],function(c,a){var b={type:"type.3dexcite.product_structure_preview",serialize:function(d,e){d.writeObjectArray("references","type.3dexcite.product_structure_preview.reference",e.references)},unserialize:function(d){return{references:d.readObjectArray("references","type.3dexcite.product_structure_preview.reference")}}};a.declareType(b);return b});define("DS/XCTCSIServiceProxy/XCTProductStructurePreviewReference",["UWA/Core","DS/CSICommandBinder/CSICommandBinder"],function(c,a){var b={type:"type.3dexcite.product_structure_preview.reference",serialize:function(d,e){d.writeUint64("id",e.id);d.writeString("name",e.name);d.writeObjectArray("instances","type.3dexcite.product_structure_preview.instance",e.instances);d.writeBool("isShape",e.isShape)},unserialize:function(d){return{id:d.readUint64("id"),name:d.readString("name"),instances:d.readObjectArray("instances","type.3dexcite.product_structure_preview.instance"),isShape:d.readBool("isShape")}}};a.declareType(b);return b});define("DS/XCTCSIServiceProxy/XCTCSIPreferenceManager",["UWA/Core","UWA/Class"],function(c,b){var a=b.extend({init:function(e){var d=this;this.widget=e.widget;this.widget.addEvents({endEdit:function(){d.updatePreferences()}});this.updatePreferences()},updatePreferences:function(){var d={hypervisorIp:this.widget.getValue("hypervisorIp"),webSocketPort:this.widget.getValue("hypervisorPort"),context:this.widget.getValue("context"),loginTicket:this.widget.getValue("loginTicket")};c.extend(this,d)}});return a});define("DS/XCTCSIServiceProxy/XCTProductStructurePreviewInstance",["UWA/Core","DS/CSICommandBinder/CSICommandBinder"],function(c,a){var b={type:"type.3dexcite.product_structure_preview.instance",serialize:function(d,e){d.writeString("name",e.name);d.writeUint64("reference_id",e.referenceId)},unserialize:function(d){return{name:d.readString("name"),referenceId:d.readUint64("reference_id")}}};a.declareType(b);return b});define("DS/XCTCSIServiceProxy/XCTCSIConnector",["UWA/Core","UWA/Class","UWA/Class/Promise","DS/XCTCSIServiceProxy/XCTCSIConnection"],function(e,d,c,b){var a=d.extend({init:function(f){this.clientPoolName=f.clientPoolName},createConnection:function(f){f.clientPoolName=this.clientPoolName;return new b(f)}});return a});define("DS/XCTCSIServiceProxy/XCTCSIPreferences",["DS/XCTCSIServiceProxy/XCTPreferences","DS/XCTInfServiceProxy/XCTInfServiceProxy"],function(b,a){var c=b.extend({setup:function(d){this.mergeConfig({hypervisorIp:"hypervisorIp",webSocketPort:"hypervisorPort",context:"context",loginTicket:"loginTicket",rdfUrl:"rdfUrl",service:"service"});this._parent(d);this.reinitialize()},getService:function(){var d=this;if(d.get("service")===undefined){d.reinitialize()}return d.get("service")},getRdfUrl:function(){var d=this;if(d.get("rdfUrl")===undefined){d.reinitialize()}return d.get("rdfUrl")},reinitialize:function(){var d=this;d.update();if(a.isCloudEnv()){d.setAndWrite("service","RDF");a.retrieveDataPrepAuthoringUrl().then(function(e){d.setAndWrite("rdfUrl",e)}).fail(function(){Promise.reject(new Error("No DataPrepAuthoring service URL discovered."))})}}});return c});