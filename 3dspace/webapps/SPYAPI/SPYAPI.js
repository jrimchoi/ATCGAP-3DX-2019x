/*!  Copyright 2014 Dassault Systemes. All rights reserved. */
define("DS/SPYAPI/SensorsAccess",["UWA/Core","UWA/Class"],function(c,a){var b=a.extend({init:function(d){this._parent(d);this._spm=d.spm;this._seqId=!isNaN(d.seqIdx)?d.seqIdx:0},getSequenceName:function(){var d;if(this._spm&&!isNaN(this._seqId)){d=this._spm.getSequenceName(this._seqId)}return d},getGlobalSensors:function(e){var i=[];if(this._spm&&!isNaN(this._seqId)){var h;if(this._spm.dataLevel>=2){h=this._spm.getSharedDataDisplayList(this._seqId)}else{var d=this._spm.getDataDisplayList(this._seqId);var g=d.filter(function(j){return(j.category==="Result")});h=g.length>0?[g[0]]:[]}if(h){var f=(e&&e.sensorsContainerName)?e.sensorsContainerName:"Sensors";h.forEach(function(j){var k=j.getNavDataFrameViewList();k.forEach(function(l){if(l.name===f&&l.getChildren){var m=l.getChildren();m.forEach(function(q){var o={name:q.name,parameters:[]};if(q.getChildren){var p=q.getChildren();if(p&&p.length>0){var r=p[0];if(r&&r.getChildren){var n=r.getChildren();n.forEach(function(s){o.parameters.push({name:s.name,value:s.value,unit:s.unit})});i.push(o)}}}})}})})}}return i}});return b});define("DS/SPYAPI/SimulationPlayerAPI",["UWA/Core","UWA/Class"],function(f,e){var c=function(g){console.error(g)};var b=function(h,g){if(h){h(g)}};var d=function(g){if(g){g()}};var a=e.extend({init:function(g){this.spmUI=g?g.mySPMUI:undefined;this.spm=g?(g.mySPM?g.mySPM:(this.spmUI?this.spmUI.spm:undefined)):undefined;if(!this.spmUI||!this.spm){}this._initDone=(this.spm&&this.spmUI);if(!this._initDone){c(" SPY API - init - unexpected error retrieving SPM & SPMUI ")}},activatePlot:function(i){if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - activatePlot - API not initialized ");b(i.onErrorCallback,"E_APINOTINITIALIZED")}else{if(!i||isNaN(i.sequenceIndex)||!i.plotName){c(" SPY API - activatePlot - invalid options ");b(i.onErrorCallback,"E_INVALIDARG")}else{var h;var B=this.spm.getDataDisplayList(i.sequenceIndex);if(B&&B.length>0){for(var w=0;w<B.length;w++){if(B[w].name===i.plotName){h=w;break}}if(!isNaN(h)){var y;if(i.frameGlobalIndex){y=i.frameGlobalIndex}else{if(undefined===i.stepName){c(" SPY API - activatePlot - step name undefined");b(i.onErrorCallback,"E_STEPUNDEFINED")}else{var o=B[h].getAnimationStructure();var k=o.groupList;var A=[];for(var r=0;r<k.length;r++){if(k[r].rootName===i.stepName){A.push(k[r])}}if(A.length>0){var g=[];var j="E_UNEXPECTED";var p;if(i.loadCaseName){p=i.loadCaseName;j="E_LOADCASENOTFOUND"}else{if(undefined===A[0].loadCaseName){g=A}else{p=A[A.length-1].loadCaseName}}if(g.length===0&&p){for(var u=0;u<A.length;u++){if(A[u].loadCaseName===i.loadCaseName){g.push(A[u])}}}if(g.length>0){var C;var x;j="E_UNEXPECTED";var z;var t;if(i.modeIndex){j="E_MODENOTFOUND";for(t=0;t<g.length;t++){if(g[t].modeIndex===i.modeIndex){z=g[t];break}}}else{if(undefined===g[0].modeIndex){z=g[0]}else{var q=!isNaN(i.framePosition)?i.framePosition:Number(i.framePosition);if(!isNaN(q)){for(t=0;t<g.length;t++){var n=g[t].frameList;for(x=0;x<n.length;x++){if(n[x].position===q){C=n[x];break}}if(C){break}}}else{z=g[g.length-1]}}}if(C||z){if(!C){if(i.framePosition||i.frameIndex){j="E_FRAMENOTFOUND";for(x=0;x<z.frameList.length;x++){if(z.frameList[x].position===i.framePosition||z.frameList[x].localIndex===i.frameIndex){C=z.frameList[x];break}}if(!C){c(" SPY API - activatePlot - frame not found");b(i.onErrorCallback,j)}}else{C=z.frameList[z.frameList.length-1]}}if(C){y=C.globalIndex}}else{c(" SPY API - activatePlot - mode filtering failed");b(i.onErrorCallback,j)}}else{c(" SPY API - activatePlot - load case filtering failed");b(i.onErrorCallback,j)}}else{c(" SPY API - activatePlot - step not found");b(i.onErrorCallback,"E_STEPNOTFOUND")}}}if(y){var v=function(){if(this.spmUI.getActiveDD()===B[h]){if(i.partialAnimation){this.spmUI.getActiveDD().setPartialAnimationMode(true)}this.spmUI.navigateToFrame(y,function(){if(this.spmUI.animationPosition===y-1){d(i.onCompleteCallback)}else{c(" SPY API - activatePlot - error navigating to frame");b(i.onErrorCallback,"E_FRAMEUNEXPECTED")}}.bind(this))}else{c(" SPY API - activatePlot - error activating datadisplay");b(i.onErrorCallback,"E_PLOTUNEXPECTED")}}.bind(this);this.spmUI.activateDD(h,v)}}else{c(" SPY API - activatePlot - plot not found");b(i.onErrorCallback,"E_PLOTNOTFOUND")}}else{c(" SPY API - activatePlot - content of given sequence undefined or empty");b(i.onErrorCallback,"E_INVALIDSEQUENCE")}}}},addPlot:function(g){if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - addPlot - API not initialized ");b(g.onErrorCallback,"E_APINOTINITIALIZED")}c(" SPY API - addPlot - not implemented");b(g.onErrorCallback,"E_NOTIMPLEMENTED")},replacePlot:function(g){if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - replacePlot - API not initialized ");b(g.onErrorCallback,"E_APINOTINITIALIZED")}c(" SPY API - replacePlot - not implemented");b(g.onErrorCallback,"E_NOTIMPLEMENTED")},removePlot:function(g){if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - removePlot - API not initialized ");b(g.onErrorCallback,"E_APINOTINITIALIZED")}c(" SPY API - removePlot - not implemented");b(g.onErrorCallback,"E_NOTIMPLEMENTED")},showLegend:function(){if(!this._initDone){this.init()}if(!this._initDone||!this.spmUI){c(" SPY API - showLegend - API not initialized ")}else{var g=this.spmUI.frame2D;if(g){g.style.display="block"}}},hideLegend:function(){if(!this._initDone){this.init()}if(!this._initDone||!this.spmUI){c(" SPY API - hideLegend - API not initialized ")}else{var g=this.spmUI.frame2D;if(g){g.style.display="none"}}},setLegendMin:function(i){var g;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - setLegendMin - API not initialized ");if(i){b(i.onErrorCallback,"E_APINOTINITIALIZED")}}else{var k;var h=this.spmUI.getActiveDD();if(h&&h.spm.window){k=this.spmUI._isAFullExperience(h.spm.window.experience)}if(k){if(!this.spmUI.isAnimationRunning()){var j=h?h.getLegend():undefined;if(!j){c(" SPY API - setLegendMin - no legend available ");if(i){b(i.onErrorCallback,"E_NOLEGEND")}}else{if(!i||!i.minValue){g=j.setUserMin()}else{if(i.minValue!==undefined&&isNaN(i.minValue)){c(" SPY API - setLegendMin - invalid arguments ");if(i){b(i.onErrorCallback,"E_INVALIDARG")}}else{g=j.setUserMin(i.minValue,i.frameGlobalIndex)}}}}else{c(" SPY API - setLegendMin - animation running ");if(i){b(i.onErrorCallback,"E_ANIMATIONRUNNING")}}}else{c(" SPY API - setLegendMin - experience not authorized ");if(i){b(i.onErrorCallback,"E_EXPERIENCENOTAUTHORIZED")}}}return g},setLegendMax:function(h){var k;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - setLegendMax - API not initialized ");if(h){b(h.onErrorCallback,"E_APINOTINITIALIZED")}}else{var j;var g=this.spmUI.getActiveDD();if(g&&g.spm.window){j=this.spmUI._isAFullExperience(g.spm.window.experience)}if(j){if(!this.spmUI.isAnimationRunning()){var i=g?g.getLegend():undefined;if(!i){c(" SPY API - setLegendMax - no legend available ");if(h){b(h.onErrorCallback,"E_NOLEGEND")}}else{if(!h||!h.maxValue){k=i.setUserMax()}else{if(h.maxValue!==undefined&&isNaN(h.maxValue)){c(" SPY API - setLegendMax - invalid arguments ");if(h){b(h.onErrorCallback,"E_INVALIDARG")}}else{k=i.setUserMax(h.maxValue,h.frameGlobalIndex)}}}}else{c(" SPY API - setLegendMax - animation running ");if(h){b(h.onErrorCallback,"E_ANIMATIONRUNNING")}}}else{c(" SPY API - setLegendMax - experience not authorized ");if(h){b(h.onErrorCallback,"E_EXPERIENCENOTAUTHORIZED")}}}return k},getLegendUserMin:function(h){var j;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - getLegendUserMin - API not initialized ");if(h){b(h.onErrorCallback,"E_APINOTINITIALIZED")}}else{var g=this.spmUI.getActiveDD();var i=g?g.getLegend():undefined;if(!i){c(" SPY API - getLegendUserMin - no legend available ");if(h){b(h.onErrorCallback,"E_NOLEGEND")}}else{j=i.userMin}}return j},getLegendUserMax:function(h){var i;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - getLegendUserMax - API not initialized ");if(h){b(h.onErrorCallback,"E_APINOTINITIALIZED")}}else{var g=this.spmUI.getActiveDD();var j=g?g.getLegend():undefined;if(!j){c(" SPY API - getLegendUserMax - no legend available ");if(h){b(h.onErrorCallback,"E_NOLEGEND")}}else{i=j.userMax}}return i},getLegendComputedMin:function(h){var j;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - getLegendComputedMin - API not initialized ");if(h){b(h.onErrorCallback,"E_APINOTINITIALIZED")}}else{var g=this.spmUI.getActiveDD();var i=g?g.getLegend():undefined;if(!i){c(" SPY API - getLegendComputedMin - no legend available ");if(h){b(h.onErrorCallback,"E_NOLEGEND")}}else{j={global:i.min,local:[]};if(h&&!isNaN(h.frameGlobalIndex)){if(h.frameGlobalIndex>=0&&h.frameGlobalIndex<i.localMin.length){j.local.push(i.localMin[h.frameGlobalIndex])}else{c(" SPY API - getLegendComputedMin - invalid frame index ");b(h.onErrorCallback,"E_INVALIDARG")}}else{j.local=j.local.concat(i.localMin)}}}return j},getLegendComputedMax:function(h){var j;if(!this._initDone){this.init()}if(!this._initDone||!this.spm){c(" SPY API - getLegendComputedMax - API not initialized ");if(h){b(h.onErrorCallback,"E_APINOTINITIALIZED")}}else{var g=this.spmUI.getActiveDD();var i=g?g.getLegend():undefined;if(!i){c(" SPY API - getLegendComputedMax - no legend available ");if(h){b(h.onErrorCallback,"E_NOLEGEND")}}else{j={global:i.max,local:[]};if(h&&!isNaN(h.frameGlobalIndex)){if(h.frameGlobalIndex>=0&&h.frameGlobalIndex<i.localMax.length){j.local.push(i.localMax[h.frameGlobalIndex])}else{c(" SPY API - getLegendComputedMax - invalid frame index ");b(h.onErrorCallback,"E_INVALIDARG")}}else{j.local=j.local.concat(i.localMax)}}}return j}});return f.namespace("DS/SPYAPI/SimulationPlayerAPI",a)});