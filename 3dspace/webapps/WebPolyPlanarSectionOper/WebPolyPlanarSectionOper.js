define("DS/WebPolyPlanarSectionOper/WebPolyPolygon2D",["UWA/Class"],function(b){var a=b.extend({init:function(c){this._Polylines=c||[];return this},AddPolyLine:function(c){this._Polylines.push(c)},GetAllPolyLines:function(){return this._Polylines}});return a});define("DS/WebPolyPlanarSectionOper/WebPolyPolyLine2D",["UWA/Class"],function(b){var a=b.extend({init:function(c){this._Vertices=c||[];return this},AddVertex:function(c){this._Vertices.push(c)},GetAllVertices:function(){return this._Vertices}});return a});define("DS/WebPolyPlanarSectionOper/WebPolyPlanarSectionOper",["UWA/Class","DS/WebPolyMaths/WebMathsVector3D","DS/WebPolyMaths/WebMeshIntersection","DS/WebPolyMaths/WebToolsMeasure","DS/Visualization/PathElement","DS/Visualization/ThreeJS_DS","DS/WebPolyMaths/WebToolsSceneGraph","DS/WebPolyPlanarSectionOper/WebPolyPolyLine2D","DS/WebPolyPlanarSectionOper/WebPolyPolygon2D","DS/Mesh/Mesh","DS/Mesh/ThreeJS_Base"],function(b,f,a,l,c,i,j,d,k,e,h){var g=b.extend({init:function(m){this._Viewer=m;return this},Run:function(n,o){var m={};if(this._Viewer!==undefined){m=this._computeSectionCurves(n,o)}return m},_computeSectionCurves:function(C,q){var Q={};var aj=1;Q.aAllPolygons=[];Q.aAllColors=[];var Z=[];var N=[];if(q.length>0){var J;var ab=false;if(ab&&ab===true){J=new Date().getTime()}var M=[];for(var an=0;an<8;an++){M.push([0,0,0])}var W=new i.Matrix4().getInverse(C);var P=[C.elements[12],C.elements[13],C.elements[14]];var r=[C.elements[8],C.elements[9],C.elements[10]];var av=-f.dot(P,r);for(var ar=0;ar<q.length;ar++){var B=q[ar].getWorldMatrix();var ad=q[ar].getLastElement(true);var U=B.elements;var u=ad.bBox;M[0][0]=u.min.x;M[0][1]=u.min.y;M[0][2]=u.min.z;M[1][0]=u.max.x;M[1][1]=u.min.y;M[1][2]=u.min.z;M[2][0]=u.min.x;M[2][1]=u.max.y;M[2][2]=u.min.z;M[3][0]=u.max.x;M[3][1]=u.max.y;M[3][2]=u.min.z;M[4][0]=u.min.x;M[4][1]=u.min.y;M[4][2]=u.max.z;M[5][0]=u.max.x;M[5][1]=u.min.y;M[5][2]=u.max.z;M[6][0]=u.min.x;M[6][1]=u.max.y;M[6][2]=u.max.z;M[7][0]=u.max.x;M[7][1]=u.max.y;M[7][2]=u.max.z;M[0]=f.transformPoint(M[0],U,M[0]);var ah=M[0][0]*r[0]+M[0][1]*r[1]+M[0][2]*r[2]+av;var H=true;for(var ao=0;H&&(ao<8);ao++){M[ao]=f.transformPoint(M[ao],U,M[ao]);var Y=M[ao][0]*r[0]+M[ao][1]*r[1]+M[ao][2]*r[2]+av;H=(ah*Y>0)}var aq=this._Viewer.getCurrentSceneGraphState();if(!H){if(j.isLeaf(ad)){var ak=q[ar];if(j.recursiveGetPathElementVisibility(this._Viewer,ak)!==false){var G=j.getRenderables(ak);Z=Z.concat(G);for(var ap=0;ap<G.length;ap++){N.push(B)}}}else{var O=ad.children;var V=O.length;for(var ap=0;ap<V;ap++){var t=O[ap];if(j.isReferenceOrInstance(t)){var aa=new c();aa.addElement(t);var ae=this._Viewer.getVisibleSpace();var al=j.isVisible(this._Viewer,aa);if(ae===0&&!al){al=true}if(aq){al=aq.getAppliedVisibility(aa)}if(null===al||true===al){var ak=q[ar].clone();ak.addElement(t);q.push(ak)}}}}}}var af=0;var am=Z.length;var s=0;var T=0;var I=0;var X=0;for(var A=0;A<am;A++){var U=W.clone().multiply(N[A]).elements;var at=new i.Matrix4().getInverse(N[A]).multiply(C).elements;var F=Z[A].geometry;var E;var y=Z[A].material&&Z[A].material.force;if(y){E=Z[A].material.color.clone()}var ac=F.length;for(var x=0;x<ac;x++){var z=F[x].drawingGroups;var au=z.length;for(var w=0;w<au;w++){if((z[w].geomType==="FACE")){var L;if(h.getWebVisualizationLevel()>=422){L=new e.SGPrimitiveHelper()}var R=z[w].primitives.length;for(var v=0;v<R;v++){T++;if(!y){E=z[w].gas.color.clone()}if(h.getWebVisualizationLevel()>=422){L.set(z[w],v)}else{L=z[w].primitives[v]}var S=true;var p=L.boundingSphere;if(p!==undefined){var o=[p.center[0],p.center[1],p.center[2]];o=f.transformPoint(o,U);var D=p.radius-Math.abs(o[2]);if(D<0){S=false}}if(S===true){var ai=a.computeSectionCurves(L,U,at);if(ai.returnCode===0){aj=0;var ag=ai.aPolylines2D.length;for(var K=0;K<ag;K++){ai.aPolylines2D[K]=new d(ai.aPolylines2D[K])}ai.aPolygon=new k(ai.aPolylines2D);Q.aAllPolygons[af]=ai.aPolygon;Q.aAllColors[af]=E;af++;if(ab&&ab===true){I+=ai.nbTotTriangles;s+=ai.nbIntersections;X+=ag}}}}}}}}if(ab&&ab===true){console.log("PCS Section curves computation="+(new Date().getTime()-J)+"ms nbProducts="+q.length+"ms nbPrimitives="+T+" nbTriangles="+I+" nbIntersections="+s+" nbPolylines="+X+" nbPolygons="+af)}}Q.returnCode=aj;return Q}});return g});