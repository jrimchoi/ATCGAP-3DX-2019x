define("DS/CfgDictionary/CfgDictionaryMapperUtilsOptim",["DS/CfgDictionary/CfgDictionaryTypeEnum"],function(e){var d={};var b=function(h,k,i){if(i.kind==="reference"){h[i.rel_id]={type:e.OPTION,parent:k,name:i.attributes._name,kind:"reference"};for(var g in kpis){h[options.attributes[g]]={value:Math.random()*(10-1)+1}}}else{if(i.kind==="instance"){}else{}}};var f=function(l,m,k){var h=0;if(k.kind==="reference"){l[k.id]={type:e.VARIANT,parent:m,name:k.attributes._name,values:[],kind:"reference"};for(h=0;h<k.values.member.length;h+=1){l[k.id].values.push(k.values.member[h].rel_id);l[k.values.member[h].rel_id]={type:e.VALUE,parent:k.id,name:k.values.member[h].attributes._name,kind:"reference"};for(var g in kpis){l[k.values.member[h].attributes[g]]={value:Math.random()*(10-1)+1}}}}else{}};var c=function(l,n,g){var k=0;l[g.id]={parent:n,name:g.attributes._name,type:e.VARIABILITY_GROUP,content:[]};var h=g.variants?g.variants.member:[];for(k=0;k<h.length;k+=1){f(l,g.id,h[k]);l[g.id].content.push(h[k].id)}var j=g.options?g.options.member:[];for(k=0;k<j.length;k+=1){b(l,g.id,j[k]);if(j[k].rel_id){l[g.id].content.push(j[k].rel_id)}}var m=g.variabilityGroups?g.variabilityGroups.member:[];for(k=0;k<m.length;k+=1){c(l,g.id,m[k]);l[g.id].content.push(m[k].id)}};var a=function(g,h){g[h.id]={name:h.attributes._name,type:h.attributes._type}};d.dicoMinifiedV3ToMap=function(m){var p={};if(m._version!=="3.0"){return null}var j=0;var n=(m.portfolioClasses)?m.portfolioClasses.member[0].portfolioComponents.member[0]:m;var h=n.options?n.options.member:[];var g=n.variants?n.variants.member:[];var l=n.variabilityGroups?n.variabilityGroups.member:[];var k=n.rules&&n.rules.length>0?n.rules.member:[];var o={kpi_comfort:{name:"Comfort",type:"kpi"},kpi_cost:{name:"Cost",type:"kpi"},kpi_green:{name:"Green",type:"kpi"},kpi_performant:{name:"Performant",type:"kpi"},kpi_safety:{name:"Safety",type:"kpi"},kpi_weight:{name:"Weight",type:"kpi"}};for(var j in o){p[j]=o[j]}for(j=0;j<h.length;j+=1){b(p,null,h[j])}for(j=0;j<g.length;j+=1){f(p,null,g[j])}for(j=0;j<l.length;j+=1){c(p,null,l[j])}for(j=0;j<k.length;j+=1){a(p,k[j])}return p};return d});