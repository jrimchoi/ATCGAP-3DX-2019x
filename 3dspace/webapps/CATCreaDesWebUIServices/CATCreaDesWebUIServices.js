define("DS/CATCreaDesWebUIServices/CATCrDWebMathServices",["DS/Visualization/ThreeJS_DS"],function(a){var b=function(){};b.getClosestCanonicalDir=function(d){var c=new a.Vector3(1,0,0);var i=new a.Vector3(0,1,0);var h=new a.Vector3(0,0,1);var g=d.angleTo(c);var f=d.angleTo(i);var e=d.angleTo(h);if(g>Math.PI*0.5){g=Math.PI-g}if(f>Math.PI*0.5){f=Math.PI-f}if(e>Math.PI*0.5){e=Math.PI-e}if(g<f&&g<e){return c}else{if(f<e){return i}}return h};b.computeIsoView=function(c){c.normalize();var d=new Array(new a.Vector3(1,1,1),new a.Vector3(-1,-1,-1),new a.Vector3(1,-1,1),new a.Vector3(-1,1,-1),new a.Vector3(1,-1,-1),new a.Vector3(-1,1,1),new a.Vector3(1,1,-1),new a.Vector3(-1,-1,1));var g=new Array(d[0].dot(c),d[1].dot(c),d[2].dot(c),d[3].dot(c),d[4].dot(c),d[5].dot(c),d[6].dot(c),d[7].dot(c));var f=0;var e=Math.max(Math.min(1,g[0]),Math.min(1,g[1]),Math.min(1,g[2]),Math.min(1,g[3]),Math.min(1,g[4]),Math.min(1,g[5]),Math.min(1,g[6]),Math.min(1,g[7]));if(g[1]==e){f=1}else{if(g[2]==e){f=2}else{if(g[3]==e){f=3}else{if(g[4]==e){f=4}else{if(g[5]==e){f=5}else{if(g[6]==e){f=6}else{if(g[7]==e){f=7}}}}}}}d[f].normalize();UWA.log(f+"  dotResults :  "+g[f]);return d[f]};b.computeIsoUpView=function(d){var g=new Array(new a.Vector3(1,0,0),new a.Vector3(-1,0,0),new a.Vector3(0,1,0),new a.Vector3(0,-1,0),new a.Vector3(0,0,1),new a.Vector3(0,0,-1));var f=new Array(g[0].dot(d),g[1].dot(d),g[2].dot(d),g[3].dot(d),g[4].dot(d),g[5].dot(d));var c=0;var e=Math.max(f[0],f[1],f[2],f[3],f[4],f[5]);if(f[1]==e){c=1}else{if(f[2]==e){c=2}else{if(f[3]==e){c=3}else{if(f[4]==e){c=4}else{if(f[5]==e){c=5}}}}}return g[c]};b.computeLengthParameters=function(c){var f=new Array;if(c.length>0){f.push(0);var e=0;for(var d=1;d<c.length;d++){e+=c[d-1].distanceTo(c[d]);f.push(e)}}return f};b.computeLengthParametersPoints=function(d){var g=new Array;if(d.length>0){g.push(0);var f=0;for(var e=1;e<(d.length/3);e++){var c=e-1;var j=new a.Vector3(d[3*c],d[3*c+1],d[3*c+2]);var h=new a.Vector3(d[3*e],d[3*e+1],d[3*e+2]);f+=j.distanceTo(h);g.push(f)}}return g};return UWA.namespace("DS/CATCreaDesWebUIServices/CATCrDWebMathServices",b)});"use strict";define("DS/CATCreaDesWebUIServices/CATCrDSettings",["UWA/Core","DS/ApplicationFrame/FrameWindow","DS/Visualization/ThreeJS_DS","DS/Controls/LayerSet","DS/Core/Events"].concat(window.dependencies),function(g,h,f,d,c){function e(){var o;var t;var q;var i;var s;var k;var j;var n;var p;var r;var v;var l;var u;var w;var m;this.getSettingsColor=function(){return o};this.getSettingsDrawingPlane=function(){return q};this.getSettingsDrawingPlanePosition=function(){return i};this.getSettingsSymmetryPlane=function(){return s};this.getSettingsSymmetryPlanePosition=function(){return k};this.getSettingsPencilThickness=function(){return j};this.getSettingsMaxPencilThickness=function(){return n};this.getSettingsMinPencilThickness=function(){return p};this.getSettingsPencilOpacity=function(){return r};this.getSettingsMaxPencilOpacity=function(){return v};this.getSettingsMinPencilOpacity=function(){return l};this.getPencilDebug=function(){return m};this.getSymmetryMode=function(){return u};this.getPrimitivesMode=function(){return w};this.setSettingsColor=function(x){o=x};this.setSettingsDrawingPlane=function(x){q=x};this.setSettingsDrawingPlanePosition=function(x){i=x};this.setSettingsSymmetryPlane=function(x){s=x};this.setSettingsSymmetryPlanePosition=function(x){k=x};this.setSettingsPencilThickness=function(x){j=x};this.setSettingsMaxPencilThickness=function(x){n=x};this.setSettingsMinPencilThickness=function(x){p=x};this.setSettingsPencilOpacity=function(x){r=x};this.setSettingsMaxPencilOpacity=function(x){v=x};this.setSettingsMinPencilOpacity=function(x){l=x};this.setPencilDebug=function(x){m=x};this.setSymmetryMode=function(x){u=x};this.setSymmetryPlane=function(x){u=x};this.setPrimitivesMode=function(x){w=x};this.initSettings=function(){o=new f.Color(0);t=1;q=new f.Plane(new f.Vector3(0,0,1));i=new f.Vector3((0,0,0));s=new f.Plane(new f.Vector3(0,1,0));k=new f.Vector3((0,0,0));j=1;r=1;m=false;n=15;p=1;v=1;l=0.1;w=false;u=false}}var b;function a(){if(false===UWA.typeOf(b)){b=new e();b.initSettings()}return b}return UWA.namespace("DS/CATCreaDesWebUIServices/CATCrDSettings",a)});define("DS/CATCreaDesWebUIServices/CATCrDShaders",["UWA/Core","DS/Visualization/ThreeJS_DS"],function(c,b){var a=UWA.Class.extend({getPencilShader:function(e){var d=null;if(e!=undefined){d={uniforms:{Color:{type:"c",value:new b.Color(16776960)},Opacity:{type:"f",value:1},CutByPlane:{type:"f",value:0},PlanePosition:{type:"v3",value:new b.Vector3(0,0,0)},PlaneNormal:{type:"v3",value:new b.Vector3(1,0,0)}},varyings:{vTexCoord:{type:"v4"}},globalCode_VS:[].join("\n"),overridenFunctions_VS:{ComputeObjectPosition:"vec3 ComputeObjectPosition() { return vGetAttribPosition(); }",ComputeVaryingValues:"void ComputeVaryingValues() { /*vTexCoord = vec4(uv, 0.0, 1.0);*/ vTexCoord = vGetAttribTexCoord0(); }"},globalCode_FS:["vec4 commonFinalColor;","vec3 selectorColor = vec3(0., 0.45, 0.75);","float bezierBlend(float t)","{","return clamp((3.0 * t * t * (1.0-t) + t * t * t), 0.0, 1.0);","}"].join("\n"),overridenFunctions_FS:{ComputeCommonValues:["void ComputeCommonValues()","{","vec2 cornerUV = vTexCoord.xy;","float alpha = Opacity;","//  float pressure = clamp(1.02 * vTexCoord1.x, 0.0, 1.0); // if pressure > 0.98 => pressure = 1.0","float pressure=1.0;","cornerUV.y = 2.0 * (cornerUV.y - 0.5);","float xUVTest1 = clamp(sign(0.25 - cornerUV.x), 0.0, 1.0); // if cornerUV.x<0.25f","float xUVTest2 = clamp(sign(cornerUV.x - 0.75), 0.0, 1.0); // if cornerUV.x>0.75f","cornerUV.x = mix(cornerUV.x, 1.0 - cornerUV.x * 4.0, xUVTest1); // if cornerUV.x<0.25f => cornerUV.x = 1.0 - cornerUV.x * 4.0","cornerUV.x = mix(cornerUV.x, (cornerUV.x - 0.75) * 4.0, xUVTest2); // if cornerUV.x>0.75f => cornerUV.x = (cornerUV.x - 0.75) * 4.0","float inTheCorner = xUVTest1 + xUVTest2; // 0 if 0.25 < u < 0.75, else 1","float corner = cornerUV.x * cornerUV.x + cornerUV.y * cornerUV.y;","if(inTheCorner * corner > 1.0) // true only if inTheCorner = 1 and corner > 1 as inTheCorner can only be 0 or 1","{","discard;","}","//-----------------------------------------------------------------------------------------------","// Handle cut by plane","//-----------------------------------------------------------------------------------------------","float cutByPlaneActivated = clamp(sign(CutByPlane), 0.0, 1.0); // 0 if CutByPlane <= 0, 1 if CutByPlane > 0","// We do the work in the view space","// We compute the plane's equation: ax + by + cz + d = 0   => Normal(a, b, c), d = -dot(PlaneNormal, PlanePosition)","vec4 viewPlaneEq = vGetViewInvTranspMatrix() * vec4(PlaneNormal, -dot(PlaneNormal, PlanePosition));","// eye and Fragment position","vec4 fragPos = vec4(vGetViewPosition(), 1.0);","vec4 eyePos = vec4(0.0, 0.0, 0.0, 1.0);","// The sign of the plane's equation applied to the previous position gives the side of each point","float eyeClip = dot(viewPlaneEq, eyePos); // => d","float fragClip = dot(viewPlaneEq, fragPos) + sign(eyeClip) * 10e-2;","// cutByPlaneActivated == 0 => hide = 0.0","// If both values have the same sign, they are on the same side => hide = 0.0","// If there signs are different, they are on opposite side      => hide = 1.0","float hide = mix(0.0, clamp(-1.0 * sign(fragClip * eyeClip), 0.0, 1.0), cutByPlaneActivated);","commonFinalColor = vec4(Color.xyz, pressure * alpha * mix(1.0, 0.25, hide));","}"].join("\n"),ComputeOpacity:["float ComputeOpacity()","{","return commonFinalColor.a;","}"].join("\n"),ProcessFinalColor:["void ProcessFinalColor(inout vec4 finalColor)","{","finalColor = commonFinalColor;","}"].join("\n")}}}else{d={uniforms:b.UniformsUtils.merge([{Color:{type:"c",value:new b.Color(16776960)},Opacity:{type:"f",value:1},CutByPlane:{type:"f",value:0},PlanePosition:{type:"v3",value:new b.Vector3(0,0,0)},PlaneNormal:{type:"v3",value:new b.Vector3(1,0,0)}}]),vertexShader:["varying vec2  localUV;","varying vec3  worldPosition;","varying vec3  worldEye;","void main()","{","localUV = uv;","vec4 mvPosition = viewMatrix * ( modelMatrix * vec4(position.xyz, 1.0));","worldPosition = position;","worldEye      = cameraPosition.xyz;","gl_Position = projectionMatrix * mvPosition;","}",].join("\n"),fragmentShader:["#ifdef GL_ES","precision highp float;","#endif","uniform vec3  Color;","uniform float Opacity;","uniform float ScreenPlane;","uniform float CutByPlane;","uniform vec3  PlanePosition;","uniform vec3  PlaneNormal;","varying vec2  localUV;","varying vec3  worldPosition;","varying vec3  worldEye;","void main(void)","{","vec3 position = worldPosition;","vec3 eye = worldEye;","float alpha = Opacity;","vec2 cornerUV = localUV;","cornerUV.y = 2.0*(cornerUV.y-0.5);","float inTheCorner = 0.0;","if(cornerUV.x<0.25)","{","cornerUV.x = 1.0-cornerUV.x/0.25;","inTheCorner = 1.0;","}","else if(cornerUV.x>0.75)","{","cornerUV.x = (cornerUV.x-0.75)/0.25;","inTheCorner = 1.0;","}","if(inTheCorner>0.0)","{","float corner = cornerUV.x*cornerUV.x+cornerUV.y*cornerUV.y;","if(corner>1.0)","{","discard;","}","else","{","float falloffU = clamp((3.0*cornerUV.x*cornerUV.x*(1.0-cornerUV.x) + cornerUV.x*cornerUV.x*cornerUV.x),0.0,1.0);","alpha = mix(0.7*alpha,alpha,(1.0-falloffU)*1.0-falloffU*clamp((3.0*corner*corner*(1.0-corner) + corner*corner*corner),0.0,1.0));","}","}","float hide = 1.0;","if ( CutByPlane > 0.5 )","{","vec3 curveDir = normalize(position-PlanePosition);","vec3 planeDir = normalize(PlaneNormal);","vec3 camPlane = normalize(eye-PlanePosition);","planeDir = sign(dot(camPlane,planeDir))*planeDir;","float dotResult = dot(planeDir, curveDir);","if(abs(dotResult) < 10e-3)","{","dotResult = 1.0;","}","hide = max(sign(dotResult), 0.0);","}","gl_FragColor = vec4(Color.xyz,alpha*mix(0.25, 1.0, hide));","}",].join("\n")}}return d},getPenShader:function(d){var e=null;if(d!=undefined){e={uniforms:{Color:{type:"c",value:new b.Color(16776960)},Opacity:{type:"f",value:1},Thickness:{type:"f",value:1},Length:{type:"f",value:1},CutByPlane:{type:"f",value:0},PlanePosition:{type:"v3",value:new b.Vector3(0,0,0)},PlaneNormal:{type:"v3",value:new b.Vector3(1,0,0)}},varyings:{vTexCoord:{type:"v4"}},globalCode_VS:[].join("\n"),overridenFunctions_VS:{ComputeObjectPosition:"vec3 ComputeObjectPosition() { return vGetAttribPosition(); }",ComputeVaryingValues:"void ComputeVaryingValues() { vTexCoord = vGetAttribTexCoord0(); }"},globalCode_FS:["vec4 commonFinalColor;"].join("\n"),overridenFunctions_FS:{ComputeCommonValues:["void ComputeCommonValues()","{","float adjustedLength = max(Thickness, Length);","float thicknessUV = 0.5 * Thickness/adjustedLength;","vec2 cornerUV = vTexCoord.xy;","cornerUV.y = 2.0 * (cornerUV.y - 0.5);","float xUVTest1 = clamp(sign(thicknessUV - cornerUV.x), 0.0, 1.0); // if cornerUV.x<thicknessUV","float xUVTest2 = clamp(sign(cornerUV.x - (1.0 - thicknessUV)), 0.0, 1.0); // if cornerUV.x>1.0f - thicknessUV","cornerUV.x = mix(cornerUV.x, 1.0 - cornerUV.x/thicknessUV, xUVTest1); // if cornerUV.x<thicknessUV => cornerUV.x = 1.0f - cornerUV.x/thicknessUV","cornerUV.x = mix(cornerUV.x, (cornerUV.x - (1.0 - thicknessUV))/thicknessUV, xUVTest2); // if cornerUV.x > 1.0f - thicknessUV => (cornerUV.x - (1.0f - thicknessUV))/thicknessUV","float inTheCorner = xUVTest1 + xUVTest2; // xUVTest1 || xUVTest2","float corner = cornerUV.x * cornerUV.x + cornerUV.y * cornerUV.y;","if(inTheCorner * corner > 1.0) // true only if isOpenedWire == 1 and inTheCorner == 1 and corner > 1 as isOpenedWire and inTheCorner can only be 0 or 1","{","discard;","}","//-----------------------------------------------------------------------------------------------","// Handle cut by plane","//-----------------------------------------------------------------------------------------------","float cutByPlaneActivated = clamp(sign(CutByPlane), 0.0, 1.0); // 0 if CutByPlane <= 0, 1 if CutByPlane > 0","// We do the work in the view space","// We compute the plane's equation: ax + by + cz + d = 0   => Normal(a, b, c), d = -dot(PlaneNormal, PlanePosition)","vec4 viewPlaneEq = vGetViewInvTranspMatrix() * vec4(PlaneNormal, -dot(PlaneNormal, PlanePosition));","// eye and Fragment position","vec4 fragPos = vec4(vGetViewPosition(), 1.0);","vec4 eyePos = vec4(0.0, 0.0, 0.0, 1.0);","// The sign of the plane's equation applied to the previous position gives the side of each point","float eyeClip = dot(viewPlaneEq, eyePos); // => d","float fragClip = dot(viewPlaneEq, fragPos) + sign(eyeClip) * 10e-2;","// cutByPlaneActivated == 0 => hide = 0.0","// If both values have the same sign, they are on the same side => hide = 0.0","// If there signs are different, they are on opposite side      => hide = 1.0","float hide = mix(0.0, clamp(-1.0 * sign(fragClip * eyeClip), 0.0, 1.0), cutByPlaneActivated);","commonFinalColor = vec4(Color.xyz, Opacity * mix(1.0, 0.25, hide));","}"].join("\n"),ComputeOpacity:["float ComputeOpacity()","{","return commonFinalColor.a;","}"].join("\n"),ProcessFinalColor:["void ProcessFinalColor(inout vec4 finalColor)","{","finalColor = commonFinalColor;","}"].join("\n")}}}else{e={uniforms:b.UniformsUtils.merge([{Color:{type:"c",value:new b.Color(16776960)},Opacity:{type:"f",value:1},Thickness:{type:"f",value:1},Length:{type:"f",value:1},CutByPlane:{type:"f",value:0},PlanePosition:{type:"v3",value:new b.Vector3(0,0,0)},PlaneNormal:{type:"v3",value:new b.Vector3(1,0,0)}}]),vertexShader:["varying vec2  localUV;","varying vec3  worldPosition;","varying vec3  worldEye;","void main()","{","localUV = uv;","vec4 mvPosition = viewMatrix * ( modelMatrix * vec4(position.xyz, 1.0));","worldPosition = position;","worldEye      = cameraPosition.xyz;","gl_Position = projectionMatrix * mvPosition;","}",].join("\n"),fragmentShader:["#ifdef GL_ES","precision highp float;","#endif","uniform vec3  Color;","uniform float Opacity;","uniform float CutByPlane;","uniform vec3  PlanePosition;","uniform vec3  PlaneNormal;","uniform float Thickness;","uniform float Length;","varying vec2  localUV;","varying vec3  worldPosition;","varying vec3  worldEye;","void main(void)","{","vec3 position = worldPosition;","vec3 eye = worldEye;","float alpha = Opacity;","float adjustedLength = max(Thickness,Length);","float thicknessUV = 0.5 * Thickness/adjustedLength;","vec2 cornerUV = localUV.xy;","cornerUV.y = 2.0 * (cornerUV.y - 0.5);","float xUVTest1 = clamp(sign(thicknessUV - cornerUV.x), 0.0, 1.0);","float xUVTest2 = clamp(sign(cornerUV.x - (1.0 - thicknessUV)), 0.0, 1.0);","cornerUV.x = mix(cornerUV.x, 1.0 - cornerUV.x/thicknessUV, xUVTest1);","cornerUV.x = mix(cornerUV.x, (cornerUV.x - (1.0 - thicknessUV))/thicknessUV, xUVTest2);","float inTheCorner = xUVTest1 + xUVTest2;","float corner = cornerUV.x * cornerUV.x + cornerUV.y * cornerUV.y;","if(inTheCorner * corner > 1.0)","{","discard;","}","float hide = 1.0;","if ( CutByPlane > 0.5 )","{","vec3 curveDir = normalize(position-PlanePosition);","vec3 planeDir = normalize(PlaneNormal);","vec3 camPlane = normalize(eye-PlanePosition);","planeDir = sign(dot(camPlane,planeDir))*planeDir;","float dotResult = dot(planeDir, curveDir);","if(abs(dotResult) < 10e-3)","{","dotResult = 1.0;","}","hide = max(sign(dotResult), 0.0);","}","gl_FragColor = vec4(Color.xyz,alpha*mix(0.25, 1.0, hide));","}",].join("\n")}}return e},getGroundShader:function(d){var e=null;if(d!=undefined){e={uniforms:{Color:{type:"c",value:new b.Color(16776960)},Radius:{type:"f",value:500}},varyings:{worldPosition:{type:"v3"}},globalCode_VS:[].join("\n"),overridenFunctions_VS:{ComputeObjectPosition:"vec3 ComputeObjectPosition() { return vGetAttribPosition(); }",ComputeVaryingValues:"void ComputeVaryingValues() { worldPosition = vGet3x3WorldMatrix() * vGetAttribPosition(); }"},globalCode_FS:["vec4 commonFinalColor;"].join("\n"),overridenFunctions_FS:{ComputeCommonValues:["void ComputeCommonValues()","{","float rad = Radius;","float dist = sqrt(worldPosition.x*worldPosition.x + worldPosition.y*worldPosition.y);","if  (dist > Radius)","{","dist = Radius;","}","float alpha = (Radius-dist)/Radius;","commonFinalColor = vec4(0.5, 0.5, 0.5, alpha);","}"].join("\n"),ComputeOpacity:["float ComputeOpacity()","{","return commonFinalColor.a;","}"].join("\n"),ProcessFinalColor:["void ProcessFinalColor(inout vec4 finalColor)","{","finalColor = commonFinalColor;","}"].join("\n")}}}else{e={uniforms:b.UniformsUtils.merge([{Radius:{type:"f",value:500}}]),vertexShader:["varying vec3  worldPosition;","void main()","{","vec4 mvPosition = viewMatrix * ( modelMatrix * vec4(position, 1.0));","worldPosition = mvPosition.xyz;","gl_Position = projectionMatrix * mvPosition;","}",].join("\n"),fragmentShader:["#ifdef GL_ES","precision highp float;","#endif","uniform float Radius;","varying vec3  worldPosition;","void main(void)","{","float rad = Radius;","float dist = sqrt(worldPosition.x*worldPosition.x + worldPosition.y*worldPosition.y);","if  (dist > Radius)","{","dist = Radius;","}","float alpha = (Radius-dist)/Radius;","gl_FragColor = vec4(0.5,0.5,0.5,alpha);","}",].join("\n")}}return e}});return UWA.namespace("DS/CATCreaDesWebUIServices/CATCrDShaders",a)});define("DS/CATCreaDesWebUIServices/CATCrDCircle",["UWA/Core","UWA/Event","DS/Core/Core","UWA/Class","DS/Visualization/ThreeJS_DS"],function(f,b,e,c,d){var a=f.Class.extend({init:function(){this._Center=new d.Vector3(0,0,0);this._FirstAxis=new d.Vector3(1,0,0);this._SecondAxis=new d.Vector3(0,1,0);this._FirstLimit=new d.Vector3(1,0,0);this._SecondLimit=new d.Vector3(0,1,0);this._Closed=true;this._Radius=10;return this},setCenter:function(g){this._Center.copy(g);return this},setFirstAxis:function(g){this._FirstAxis.copy(g);return this},setSecondAxis:function(g){this._SecondAxis.copy(g);return this},setRadius:function(g){this._Radius=g;return this},getIsClosed:function(){return this._Closed},calculateFromPoints:function(C,W){var s=new d.Vector3(0,0,0);var az=new d.Vector3(1,0,0);var av=new d.Vector3(0,1,0);var ak=-1;var ar=Math.pow(10,-15);var Q=Math.pow(10,-30);var I=C.length;if(3<=I){var aq=new Array(new d.Vector3(0,0,0),new d.Vector3(0,0,0),new d.Vector3(0,0,0),new d.Vector3(0,0,0));var ay=new Array(false,false,false,false);var m=0,aj=0,r=0;var O,aB,P;var w=5;var ae=4;var T;for(T=0;T<ae;T++){switch(T){case 0:m=0;aj=Math.floor(I*1/w);r=Math.floor(I*2/w);break;case 1:m=Math.floor(I*1/w);aj=Math.floor(I*2/w);r=Math.floor(I*3/w);break;case 2:m=Math.floor(I*2/w);aj=Math.floor(I*3/w);r=Math.floor(I*4/w);break;case 3:m=Math.floor(I*3/w);aj=Math.floor(I*4/w);r=(I-1);break}O=C[m];aB=C[aj];P=C[r];var ab=new d.Vector3().subVectors(aB,O);var aa=new d.Vector3().subVectors(P,aB);var Y=new d.Vector3().addVectors(O,aB).multiplyScalar(0.5);var X=new d.Vector3().addVectors(aB,P).multiplyScalar(0.5);var Z=new d.Vector3().crossVectors(ab,aa);var ax=new d.Vector3().crossVectors(Z,ab);var aw=new d.Vector3().crossVectors(Z,aa);var V=false;var q=d.Math.degToRad(10);var N=2*Math.PI-q;var H=ax.angleTo(aw);if(H<q||H>N){V=true}ay[T]=!V;ab.addVectors(Y,ax);aa.addVectors(X,aw);var G=new d.Line3().set(Y,ab);var F=new d.Line3().set(X,aa);var aA=false;var k=-1,i=-1;var am=1;var n=G.distanceSq();var l=F.distanceSq();if(n>Q&&l>Q){var h=G.delta().normalize();var g=F.delta().normalize();var u=new d.Vector3().copy(Y);var t=new d.Vector3().copy(X);var M=Math.sqrt(n);var K=Math.sqrt(l);var R=g.dot(h);var au=(R*R)-1;if(Math.abs(au)>Q){var L=new d.Vector3().subVectors(u,t);var x=L.dot(g);var v=L.dot(h);var ap=(v*R-x)/au;var an=(v-x*R)/au;var ac=new d.Vector3().copy(g).multiplyScalar(ap).add(t);var ad=new d.Vector3().copy(h).multiplyScalar(an).add(u);if(ac.distanceToSquared(ad)<am*am){i=ap/K;k=an/M;aA=true}}}if(true==aA){aq[T]=G.at(k)}else{aq[T].addVectors(Y,X).multiplyScalar(0.5)}}var aC=0;for(T=0;T<ae;T++){if(true==ay[T]){s.add(aq[T]);aC+=1}}if(0!=aC){s.multiplyScalar(1/aC)}O=C[0];var z=new d.Vector3().subVectors(s,O);ak=z.length();ae=6;for(T=1;T<ae;T++){aB=C[Math.floor(I*T/ae)];z.subVectors(s,aB);ak+=z.length()}P=C[I-1];z.subVectors(s,P);ak+=z.length();ak/=((ae-1)+2);this._Center.copy(s);this._Radius=ak}if(-1!=ak){var ah=new d.Vector3().copy(W.normal).normalize();this._FirstAxis.crossVectors(ah,az);this._FirstAxis.normalize();if(Q>this._FirstAxis.length()){this._FirstAxis.crossVectors(ah,av);this._FirstAxis.normalize()}this._SecondAxis.crossVectors(ah,this._FirstAxis);this._SecondAxis.normalize();var S=false;var J=new d.Vector3().copy(C[0]);var y=new d.Vector3().copy(C[I-1]);var af=new d.Vector3().subVectors(J,this._Center).normalize();var p=new d.Vector3().subVectors(y,this._Center).normalize();J.copy(af).multiplyScalar(this._Radius).add(this._Center);y.copy(p).multiplyScalar(this._Radius).add(this._Center);var at=Math.PI/20;var ao=af.angleTo(p);if(at>ao){S=true}if(false==S){var o=new d.Vector3().subVectors(C[Math.floor(I/2)],this._Center).normalize();var U=new d.Vector3().copy(af).cross(o);var al=new d.Vector3().copy(o).cross(p);var ai=new d.Vector3().copy(af).cross(p);var E=U.dot(ah);var D=al.dot(ah);var B=ai.dot(ah);var ag=((0>E)&&(0>D))||((0>E)&&(0<D)&&(0<B))||((0<E)&&(0>D)&&(0<B));if(true==ag){var A=new d.Vector3().copy(J);J.copy(y);y.copy(A)}}else{y.copy(J)}this._FirstLimit.copy(J);this._SecondLimit.copy(y)}return this},evaluate:function(l){var h=Math.sin(l);var i=Math.cos(l);var k=new d.Vector3().copy(this._FirstAxis);var j=new d.Vector3().copy(this._SecondAxis);var g=new d.Vector3().copy(this._Center);g.add(k.multiplyScalar(this._Radius*i));g.add(j.multiplyScalar(this._Radius*h));return g},getParam:function(v,r,n,i){var j=new Array(0,0,0);var s=this.evaluate(n);var q=this.evaluate(i);var o=r;var x=r*r;var A=new d.Vector3().subVectors(v,s);var z=new d.Vector3().subVectors(s,this._Center);var y=(z.dot(this._FirstAxis)*A.dot(this._SecondAxis))-(z.dot(this._SecondAxis)*A.dot(this._FirstAxis));var p=s.distanceTo(v);var h=(p<x)&&(y<=o);A.subVectors(v,q);z.subVectors(q,this._Center);y=(z.dot(this._FirstAxis)*A.dot(this._SecondAxis))-(z.dot(this._SecondAxis)*A.dot(this._FirstAxis));var w=q.distanceTo(v);var t=(p<x)&&(y<=o);if(h&&t){j[0]=2;j[1]=n;j[2]=i;return j}else{if(!h&&t){j[0]=1;j[1]=i;return j}else{if(h&&!t){j[0]=2;j[1]=n;return j}else{var u=2*Math.PI;var k=new d.Vector3().subVectors(v,this._Center);var B=k.dot(this._FirstAxis);var l=k.dot(this._SecondAxis);var g=Math.pow(10,-12);if(Math.abs(B)<g*this._Radius&&Math.abs(l)<g*this._Radius){return j}var m=Math.atan2(l,B);while(m>n+u){m-=u}while(m<n){m+=u}if(m>=n&&m<=i){j[0]=0;j[1]=m;j[0]=1}}}}return j}});return f.namespace("DS/CATCreaDesWebUIServices/CATCrDCircle",a)});define("DS/CATCreaDesWebUIServices/CATCrDStrokeInterpreter",["DS/Visualization/ThreeJS_DS"],function(b){var a=UWA.Class.extend({init:function(){return this},GetResultShape:function(I){var m=-1;var aa=new b.Vector2(0,0);var w=new b.Vector2(0,0);var v=new b.Vector2(0,0);var J=new b.Vector2(0,0);var p=new b.Vector2(1,0);var o=new b.Vector2(0,1);var s,z,y;var E=-1,D=-1;var S=-1,Q=-1;var C=-1,A=-1;var X=new Array(0,0,0,0,0,0);var U=new b.Vector2(0,0);var x=new b.Vector2(0,0);var W=new b.Vector2(-Infinity,-Infinity);var k=new b.Vector2(Infinity,Infinity);var O=new b.Vector2(-Infinity,-Infinity);var H=new b.Vector2(Infinity,Infinity);var e=new b.Vector2(-Infinity,-Infinity);var G=new b.Vector2(Infinity,Infinity);var c=new b.Vector2(-Infinity,-Infinity);var ac=false;var f;var Z=1,Y=1;for(Z=0;Z<I.length-1;Z++){aa.set(I[Z].xPix,I[Z].yPix);w.set(I[Z+1].xPix-I[Z].xPix,I[Z+1].yPix-I[Z].yPix);w.normalize();v.set(-w.y,w.x);X[0]=p.dot(w);X[1]=o.dot(w);X[2]=p.dot(v);X[3]=o.dot(v);X[4]=J.x-(X[0]*aa.x+X[2]*aa.y);X[5]=J.y-(X[3]*aa.x+X[4]*aa.y);for(Y=0;Y<I.length;Y++){U.setX(X[0]*I[Y].xPix+X[1]*I[Y].yPix+X[4]);U.setY(X[2]*I[Y].xPix+X[3]*I[Y].yPix+X[5]);if(0==Y){x.copy(U);W.copy(U)}else{if(U.x<x.x){x.x=U.x}else{if(U.x>W.x){W.x=U.x}}if(U.y<x.y){x.y=U.y}else{if(U.y>W.y){W.y=U.y}}}}S=W.x-x.x;Q=W.y-x.y;if(-1==E){E=Z;D=Z;C=S;A=Q;k.copy(x);O.copy(W);H.copy(x);e.copy(W)}else{if(S<C){E=Z;C=S;k.copy(x);O.copy(W)}if(Q<A){D=Z;A=Q;H.copy(x);e.copy(W)}}}if(-1!=E){var n=0;if(C<A){n=E;G.x=k.y;G.y=k.x;c.x=O.y;c.y=O.x}else{n=D;G.copy(H);c.copy(e)}S=c.x-G.x;Q=c.y-G.y;ac=(Q>S);var s=new b.Vector2(I[n].xPix,I[n].yPix);var z=new b.Vector2(1,0);var y=new b.Vector2(0,1);z.set(I[n+1].xPix-I[n].xPix,I[n+1].yPix-I[n].yPix);z.normalize();y.set(-z.y,z.x);X[0]=p.dot(z);X[1]=o.dot(z);X[2]=p.dot(y);X[3]=o.dot(y);X[4]=J.x-(X[0]*s.x+X[2]*s.y);X[5]=J.y-(X[3]*s.x+X[4]*s.y);f=new Array;for(Y=0;Y<I.length;Y++){U.setX(X[0]*I[Y].xPix+X[1]*I[Y].yPix+X[4]);U.setY(X[2]*I[Y].xPix+X[3]*I[Y].yPix+X[5]);if(true==ac){U.set(U.y,U.x)}f.push(new b.Vector2().copy(U))}}if(false!==UWA.typeOf(f)){var r=c.x-G.x;var q=c.y-G.y;var t=1.5;var T=r;if(q!=0){T=(r/q)}var M=(T>t)?0.05*r:0.1*r;var K=0.1*q;var B=false;S=f[f.length-1].x-f[0].x;Q=f[f.length-1].y-f[0].y;if(Math.abs(S)<=4*M&&Math.abs(Q)<=4*K){B=true}var d=0;var u=0;var l=0;var P=0;var ab=0;var h=0;var R=0;var L=0;var N=0;var F=0;if(true==B){}if(false==B){if(12>r&&12>q){u=11}else{if(t<T&&12>q){u=11}}}var V=0;var g=0;if(true==B){V=ab;g=2}else{V=h;g=2;if(u>V){V=u;g=1}}m=g}return m}});return UWA.namespace("DS/CATCreaDesWebUIServices/CATCrDStrokeInterpreter",a)});"use strict";define("DS/CATCreaDesWebUIServices/CATCrDGrid",["UWA/Core","DS/Mesh/MeshUtils","DS/Visualization/ThreeJS_DS","DS/Visualization/SceneGraphFactory","DS/Visualization/Node3D","DS/CATCreaDesWebUIServices/CATCrDShaders"].concat(window.dependencies),function(d,b,i,h,f,g){function c(){var q;var m;var l;var o;var p;var k;var n;this.onLoad=function(r){this.initSettings(r)};this.initSettings=function(r){m=new i.Vector3(0,0,1);o=100;p=new i.Vector3();l=new f();q=false;l.setVisibility(false);k=r.getRootNode();n=r};this.setGroundGrid=function(r,s){this.setGrid(new i.Vector3(0,0,1),300,new i.Vector3(0,0,0))};this.setGrid=function(r,t,s){m=r.clone();o=t;if(d.typeOf(s)!=false){p=s.clone()}k.remove(l);l=new f();j();this.setGridVisibility(true);n.render()};this.setGridVisibility=function(r){if(q!=r){q=r;l.setVisibility(q);n.render()}};function j(){m.normalize();var v=0.05;var F=1;var z=new Array();var H=new Array();var Q=new Array();var M=new Array();var J=0;var L=0;for(J=0;J<2/v;J++){z.push(J*v-1);z.push(-1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(0);Q.push(0);Q.push(0);M.push(L);L++;z.push(J*v-1);z.push(0);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(1);Q.push(1);Q.push(0);M.push(L);L++;z.push(J*v-1);z.push(0);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(0);Q.push(0);Q.push(0);M.push(L);L++;z.push(J*v-1);z.push(1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(1);Q.push(1);Q.push(0);M.push(L);L++;z.push(-1);z.push(J*v-1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(0);Q.push(0);Q.push(0);M.push(L);L++;z.push(0);z.push(J*v-1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(1);Q.push(1);Q.push(0);M.push(L);L++;z.push(0);z.push(J*v-1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(0);Q.push(0);Q.push(0);M.push(L);L++;z.push(1);z.push(J*v-1);z.push(0);H.push(m.x);H.push(m.y);H.push(m.z);Q.push(1);Q.push(1);Q.push(0);M.push(L);L++}var r=new g().getGroundShader();r.uniforms.Radius.value=o;var y={fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:r.uniforms};var D=new i.ShaderMaterial(y);D.transparent=true;D.side=i.DoubleSide;D.depthWrite=false;D.opacity=0.1;D.force=true;var I=new i.Color(0);var s=new b.PrimitiveGroup();s.fillAttr=new b.FillAttributes();s.lineAttr=new b.LineAttributes();s.pointAttr=new b.PointAttributes();var E=new b.Buffer();E.size=z.length;E.component=b.VertexComponentEnum.POSITION;E.format=b.DataTypeEnum.FLOAT;E.dimension=3;E.data=new Float32Array(z);s.addBuffer(0,E);var A=new b.Buffer();A.size=H.length;A.component=b.VertexComponentEnum.NORMAL;A.format=b.DataTypeEnum.FLOAT;A.dimension=3;A.data=new Float32Array(H);s.addBuffer(1,A);var t=new b.Buffer();t.size=Q.length;t.component=b.VertexComponentEnum.TEX_COORD_0;t.format=b.DataTypeEnum.FLOAT;t.dimension=3;t.data=new Float32Array(Q);s.addBuffer(2,t);var P=new b.Buffer();P.indexBuffer=true;P.size=M.length;P.format=b.DataTypeEnum.UINT;P.dimension=1;P.data=new Uint16Array(M);s.addBuffer(3,P);var w=new b.Primitive();w.nbIndices=M.length;w.connectivity=b.ConnectivityTypeEnum.LINES;w.attr={fill:new b.FillAttributes(I),line:new b.LineAttributes(I),point:new b.PointAttributes(I,1)};var C=new b.VertexComponent();C.component=b.VertexComponentEnum.POSITION;C.nbVertices=z.length/3;C.nbValuesPerVertex=3;C.format=b.DataTypeEnum.FLOAT;C.cardinality=0;C.bufferId=0;C.indices=new b.IndexArray();C.indices.format=b.DataTypeEnum.UINT;C.indices.bufferId=3;C.indices.offset=0;w.addVertexComponent(C);var G=new b.VertexComponent();G.component=b.VertexComponentEnum.NORMAL;G.nbVertices=H.length/3;G.nbValuesPerVertex=3;G.format=b.DataTypeEnum.FLOAT;G.cardinality=0;G.bufferId=1;G.indices=new b.IndexArray();G.indices.format=b.DataTypeEnum.UINT;G.indices.bufferId=3;G.indices.offset=0;w.addVertexComponent(G);var B=new b.VertexComponent();B.component=b.VertexComponentEnum.TEX_COORD_0;B.nbVertices=Q.length/3;B.nbValuesPerVertex=3;B.format=b.DataTypeEnum.FLOAT;B.cardinality=0;B.bufferId=2;B.indices=new b.IndexArray();B.indices.format=b.DataTypeEnum.UINT;B.indices.bufferId=3;B.indices.offset=0;w.addVertexComponent(B);s.addPrimitive(w);var O=h.createMeshNode(s,D);O.name="Grid";O.setPickable(b.NOPICKABLE);l.add(O);var x=new i.Matrix4().makeScale(1000,1000,1);l.applyMatrix(x);var K=m.angleTo(new i.Vector3(0,0,1));if((Math.abs(K)>0.001)&&(Math.abs(Math.PI-K)>0.001)){var u=m.cross(new i.Vector3(0,0,1));var N=new i.Matrix4();u.normalize();N.makeRotationAxis(u,-K);l.applyMatrix(N)}l.getMatrix().setPosition(p);l._updateMatrix();k.add(l)}}var e;function a(){if(false===d.typeOf(e)){e=new c()}return e}return d.namespace("DS/CATCreaDesWebUIServices/CATCrDGrid",a)});define("DS/CATCreaDesWebUIServices/CATCrDWebUIServices",["DS/Visualization/ThreeJS_DS","DS/Mesh/MeshUtils","DS/Visualization/SceneGraphFactory","DS/Visualization/Node3D","DS/CATCreaDesWebUIServices/CATCrDShaders","DS/CATCreaDesWebUIServices/CATCrDWebMathServices","DS/CATCreaDesWebUIServices/CATCrDSettings"],function(e,g,b,f,d,h,c){var a=function(){};a.getScreenPlane=function(m){var l=m.getViewpoints()[0];var n=l.getTarget();var j=l.getCamera().position;var k=new e.Vector3(n.x-j.x,n.y-j.y,n.z-j.z);k.normalize();var i=new e.Plane(k,0);return i};a.get3DPosition=function(l,k,i){var n=new e.Vector3(k.x,k.y,1);var m=new e.Projector();m.unprojectVector(n,l.currentViewpoint.camera);var j=new e.Ray(l.currentViewpoint.camera.position,n.sub(l.currentViewpoint.camera.position).normalize());n=j.intersectPlane(i);return n};a.updateCutByPlane=function(k,j,l,i){};a.convertPixelsLengthToMm=function(p,i,r){var m=p.fov;var o=i.distanceTo(p.position);var j=p.aspect;var l=2*Math.tan(m*0.5)*o;var n=l*j;var q=(l/window.outerHeight)*r;var k=(n/window.outerWidth)*r;return Math.min(q,k)};a.getResolutionPixelsPerMm=function(){function j(){var k=window.screen.deviceXDPI;var l=window.screen.deviceYDPI;return Math.sqrt(k*l)/96}function i(){return typeof window=="undefined"?0:+window.devicePixelRatio||j()||0}return(i()*96/25.4)};a.createPencilMaterial=function(j,l,i){var k=null;var n=new d().getPencilShader(i);n.uniforms.Color.value=j;var o=l;if(o>1){o/=255}n.uniforms.Opacity.value=o;if(i!=undefined){k=new e.MeshBasicMaterial({force:true});k.activatePDSFX();k.setPDSFXUniforms(n.uniforms);k.setPDSFXVaryings(n.varyings);k.setPDSFXGlobalShaderCode(n.globalCode_VS,n.globalCode_FS);k.setPDSFXOverridableFunctions(n.overridenFunctions_VS,n.overridenFunctions_FS);k.setPDSFXPolygonOffset("Frontward1");k.blending=e.AdditiveAlphaBlending;k.transparent=true;k.side=e.DoubleSide}else{var m={fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:n.uniforms};k=new e.ShaderMaterial(m);k.blending=e.AdditiveAlphaBlending;k.transparent=true;k.side=e.DoubleSide;k.polygonOffset=true;k.polygonOffsetFactor=-2;k.polygonOffsetUnits=-2}return k};a.createMaterial=function(j,k,i){return a.createPencilMaterial(j,k,i)};a.createPenMaterial=function(k,m,i,j){var o=new d().getPenShader();o.uniforms.Color.value=k;o.uniforms.Opacity.value=m/255;o.uniforms.Thickness.value=i;o.uniforms.Length.value=j;var n={fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:o.uniforms};var l=new e.ShaderMaterial(n);l.blending=e.AdditiveAlphaBlending;l.transparent=true;l.side=e.DoubleSide;l.polygonOffset=true;l.polygonOffsetFactor=-2;l.polygonOffsetUnits=-2;return l};a.createPencilGP=function(E,H,F,l,C){var U;if(E.length>1){var L=new Array;var X=new Array;var v=new Array;var Z=new Array;var r=F*0.5;var N=0;var P=0;var u=h.computeLengthParameters(E);var p=u[u.length-1]+N+P;var q=0;if(p>0.000001){q=1/p}var A=[1,0];var M=[0,1];var R=0;var n;var x;var k=H[0];var I=new e.Vector3(0,0,0);var m;var D;var w;var V=new Array;var W=new Array;for(var T=0;T<E.length;T++){n=E[T];k=H[T];if(T<E.length-1){x=E[T+1];m=new e.Vector3().subVectors(x,n);m.normalize();D=new e.Vector3().addVectors(I,m);I=m}else{D=I}D.normalize();w=new e.Vector3().crossVectors(k,D);V[0]=new e.Vector3().copy(w);V[1]=new e.Vector3().copy(w);V[0].multiplyScalar(r);V[1].multiplyScalar(-1*r);W[0]=new e.Vector3().addVectors(n,V[0]);W[1]=new e.Vector3().addVectors(n,V[1]);for(var S=0;S<2;S++){L.push(W[S].x);L.push(W[S].y);L.push(W[S].z);X.push(k.x);X.push(k.y);X.push(k.z);v.push(u[T]*q);v.push(A[S]);v.push(0);R++}if(T>0){Z.push(M[0]);Z.push((R-1));Z.push((R-2));Z.push(M[0]);Z.push(M[1]);Z.push((R-1));M[0]=(R-2);M[1]=(R-1)}}var G=new e.Color(65280);var B=new g.PrimitiveGroup();B.fillAttr=new g.FillAttributes();B.lineAttr=new g.LineAttributes();B.pointAttr=new g.PointAttributes();var J=new g.Buffer();J.size=L.length;J.component=g.VertexComponentEnum.POSITION;J.format=g.DataTypeEnum.FLOAT;J.dimension=3;J.data=new Float32Array(L);B.addBuffer(0,J);var t=new g.Buffer();t.size=X.length;t.component=g.VertexComponentEnum.NORMAL;t.format=g.DataTypeEnum.FLOAT;t.dimension=3;t.data=new Float32Array(X);B.addBuffer(1,t);var Q=new g.Buffer();Q.size=v.length;Q.component=g.VertexComponentEnum.TEX_COORD_0;Q.format=g.DataTypeEnum.FLOAT;Q.dimension=3;Q.data=new Float32Array(v);B.addBuffer(2,Q);var o=new g.Buffer();o.indexBuffer=true;o.size=Z.length;o.format=g.DataTypeEnum.UINT;o.dimension=1;o.data=new Uint16Array(Z);B.addBuffer(3,o);var z=new g.Primitive();z.nbIndices=Z.length;z.connectivity=g.ConnectivityTypeEnum.TRIANGLES;z.attr={fill:new g.FillAttributes(G),line:new g.LineAttributes(G),point:new g.PointAttributes(G,1)};var Y=new g.VertexComponent();Y.component=g.VertexComponentEnum.POSITION;Y.nbVertices=L.length/3;Y.nbValuesPerVertex=3;Y.format=g.DataTypeEnum.FLOAT;Y.cardinality=0;Y.bufferId=0;Y.indices=new g.IndexArray();Y.indices.format=g.DataTypeEnum.UINT;Y.indices.bufferId=3;Y.indices.offset=0;z.addVertexComponent(Y);var O=new g.VertexComponent();O.component=g.VertexComponentEnum.NORMAL;O.nbVertices=X.length/3;O.nbValuesPerVertex=3;O.format=g.DataTypeEnum.FLOAT;O.cardinality=0;O.bufferId=1;O.indices=new g.IndexArray();O.indices.format=g.DataTypeEnum.UINT;O.indices.bufferId=3;O.indices.offset=0;z.addVertexComponent(O);var s=new g.VertexComponent();s.component=g.VertexComponentEnum.TEX_COORD_0;s.nbVertices=v.length/3;s.nbValuesPerVertex=3;s.format=g.DataTypeEnum.FLOAT;s.cardinality=0;s.bufferId=2;s.indices=new g.IndexArray();s.indices.format=g.DataTypeEnum.UINT;s.indices.bufferId=3;s.indices.offset=0;z.addVertexComponent(s);B.addPrimitive(z);l.force=true;var U=b.createMeshNode(B,l);if(false!==UWA.typeOf(C)){var K=new Array;for(var T=0;T<Z.length;T++){K.push(new e.Vector3(L[3*Z[T]],L[(3*Z[T])+1],L[(3*Z[T])+2]))}var y=geomHelper.createLine({points:K,color:new e.Color(16711680),width:2});C.value=y}}return U};a.createCustomGP=function(n,u,t,y,l,r){var v;var B=new Array;for(var z=0;z<n.length;z++){B.push(t[r*z]);B.push(t[r*z+1]);B.push(0)}var x=new e.Color(65280);var j=new g.PrimitiveGroup();j.fillAttr=new g.FillAttributes();j.lineAttr=new g.LineAttributes();j.pointAttr=new g.PointAttributes();var s=new g.Buffer();s.size=n.length;s.component=g.VertexComponentEnum.POSITION;s.format=g.DataTypeEnum.FLOAT;s.dimension=3;s.data=new Float32Array(n);j.addBuffer(0,s);var o=new g.Buffer();o.size=u.length;o.component=g.VertexComponentEnum.NORMAL;o.format=g.DataTypeEnum.FLOAT;o.dimension=3;o.data=new Float32Array(u);j.addBuffer(1,o);var k=new g.Buffer();k.size=B.length;k.component=g.VertexComponentEnum.TEX_COORD_0;k.format=g.DataTypeEnum.FLOAT;k.dimension=3;k.data=new Float32Array(B);j.addBuffer(2,k);var A=new g.Buffer();A.indexBuffer=true;A.size=y.length;A.format=g.DataTypeEnum.UINT;A.dimension=1;A.data=new Uint16Array(y);j.addBuffer(3,A);var m=new g.Primitive();m.nbIndices=y.length;m.connectivity=g.ConnectivityTypeEnum.TRIANGLES;m.attr={fill:new g.FillAttributes(x),line:new g.LineAttributes(x),point:new g.PointAttributes(x,1)};var q=new g.VertexComponent();q.component=g.VertexComponentEnum.POSITION;q.nbVertices=n.length/3;q.nbValuesPerVertex=3;q.format=g.DataTypeEnum.FLOAT;q.cardinality=0;q.bufferId=0;q.indices=new g.IndexArray();q.indices.format=g.DataTypeEnum.UINT;q.indices.bufferId=3;q.indices.offset=0;m.addVertexComponent(q);var w=new g.VertexComponent();w.component=g.VertexComponentEnum.NORMAL;w.nbVertices=u.length/3;w.nbValuesPerVertex=3;w.format=g.DataTypeEnum.FLOAT;w.cardinality=0;w.bufferId=1;w.indices=new g.IndexArray();w.indices.format=g.DataTypeEnum.UINT;w.indices.bufferId=3;w.indices.offset=0;m.addVertexComponent(w);var p=new g.VertexComponent();p.component=g.VertexComponentEnum.TEX_COORD_0;p.nbVertices=B.length/3;p.nbValuesPerVertex=3;p.format=g.DataTypeEnum.FLOAT;p.cardinality=0;p.bufferId=2;p.indices=new g.IndexArray();p.indices.format=g.DataTypeEnum.UINT;p.indices.bufferId=3;p.indices.offset=0;m.addVertexComponent(p);j.addPrimitive(m);l.force=true;v=b.createMeshNode(j,l);return v};a.createImageGP=function(l,J,C,D){var K=new e.ImageUtils.loadTexture(l,e.UVMapping);var y=new c();var F=y.getSettingsDrawingPlane();var o=new e.Vector3(1,0,0);var n=new e.Vector3(0,1,0);var m=new e.Vector3(0,0,1);var L=F.normal;L.normalize();var M=D.currentViewpoint.getCameraTarget();var i=D.currentViewpoint.getCamera().position;var p=new e.Vector3(M.x-i.x,M.y-i.y,M.z-i.z);var r=D.currentViewpoint.getCamera().up;var A=new e.Vector3();A.crossVectors(p,r);p.normalize();if(L.dot(p)>0){}var q=new e.Matrix4();var s=new e.Matrix4();var v=new e.Matrix4();var E=m.angleTo(L);var I=new e.Vector3();I.crossVectors(m,L);I.normalize();if(L*I>0){E=Math.PI*2-E}if(E>Math.PI*0.5){E-=Math.PI}else{if(E<-Math.PI*0.5){E+=Math.PI}}q.makeRotationAxis(I,E);s.makeRotationAxis(m,Math.PI);v.multiplyMatrices(q,s);var H=o.applyMatrix4(v);var G=n.applyMatrix4(v);var z=a.get3DPosition(D,J,F);var j=K.image.width/K.image.height;var u=K.image.height;var w=K.image.width;var B=D.currentViewpoint.camera;var k=a.convertPixelsLengthToMm(B,z,Math.min(window.innerHeight*0.25,window.innerWidth*0.25));if(K.image.width>K.image.height){w=k;u=(w/j)}else{u=k;w=j*u}z.sub(H.multiplyScalar(w*0.5));z.sub(G.multiplyScalar(u*0.5));var t=b.createRectangleNode({width:_planeSize,height:_planeSize,fill:true,color:16711680});t.name="image support";var x=new f();x.add(t);x.matrix.multiply(v);x.matrix.setPosition(z);x._updateMatrix();x.material=new e.MeshBasicMaterial({map:K});x.material.line=new e.LineBasicMaterial({color:0,linewidth:1,opacity:1});x.material.side=e.DoubleSide;x.material.depthWrite=false;x.material.transparent=true;x.material.force=true;C.add(x);D.render()};a.createImageFromDataGP=function(v,t,l,B){var C=new e.DataTexture(v,t,l,e.RGBAFormat);C.needsUpdate=true;var k=new e.Vector3(1,0,0);var j=new e.Vector3(0,1,0);var i=new e.Vector3(0,0,1);var A=new e.Vector3(B[0],B[1],B[2]);var r=new e.Vector3(B[3],B[4],B[5]);var p=new e.Vector3(B[6],B[7],B[8]);var E=new e.Vector3().subVectors(r,A);var z=new e.Vector3().subVectors(p,A);var D=new e.Vector3().crossVectors(E,z);D.normalize();var m=new e.Matrix4();var n=new e.Matrix4();var q=new e.Matrix4();var u=i.angleTo(D);var y=new e.Vector3();y.crossVectors(i,D);y.normalize();if(D*y>0){u=Math.PI*2-u}if(u>Math.PI*0.5){u-=Math.PI}else{if(u<-Math.PI*0.5){u+=Math.PI}}m.makeRotationAxis(y,u);n.makeRotationAxis(i,Math.PI);q.multiplyMatrices(m,n);var x=k.applyMatrix4(q);var w=j.applyMatrix4(q);var o=b.createRectangleNode({width:E.length(),height:z.length(),fill:true,color:16711680});o.name="image support";var s=new f();s.add(o);s.matrix.multiply(q);s.matrix.setPosition(A);s._updateMatrix();s.material=new e.MeshBasicMaterial({map:C});s.material.line=new e.LineBasicMaterial({color:0,linewidth:1,opacity:1});s.material.side=e.DoubleSide;s.material.depthWrite=false;s.material.transparent=true;s.material.force=true;return s};return UWA.namespace("DS/CATCreaDesWebUIServices/CATCrDWebUIServices",a)});