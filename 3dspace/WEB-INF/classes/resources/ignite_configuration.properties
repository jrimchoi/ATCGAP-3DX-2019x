ignite.cache.configuration.name=IgniteCASConfiguration
ignite.cas.cache.name=ProxyCASCache
ignite.cache.mode=REPLICATED
ignite.cache.atomicity.mode=ATOMIC
ignite.cache.write.synchronization.mode=FULL_SYNC
ignite.cache.onHeapCacheEnabled=true
ignite.cache.addresses=127.0.0.1
ignite.tcp.communication.spi.localport=47100
ignite.tcp.communication.spi.localport.range=0
ignite.tcp.discovery.localport=47500


# Securing Connection Between Nodes
#
# Ignite allows you to use SSL socket communication to provide a secure connection among all Ignite nodes. 
# To use it, configure the SSL section in the Ignite configuration by setting the keystore file path and password.
#
ignite.encryption.enabled=false
#ignite.keyStoreFilePath=
#ignite.keyStorePassword=
#
# If you dont modify the keystore type, the default keystore type is "JKS"
#ignite.keyStoreType=
#
# You can change the encryption type. The following algorithms are supported
# http://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SSLContext
# By default, the protocol is TLS
#ignite.protocol=
#
# If you dont modify the key algorithm, the default algorithm is "SunX509"
#ignite.keyAlgorithm=
#
#
# If you have a specific truststore, use it with trustore file path and password
#ignite.trustStoreFilePath=
#ignite.trustStorePassword=
#
# If you dont modify the truststore type, the default truststore type is "JKS"
#ignite.trustStoreType=
#
