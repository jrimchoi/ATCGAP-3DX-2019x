<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<policy overlay="true">
    <name>VPLM_SMB_CX_Definition</name>
    <symbolicName>policy_VPLM_SMB_CX_Definition</symbolicName>
    <dataObjectType>policy</dataObjectType>
    <description>Describes the lifecycle and security of VPLM definition connections for Team Engineering applications</description>
    <sequence></sequence>
    <store>plmx</store>
    <hidden>false</hidden>
    <types>
        <type>ENOSTConnection</type>
        <type>PLMCfgContext</type>
        <type>DELLmiMaterialPathCnx</type>
        <type>DELLmiImplCnx</type>
        <type>DELLmiDetailedMaterialPathCnx</type>
        <type>DELLmiCandidateResourcesCnx</type>
        <type>DELFmiProcessExpositionCnx</type>
        <type>DELFmiProcessImplementCnx</type>
        <type>CATMCXMechanicalConnectionInstance</type>
        <type>PLMWspSpecPVS</type>
        <type>PLMDELPPRProcessCnx</type>
        <type>DELFmiProcessPrerequisiteCnx</type>
        <type>DELFmiProcessPrereqMaterializationCnx</type>
        <type>DELFmiProcessPrecedenceCnx</type>
        <type>DELAsmProcessCanUseCnx</type>
        <type>RFLPLMFunctionalConnectorMappingConnection</type>
        <type>PLMEleGroup</type>
        <type>PLMElecLogicalAllocation</type>
        <type>PLMCfgEffectivity</type>
        <type>PLMEleGroupExtremity</type>
        <type>PLMElecLogicalPinAllocation</type>
        <type>PLMEnsGrouping</type>
        <type>PLMFluidSysPortSize</type>
        <type>CATAsmPatternConnection</type>
        <type>PLMLFSAllocationConnection</type>
        <type>PLMRuleSetPropagationCnx</type>
        <type>DELLmiProductionSystemIOCnx</type>
        <type>DELRmiAcceptedPackagingCnx</type>
        <type>ENOSTPrototypeInstantiationCnxCusto</type>
        <type>ENOSTMaterialPathCnxCusto</type>
        <type>ENOSTFProcessExpo</type>
        <type>ENOSTFProcessDataReq</type>
        <type>ENOSTFProcessPrec</type>
        <type>PLMCfgStaticMapping</type>
        <type>VPMCfgConfiguration</type>
        <type>PLMCfgQuery</type>
        <type>VPMCfgContext</type>
        <type>VPMCfgEffectivity</type>
        <type>VPMCfgInstanceConfiguration</type>
        <type>ENOSTGroupOfInstancesCusto</type>
        <type>PLMReqSpecifyHowToCnx</type>
        <type>PLMLSRRouteConnection</type>
        <type>DIFAttachedPresentation</type>
        <type>DIFIsAPresentationOf</type>
        <type>PLMReqGlobalSpecifyHowToCnx</type>
        <type>LPBehaviorMappingConnection</type>
        <type>CATReportInputsConnection</type>
        <type>CATReportGeneratedDoc</type>
        <type>Attachment</type>
        <type>CandidateResourceLink</type>
        <type>CandidateResourceScopeLink</type>
        <type>DELFmiProcessExpositionCnxCust</type>
        <type>VPMConnection</type>
        <type>DELFmiProcessPrecedenceCnxCust</type>
        <type>DELFmiProcessPrerequisiteCnxCust</type>
        <type>DELLmiMaterialPathCnxCust</type>
        <type>DELSysImplementLinksDiscipline</type>
        <type>DELSysSpecificationLinksDiscipline</type>
        <type>GroupOfProcessInstance</type>
        <type>MfgProductionPlanning</type>
        <type>PLMGroupOfInstances</type>
        <type>PLMPrototypeInstantiationCnx</type>
        <type>RFLPLMFunctionalConnection</type>
        <type>RFLPLMImplementConnection</type>
        <type>RFLVPMLogicalConnection</type>
        <type>PPRContextProcessCnxDisc</type>
        <type>PLMDELPPREBOMCnxDisc</type>
        <type>PPRContextSystemCnxDisc</type>
        <type>Piping_Port_Size</type>
        <type>CATAsmSymStruct</type>
        <type>Piping_Line_Cnx</type>
        <type>MfgProductionExecution</type>
        <type>DELLmiProductionSystemOutputCnxToMBOM</type>
        <type>DELLmiProductionSystemOutputCnxToProduct</type>
        <type>DmtDocument</type>
        <type>PLMFst_MCX</type>
        <type>PLMFst_MCX_X</type>
        <type>EleLogicalGroundPin</type>
        <type>HistorizationLinkRefRef</type>
        <type>HistorizationLinkInstInst</type>
        <type>DELProcessCanUseManufacturingSystem</type>
        <type>DELFmiProcessOutputPrereqMaterializationCnx</type>
        <type>EESRChannelCluster</type>
        <type>EESRConnectorBus</type>
        <type>EESRConnectorBus1</type>
        <type>Piping_Spool_Cnx</type>
        <type>CATAsmSymmetryGeo</type>
        <type>ICLoop_Line_Cnx</type>
        <type>HVAC_Logical_Group_Connection</type>
        <type>HVAC_Line_Cnx</type>
        <type>HVAC_Logical_Port_Size_Connection</type>
        <type>HVAC_Port_Size</type>
        <type>FailureMode</type>
        <type>FallibleReferenceHasRateDefinedBy</type>
        <type>DELFmiMfgSubstituteCnx</type>
        <type>DELMfgResponsibilityCnx</type>
        <type>HazardousEventPhase</type>
        <type>FailureModesEffectsAnalysisCausalityRelationship</type>
        <type>dsc_mat_cnx_Core_Design</type>
        <type>dsc_mat_cnx_Covering_Design</type>
        <type>PLMAssignmentFilterCnx</type>
        <type>DELControlRowCnx</type>
        <type>DELControlPlanIsControlling</type>
        <type>CATMCXMechanicalConnection</type>
        <type>SecondaryCandidateResourceLink</type>
        <type>AllocatedResourceLink</type>
        <type>PLMPCBPackageFootprintCnx</type>
        <type>SPPConnection</type>
        <type>DELRmiFlowCnx</type>
        <type>PLMSpecifyHowToCollectDataCnx</type>
        <type>RFLVPMLogicalPortMappingConnection</type>
        <type>PLMDocConnection</type>
        <type>PLMDELProdSysImplCnx</type>
        <type>PLMDELPPRSystemCnx</type>
        <type>ENOSTLogicalConnection</type>
        <type>ENOSTImplementConnection</type>
        <type>ENOSTFunctionalConnection</type>
        <type>DELLmiTimeConstraintCnx</type>
    </types>
    <formats>
        <format>0</format>
        <format>1</format>
        <format>2</format>
        <format>3</format>
        <format>4</format>
        <format>5</format>
        <format>6</format>
        <format>7</format>
        <format>8</format>
        <format>9</format>
    </formats>
    <allState>true</allState>
    <allStateUserAccess>
        <user>
            <name>Global User</name>
            <key>ChangeControlConnectionRevokeRule</key>
            <filter>to[VPLMrel/PLMConnection/V_Owner].from.interface[Change Control]==TRUE &amp;&amp; (transaction.data[CHANGEID]=='' || (to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!='' &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!=transaction.data[CHANGEID]))</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>changetype</permission>
            <permission>addinterface</permission>
            <permission>removeinterface</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>Global User</name>
            <key>ChangeControlReviseConnectionRevokeRule</key>
            <filter>expression[EnableReviseChangeControlCheck] &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.interface[Change Control]==TRUE &amp;&amp; (transaction.data[CHANGEID]=='' || (to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!='' &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!=transaction.data[CHANGEID]))</filter>
            <permission>revise</permission>
            <permission>majorrevise</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>VPLMViewer</name>
            <key>ChangeControlConnectionRevokeRule</key>
            <filter>to[VPLMrel/PLMConnection/V_Owner].from.interface[Change Control]==TRUE &amp;&amp; (transaction.data[CHANGEID]=='' || (to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!='' &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!=transaction.data[CHANGEID]))</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>changetype</permission>
            <permission>addinterface</permission>
            <permission>removeinterface</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>VPLMViewer</name>
            <key>ChangeControlReviseConnectionRevokeRule</key>
            <filter>expression[EnableReviseChangeControlCheck] &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.interface[Change Control]==TRUE &amp;&amp; (transaction.data[CHANGEID]=='' || (to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!='' &amp;&amp; to[VPLMrel/PLMConnection/V_Owner].from.attribute[Change Id]!=transaction.data[CHANGEID]))</filter>
            <permission>revise</permission>
            <permission>majorrevise</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>public</name>
            <key>DSCoreReservationCheck</key>
            <filter>(reserved == TRUE &amp;&amp; reservedby != context.user)</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>checkin</permission>
            <permission>lock</permission>
            <permission>changeowner</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>revise</permission>
            <permission>approve</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>public</name>
            <key>DSCoreSiteOwnershipCheck</key>
            <filter>attribute[RepoPrivilege].value==1</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>checkin</permission>
            <permission>lock</permission>
            <permission>unlock</permission>
            <permission>changeowner</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>revise</permission>
            <permission>majorrevise</permission>
            <permission>approve</permission>
            <permission>reserve</permission>
            <permission>unreserve</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>public</name>
            <key></key>
            <filter></filter>
            <permission>none</permission>
        </user>
        <user>
            <name>owner</name>
            <key>DSCoreReservationCheck</key>
            <filter>(reserved == TRUE &amp;&amp; reservedby != context.user)</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>checkin</permission>
            <permission>lock</permission>
            <permission>changeowner</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>revise</permission>
            <permission>approve</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>owner</name>
            <key>DSCoreSiteOwnershipCheck</key>
            <filter>attribute[RepoPrivilege].value==1</filter>
            <permission>modify</permission>
            <permission>delete</permission>
            <permission>checkin</permission>
            <permission>lock</permission>
            <permission>unlock</permission>
            <permission>changeowner</permission>
            <permission>promote</permission>
            <permission>demote</permission>
            <permission>revise</permission>
            <permission>majorrevise</permission>
            <permission>approve</permission>
            <permission>reserve</permission>
            <permission>unreserve</permission>
            <revoke>TRUE</revoke>
        </user>
        <user>
            <name>owner</name>
            <key></key>
            <filter></filter>
            <permission>none</permission>
        </user>
        <user>
            <name>owner</name>
            <key></key>
            <filter></filter>
            <permission>none</permission>
        </user>
    </allStateUserAccess>
    <states>
        <state>
            <stateName>DEFAULT</stateName>
            <symbolicName>state_DEFAULT</symbolicName>
            <versionable>true</versionable>
            <minorRevisionable>true</minorRevisionable>
            <majorRevisionable>true</majorRevisionable>
            <promote>false</promote>
            <history>false</history>
            <userAccess>
                <user>
                    <name>VPLMAdmin</name>
                    <key>ExtendedSingleCtxAccess</key>
                    <filter></filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkout</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>unlock</permission>
                    <permission>changeowner</permission>
                    <permission>promote</permission>
                    <permission>demote</permission>
                    <permission>create</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>show</permission>
                    <permission>reserve</permission>
                    <permission>unreserve</permission>
                    <permission>changesov</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>VPLMLocalCrossPrjContextAccess</name>
                    <key>ExtendedMultiCtxReadAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[$ACCESS] == TRUE)</filter>
                    <permission>read</permission>
                    <permission>checkout</permission>
                    <permission>show</permission>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxUnsecuredAccess</key>
                    <filter></filter>
                    <permission>unlock</permission>
                    <permission>changeowner</permission>
                    <permission>revise</permission>
                    <permission>unreserve</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxLockAccessOnAnyOrg</key>
                    <filter>(!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[lock] == TRUE)</filter>
                    <permission>lock</permission>
                    <permission>reserve</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxLockAccessOnSingleOrg</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[lock] == TRUE)</filter>
                    <permission>lock</permission>
                    <permission>reserve</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnAnyOrg1</key>
                    <filter>(!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'IN_WORK,DEFAULT' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') &amp;&amp; expression[VPLMStrictLocking_Definition] &amp;&amp; (!expression[VPLMStrictOwnership_Definition])</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnAnyOrg2</key>
                    <filter>(!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current != 'FROZEN')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnAnyOrg3</key>
                    <filter>(!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (!(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',')) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[fromconnect] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'PRIVATE,DEFAULT,IN_WORK' ',')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnSingleOrg1</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'IN_WORK,DEFAULT' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') &amp;&amp; expression[VPLMStrictLocking_Definition] &amp;&amp; (!expression[VPLMStrictOwnership_Definition])</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnSingleOrg2</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current != 'FROZEN')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxModifyAccessOnSingleOrg3</key>
                    <filter>(!(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',')) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[fromconnect] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'PRIVATE,DEFAULT,IN_WORK' ',')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxUnsecuredAccessOnAnyOrg</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner] == False) &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition])</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedSingleCtxUnsecuredAccessOnSingleOrg</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner] == False)</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedChangeSOVAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[changesov] == TRUE)</filter>
                    <permission>changesov</permission>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxLockAccessOnAnyOrg</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[lock] == TRUE)</filter>
                    <permission>lock</permission>
                    <permission>reserve</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxLockAccessOnSingleOrg</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[lock] == TRUE)</filter>
                    <permission>lock</permission>
                    <permission>reserve</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnAnyOrg1</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'IN_WORK,DEFAULT' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') &amp;&amp; expression[VPLMStrictLocking_Definition] &amp;&amp; (!expression[VPLMStrictOwnership_Definition])</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnAnyOrg2</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current != 'FROZEN')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnAnyOrg3</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (!(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',')) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[fromconnect] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'PRIVATE,DEFAULT,IN_WORK' ',')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnSingleOrg1</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'IN_WORK,DEFAULT' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') &amp;&amp; expression[VPLMStrictLocking_Definition] &amp;&amp; (!expression[VPLMStrictOwnership_Definition])</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnSingleOrg2</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current != 'FROZEN')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxModifyAccessOnSingleOrg3</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Definition,VPLM_SMB_Definition_Document' ',')) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[fromconnect] == TRUE) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'PRIVATE,DEFAULT,IN_WORK' ',')</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxUnsecuredAccess</key>
                    <filter>expression[MultiContextualAuthoringAbility]</filter>
                    <permission>unlock</permission>
                    <permission>changeowner</permission>
                    <permission>revise</permission>
                    <permission>unreserve</permission>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxUnsecuredAccessOnAnyOrg</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner] == False) &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition])</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMCreator</name>
                    <key>ExtendedMultiCtxUnsecuredAccessOnSingleOrg</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner] == False)</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMProjectLeader</name>
                    <key>ExtendedSingleCtxModifyAccessOnAnyOrg4</key>
                    <filter>(!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMProjectLeader</name>
                    <key>ExtendedSingleCtxModifyAccessOnSingleOrg4</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMProjectLeader</name>
                    <key>ExtendedMultiCtxModifyAccessOnAnyOrg4</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (!expression[VPLMStrictOrgOwnership]) &amp;&amp; (!expression[VPLMStrictOrgOwnership_Definition]) &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMProjectLeader</name>
                    <key>ExtendedMultiCtxModifyAccessOnSingleOrg4</key>
                    <filter>expression[MultiContextualAuthoringAbility] &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <organisation>single</organisation>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMLocalCrossOrgContextAccess</name>
                    <key>ExtendedSingleCtxReadAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[$ACCESS] == TRUE)</filter>
                    <permission>read</permission>
                    <permission>checkout</permission>
                    <permission>show</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>Grant</name>
                    <key>ExtendedChangeSOVAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[changesov] == TRUE)</filter>
                    <permission>changesov</permission>
                </user>
                <user>
                    <name>Grant</name>
                    <key>ExtendedSecuredAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'DEFAULT,PRIVATE,IN_WORK' ',') &amp;&amp; (to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                </user>
                <user>
                    <name>Grant</name>
                    <key>ExtendedUnsecuredAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner] == False)</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                </user>
                <user>
                    <name>VPLMTeamManager</name>
                    <key>ExtendedSingleCtxUnsecuredAccess</key>
                    <filter></filter>
                    <permission>lock</permission>
                    <permission>unlock</permission>
                    <permission>changeowner</permission>
                    <permission>reserve</permission>
                    <permission>unreserve</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>VPLMTeamManager</name>
                    <key>ExtendedChangeSOVAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[changesov] == TRUE)</filter>
                    <permission>changesov</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>VPLMReleaseManager</name>
                    <key>ExtendedSingleCtxModifyAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[modify] == TRUE)</filter>
                    <permission>modify</permission>
                    <permission>delete</permission>
                    <permission>checkin</permission>
                    <permission>lock</permission>
                    <permission>changename</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>todisconnect</permission>
                    <permission>freeze</permission>
                    <permission>reserve</permission>
                    <permission>addinterface</permission>
                    <permission>removeinterface</permission>
                    <login>TRUE</login>
                    <project>single</project>
                </user>
                <user>
                    <name>VPLMReleaseManager</name>
                    <key>ExtendedSingleCtxUnsecuredAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner]) == False</filter>
                    <permission>read</permission>
                    <permission>modify</permission>
                    <permission>checkin</permission>
                    <permission>create</permission>
                    <permission>changetype</permission>
                    <permission>fromconnect</permission>
                    <permission>toconnect</permission>
                    <permission>fromdisconnect</permission>
                    <permission>show</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>VPLMSecuredCrossAccess</name>
                    <key>ExtendedMultiCtxReadAccess</key>
                    <filter>(to[VPLMrel/PLMConnection/V_Owner].from.current.access[$ACCESS] == TRUE)</filter>
                    <permission>read</permission>
                    <permission>checkout</permission>
                    <permission>show</permission>
                    <login>TRUE</login>
                </user>
                <user>
                    <name>public</name>
                    <key></key>
                    <filter></filter>
                    <permission>none</permission>
                </user>
                <user>
                    <name>owner</name>
                    <key></key>
                    <filter></filter>
                    <permission>none</permission>
                </user>
            </userAccess>
            <triggers/>
            <signatures/>
        </state>
    </states>
    <properties/>
</policy>
