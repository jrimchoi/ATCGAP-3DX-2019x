/*
**  
**  Copyright Dassault Systemes, 1992-2007.
**  All Rights Reserved.
**  This program contains proprietary and trade secret information of Dassault Systemes and its 
**  subsidiaries, Copyright notice is precautionary only
**  and does not evidence any actual or intended publication of such program
**
**  Class defining basic infrastructure, contains common data members required
**  for executing any IEF related actions.
*/

import java.util.HashMap;

import matrix.db.Context;
import matrix.db.JPO;

import com.matrixone.apps.domain.DomainObject;
import com.matrixone.apps.domain.util.MqlUtil;
import com.matrixone.apps.domain.util.PersonUtil;

public class ${CLASSNAME}
{
      

    public  ${CLASSNAME}  ()
    {
    }

     public int mxMain(Context context, String []args)  throws Exception
    {
        return 0;
    }
    public String getLocker(Context context, String[] args) throws Exception
    {
		String sLocker = "";
		StringBuffer Output =null;
		try{
			HashMap params	   = (HashMap)JPO.unpackArgs(args);
			HashMap requestMap = (HashMap)params.get("requestMap");
			String objectId	   = (String) requestMap.get("objectId");
			DomainObject dObject = DomainObject.newInstance(context,objectId);
			String locker = dObject.getInfo(context,"locker");
			Output = new StringBuffer();
			if(null != locker && !locker.equals(""))
			{
			String strMQL = "print person $1 select $2 dump";
			//sLocker = MqlUtil.mqlCommand(context, strMQL, locker, "description");
			sLocker = PersonUtil.getFullName(context, locker);
			Output.append("<a href='javascript:showNonModalDialog(\""+"../common/emxTree.jsp?objectId="+PersonUtil.getPersonObjectID(context, locker)+"\",575,575)'>");
			Output.append(sLocker);
			Output.append("</a>");
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return Output.toString();
	}
}




