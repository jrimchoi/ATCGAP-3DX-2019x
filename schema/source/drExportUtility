/* drExportUtility.java

   Copyright (c) 1992-2015 Dassault Systemes.
   All Rights Reserved.
   This program contains proprietary and trade secret information of MatrixOne,
   Inc.  Copyright notice is precautionary only
   and does not evidence any actual or intended publication of such program

   static const char RCSID[] = $Id: drExportUtility.java.rca 1.6 Wed Oct 22 16:21:23 2008 przemek Experimental przemek $
 */

import java.util.ArrayList;
import java.util.Arrays;
import com.designrule.drv6tools.common.drApplicationException;
import com.designrule.drv6tools.common.drContext;
import com.designrule.drv6tools.common.admin.drPolicyAdminObject;
import com.designrule.drv6tools.common.utilities.drUsefulFunctions;

import matrix.db.*;
import matrix.util.StringList;

public class ${CLASSNAME}
{
	
	/**
	 *
	 * @param context the eMatrix <code>Context</code> object
	 * @param args holds no arguments
	 * @throws Exception if the operation fails
	 * @since AEF 10.0.SP4
	 * @grade 0
	 */
	public ${CLASSNAME} (Context context, String[] args) throws Exception
	{
		//Do Nothing
	}

	public int printPolicyAccessForExcel(Context context, String[] args) throws drApplicationException 
	{
		System.out.println("START : printPolicyAccessForExcel");
		int result = 0;
		int totalArguments = args.length;
		if(totalArguments>=2){
			try{
				String policy = args[0];
				drContext drcontext = new drContext(context);
				drPolicyAdminObject policyAdminObject = drPolicyAdminObject.retrieve(drcontext, policy);
				if(policyAdminObject!=null){
					String[] params = new String[6];
					if(totalArguments>=3){
						params[0]=args[0];
						params[1]=args[1];
						params[2]="";
						params[3]="";
						params[4]=args[2];
						if(totalArguments>=4){
							params[5]=args[3];
						}else{
							params[5]="";
						}
						result = policyAdminObject.printPolicyAccessForExcel(drcontext, params);
					}else{
						result = policyAdminObject.printPolicyAccessForExcel(drcontext, args);
					}
				}else{
					throw new drApplicationException("Policy '"+policy+"' does not exist in database.");
				}
			}catch(drApplicationException ex){
				throw ex;
			}
		}else{
			throw new drApplicationException("Missing arguments. Atleast 2 arguments expected in this order : policy logFileName (including path)");
		}
		System.out.println("END : printPolicyAccessForExcel");
		return result;
	}
}


