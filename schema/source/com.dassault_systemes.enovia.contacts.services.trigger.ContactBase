/*
 * Copyright (c) 2013-2018 Dassault Systemes. All Rights Reserved This program
 * contains proprietary and trade secret information of Dassault Systemes.
 * Copyright notice is precautionary only and does not evidence any actual or
 * intended publication of such program.
 */


import matrix.db.Context;
import matrix.util.StringList;

import com.dassault_systemes.enovia.contacts.Helper;
import com.dassault_systemes.enovia.contacts.ContactsException;

public class ${CLASSNAME} {

	/**
	 * Constructs a new JPO object.
	 * 
	 * @param context
	 *            the ENOVIA <code>Context</code> object. This argument is
	 *            ignored, only provided for allowing it to be called from UI
	 *            components.
	 * @param args
	 *            This argument is ignored, only provided for allowing it to be
	 *            called from UI components.
	 * @throws ContactsException
	 *             if the operation fails
	 */
	public ${CLASSNAME}(Context context, String[] args) {
		// Do Nothing
	}

	public int checkIfContactIsConnectedToAnyObject(Context context, String[] args) throws ContactsException {
		String strContactId = args[0];
		try {
			StringList objSelects = new StringList(1);
			objSelects.add("id");
			if (Helper.countConnectionsOnObject(context, strContactId) == 0) {
				return 0;
			}
			else {
				String strMsg = Helper.getI18NString(context, Helper.StringResource.CONTACTS, "enoContacts.Message.ContactCanNotBeDeleted");
				throw new ContactsException(strMsg);
			}
		}
		catch (Exception e) {
			throw new ContactsException(e);
		}
	}
}

