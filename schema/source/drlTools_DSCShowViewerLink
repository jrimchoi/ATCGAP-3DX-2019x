/*
**  DSCShowViewerLink
**
**  Copyright Dassault Systemes, 1992-2007.
**  All Rights Reserved.
**  This program contains proprietary and trade secret information of Dassault Systemes and its 
**  subsidiaries, Copyright notice is precautionary only
**  and does not evidence any actual or intended publication of such program
**
**  Program to display Checkout Icon
*/

import com.designrule.drv6tools.jpointeraction.drDocumentActions;
import com.matrixone.MCADIntegration.utils.MCADUrlUtil;
import com.matrixone.apps.domain.util.i18nNow;
import java.util.HashMap;
import java.util.Vector;
import matrix.db.*;

public class ${CLASSNAME}  extends ${CLASS:DSCShowViewerLinkBase}
{
	/**
	   * Constructor.
	   *
	   * @since Sourcing V6R2008-2
	   */
	   
	public ${CLASSNAME} () throws Exception
	{
	  super();
	}
	

	public ${CLASSNAME}(Context context, String[] args) throws Exception
	{
          super(context, args);
	}

        
        @Override
 	public Object getHtmlString(Context context, HashMap paramMap, HashMap formatViewerMap) throws Exception
	{
		BusinessObject busObj			= null;
		BusinessObjectList busObjList	= (BusinessObjectList)paramMap.get("objectList");

		Vector columnCellContentList = new Vector();
		try
		{
                        //drV6Tools - Document Actions providing greater control on the UI actions to be displayed//
                        drDocumentActions drDocActions = new drDocumentActions(context, paramMap);
                        //drV6Tools//
                        
			String lang = (String)context.getSession().getLanguage();
			String sTipView = i18nNow.getI18nString("emxTeamCentral.ContentSummary.ToolTipView", 
					"emxTeamCentralStringResource",
					lang);

			StringBuffer htmlBuffer = new StringBuffer(300);			

			if(null != busObjList && busObjList.size() > 0)
			{
				BusinessObjectItr busObjItr = new BusinessObjectItr(busObjList);			
				while(busObjItr.next())
				{
					busObj				= (BusinessObject)busObjItr.obj();					
					String objectId		= busObj.getObjectId(context);
					FormatList formats 	= busObj.getFormats(context);

					for (int i= 0; i< formats.size(); i++)
					{
						String format				 = ((Format)formats.get(i)).getName();
						String[] viewerServletAndTip = getViewerServletAndTip(context, formatViewerMap, format);
						String sViewerServletName	 = viewerServletAndTip[0];
						String tipView				 = viewerServletAndTip[1];

						if (sViewerServletName == null || sViewerServletName.length() == 0)
							continue;

						if (tipView != null && tipView.length() != 0)
							sTipView = tipView;

						FileList list = busObj.getFiles(context,format);

						for ( int j =0; j< list.size(); j++)
						{
							matrix.db.File file		 = (matrix.db.File)list.get(j);
							String fileName			 = file.getName();
                                                        drDocActions.setupForObject(objectId);
                                                        if(drDocActions.isShowActivity()) {
                                                            HashMap<String, String> objectContentMap = new HashMap<String, String>();
                                                            objectContentMap.put("id", objectId);
                                                            objectContentMap.put("filename", fileName);
                                                            drDocActions.addActivityHTML(objectContentMap, htmlBuffer);
                                                        }

                                                        if (drDocActions.isShowViewer() ) {
                                                            String sFileViewerLink	 = "/servlet/" + sViewerServletName;
                                                            String  viewerURL		 = "../iefdesigncenter/emxInfoViewer.jsp?url=" +sFileViewerLink+ "&id=" + objectId + "&format=" + format + "&file=" + MCADUrlUtil.hexEncode(fileName);
                                                            String viewerHref		 = viewerURL;
                                                            viewerHref				 = "javascript:openWindow('"+ viewerURL + "')";
                                                            String url				 = getFeatureIconContent(viewerHref,  "iconActionViewer.gif",  sTipView+" ("+format + ")"); 

                                                            htmlBuffer.append(url);
                                                            htmlBuffer.append("&nbsp");
                                                        }
						}
					} 			
				}
			}
			columnCellContentList.add(htmlBuffer.toString());
		}
		catch (Exception e)
		{
			System.out.println("DSCShowViewerLink: getHtmlString: " + e.toString());
		}

		return columnCellContentList;
	}  	
  
}

