/*
 * * Copyright (c) 1992-2015 Dassault Systemes.
 * All Rights Reserved.
 */

import com.designrule.drv6tools.jpointeraction.drDragAndDropActions;
import java.util.HashMap;
import matrix.db.Context;
import matrix.db.JPO;

/**
 * This jpo is used to show the content of extended page header
 * in object details page
 * @author g1f
 *
 */
public class ${CLASSNAME} extends ${CLASS:emxExtendedHeaderBase}{
    
        
    /**
     * @param context <code>matrix.db.Context</code>
     * @param args
     * @throws Exception
     */
    public ${CLASSNAME}(Context context, String[] args) throws Exception {
    	super(context, args);
    }  
@Override
      public StringBuilder getHeaderContents(Context context, String[] args) throws Exception {

        HashMap programMap = (HashMap) JPO.unpackArgs(args);
        
       drDragAndDropActions drDnDActions = new drDragAndDropActions(context, programMap);      
       if (drDnDActions.isEnableCascadeActivity()) {        
            
          
            StringBuilder headerContentBuilder = super.getHeaderContents(context, args);
            String replaceJspNameInResult = headerContentBuilder.toString().replace("common/emxFileUpload", "drV6Tools/draganddrop/drFileUpload");
            String replaceOnDropMethodNameInString = replaceJspNameInResult.replace("FileSelectHandlerHeader(", "drFileSelectHandlerHeader('"+drDnDActions.getCascadeActivityName()+"','"+drDnDActions.getRunCascadeForFileExtensions()+"','"+drDnDActions.getCascadeTargetLocation()+"',");
            String replaceOnDragMethodNameInString = replaceOnDropMethodNameInString.replaceAll("FileDragHover", "drFileDragHover");
            StringBuilder result = new StringBuilder();
            result.append(replaceOnDragMethodNameInString);
            return result;

        } else {
            return super.getHeaderContents(context, args);
        }

    }
}

