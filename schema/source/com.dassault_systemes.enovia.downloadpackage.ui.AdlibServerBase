
import java.util.HashMap;
import java.util.Map;

import com.dassault_systemes.enovia.downloadpackage.DownloadPackageException;
import com.dassault_systemes.enovia.downloadpackage.componentframework.Component;
import com.dassault_systemes.enovia.downloadpackage.componentframework.ComponentException;
import com.dassault_systemes.enovia.downloadpackage.componentframework.ComponentFactory;
import com.dassault_systemes.enovia.downloadpackage.services.AdlibServerService;

import matrix.db.Context;

public class ${CLASSNAME} {
	/**
	 * Constructs a new JPO object.
	 * 
	 * @param context
	 *            the ENOVIA <code>Context</code> object.
	 * @param args
	 *            This argument is ignored, only provided for allowing it to be
	 *            called from UI components.
	 * @throws Exception
	 *             if the operation fails
	 */
	public ${CLASSNAME}(Context context, String[] args) {
		super();
	}

	public ${CLASSNAME}() {
	}

	private static AdlibServerService getAdblibServerService(Context context) throws ComponentException {
		Component DownloadPackageCore = ComponentFactory.getInstance(context, "DownloadPackageCoreComponent");
		AdlibServerService service = (AdlibServerService) DownloadPackageCore.getService(AdlibServerService.class);
		return service;
	}

	public Map<String, Map<String, String>> convertToPDF(Context context, String[] args) throws DownloadPackageException {
		try {
			return new HashMap();
		}
		catch (Exception e) {
			throw new DownloadPackageException(e);
		}
	}
}

