var params = proc.declareParameters([{name:"PRD",  type:"NavigationSet"},
                                     {name:"PRCS", type:"NavigationSet"},
                                     {name:"PROD_SYS",  type:"NavigationSet"},{name:"SEL_PROD_SYS", type:"NavigationSet"},
                                     {name:"WK_PL",  type:"NavigationSet"},
                                     {name:"RSC",  type:"NavigationSet"}],
                                    [{name:"ConfigurationsVal", type:"Configurations"}]);

var ExpandPrimitives     = Java.type("com.dassault_systemes.completion.service.ExpandPrimitives");
var NavigationPrimitives = Java.type("com.dassault_systemes.completion.service.NavigationPrimitives");
var DebugTimer = Java.type("com.dassault_systemes.completionServices.base.DebugTimer");

mql.startTransaction(false);

CompletionProcedure.runFunction (ConfigurationsVal, function(context, outputData) {

	///////////////////////////////////////
	// 1- PROD_SYS = ExpandAll(SEL_PROD_SYS)
	///////////////////////////////////////
	var ExpandSEL_SYSTimer = new DebugTimer(context, 0, "PROD_SYS = ExpandAll(SEL_PROD_SYS)", true);
	PROD_SYS = ExpandPrimitives.expandSystem(context, SEL_PROD_SYS, 0);
	ExpandSEL_SYSTimer.complete();
	
					
	///////////////////////////////////////
	// 2- RSC = RSC + NavigateCandidateResource(PROD_SYS)
	///////////////////////////////////////
	var navCandidateRscTimer = new DebugTimer(context, 0, "RSC = RSC + NavigateCandidateResource(PROD_SYS)", true);
	var navMode = [true,false,false]; // {Ref/Ref (scope), Ref/Occ, isCapableResourceNeeded}
	var RSCNacCandidate = NavigationPrimitives.GetCandidateRSCFromSYST(context, PROD_SYS, navMode);
	RSC = RSC.merge(RSCNacCandidate);
	navCandidateRscTimer.complete();

	///////////////////////////////////////
	// 3- Open(PRD,PRCS,PROD_SYS,RSC)
	///////////////////////////////////////
    outputData.add("Product", PRD);
    outputData.add("Process", PRCS);
    outputData.add("System", PROD_SYS);
    outputData.add("WorkPlan", WK_PL);
    outputData.add("Resource", RSC);
});
mql.abortTransaction();

