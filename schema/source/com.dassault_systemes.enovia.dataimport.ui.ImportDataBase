
import java.io.File;
import java.util.Map;

import matrix.db.Context;
import matrix.db.JPO;

import com.dassault_systemes.enovia.dataimport.ImportDataEngine;
import com.dassault_systemes.enovia.dataimport.config.impl.AdminConfigurationImpl;
import com.matrixone.apps.domain.DomainConstants;

public class ${CLASSNAME} {

	public ${CLASSNAME}(Context context, String[] args) {
		super();
	}

	@com.matrixone.apps.framework.ui.ProgramCallable
	public void importDataToEnovia(Context context, String args[]) throws Exception {

		Map<?, ?> programMap = (Map<?, ?>) JPO.unpackArgs(args);

		File inputFile = (File) programMap.get("FilePath");
		String application = (String) programMap.get("application");
		String notificationToUsers = (String) programMap.get("EmailIds");
		String dimpWebAppPath = (String) programMap.get("dimpWebAppPath");

		ImportDataEngine startExecution = new ImportDataEngine();
		startExecution.importData(context, inputFile, application, notificationToUsers, dimpWebAppPath);
	}

	@com.matrixone.apps.framework.ui.ProgramCallable
	public String validateImportXML(Context context, String args[]) throws Exception {

		Map<?, ?> programMap = (Map<?, ?>) JPO.unpackArgs(args);

		String application = (String) programMap.get("application");
		String dimpWebAppPath = (String) programMap.get("dimpWebAppPath");

		String validate = DomainConstants.EMPTY_STRING;
		try {
			new AdminConfigurationImpl(context, application, dimpWebAppPath);
		}
		catch (Exception e) {
			validate = e.toString();
		}
		return validate;
	}
}

