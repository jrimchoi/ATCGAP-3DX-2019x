/*
* Copyright (c) 2013-2018 Dassault Systemes. All Rights Reserved This program
* contains proprietary and trade secret information of Dassault Systemes.
* Copyright notice is precautionary only and does not evidence any actual or
* intended publication of such program.
*/

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;

import matrix.db.Context;
import matrix.db.JPO;

import com.matrixone.apps.domain.util.MapList;

public class ${CLASSNAME} {

	protected MapList getTableAny (Context context, String[] args) throws Exception {
		return getTableAny(context, args, 100);
	}
	
	protected MapList getTableAny (Context context, String[] args, int totalRows) throws Exception {
		//Map<?, ?> mapProgram = (Map<?, ?>) JPO.unpackArgs(args);
		
		MapList mlRows = new MapList();
		
		for (int i = 0; i < totalRows; i++) {
			Map<String, String> mapRow = new HashMap<String, String>();
			mapRow.put("id", "dummy"+i);
			
			mlRows.add(mapRow);
		}
		
		return mlRows;
	}
	
	protected List<String> getTableAnyColumnAny(Context context, String[] args) throws Exception {
		return getTableAnyColumnAny(context, args, "", 1);
	}
	
	protected List<String> getTableAnyColumnAny(Context context, String[] args, String dummyPrefix) throws Exception {
		return getTableAnyColumnAny(context, args, dummyPrefix, 1);
	}
	
	protected List<String> getTableAnyColumnAny(Context context, String[] args, String dummyPrefix, int repeatForRows) throws Exception {
		Map<?, ?> mapProgram = (Map<?, ?>) JPO.unpackArgs(args);
		MapList mlRows = (MapList) mapProgram.get("objectList");
		
		List<String> cells = new Vector<String>();
		
		int rowCount = 0;
		
		for (Object objRow : mlRows) {
			rowCount++;
			int remainder = rowCount % repeatForRows;
			int devision = rowCount / repeatForRows;
			int valueSuffix = (remainder == 0)?((devision == 0)?0:devision-1):(devision);
			
			Map<?,?> mapRow = (Map<?,?>)objRow;
			cells.add(dummyPrefix + " " + valueSuffix);
		}
		
		return cells;
	}
	
	protected List<String> getTableAnyColumnConstant(Context context, String[] args, String value) throws Exception {
		Map<?, ?> mapProgram = (Map<?, ?>) JPO.unpackArgs(args);
		MapList mlRows = (MapList) mapProgram.get("objectList");
		
		List<String> cells = new Vector<String>();
		
		for (Object objRow : mlRows) {
			cells.add(value);
		}
		
		return cells;
	}
	
	protected List<String> getTableAnyColumnAny(Context context, String[] args, String[] values) throws Exception {
		Map<?, ?> mapProgram = (Map<?, ?>) JPO.unpackArgs(args);
		MapList mlRows = (MapList) mapProgram.get("objectList");
		
		List<String> cells = new Vector<String>();
		
		int rowCount = 0;
		for (Object objRow : mlRows) {
			rowCount++;
			
			Map<?,?> mapRow = (Map<?,?>)objRow;
			cells.add(values[rowCount % values.length]);
		}
		
		return cells;
	}
}

