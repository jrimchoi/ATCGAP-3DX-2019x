import matrix.db.*;
import matrix.util.*;
import java.io.*;
import java.util.*;
import java.lang.*;

import com.matrixone.apps.domain.*;
import com.matrixone.apps.common.*;
import com.matrixone.apps.domain.util.*;
import com.matrixone.apps.framework.ui.*;
import com.matrixone.apps.common.util.*;
import com.designrule.drv6tools.jpointeraction.*;

public class ${CLASSNAME}
{

     private Context context;
     private String[] args;
    /**
     *
     * @param context the eMatrix <code>Context</code> object
     * @param args holds no arguments
     * @throws Exception if the operation fails
     * @since AEF Rossini
     */
    public ${CLASSNAME} (Context context, String[] args)
    {
      this.context = context;
      this.args = args;
    }

    /**
     * This method is executed if a specific method is not specified.
     *
     * @param context the eMatrix <code>Context</code> object
     * @param args holds no arguments
     * @return int
     * @throws Exception if the operation fails
     * @since AEF Rossini
     */
    public int mxMain(Context context, String[] args)
        throws FrameworkException
    {
        if (!context.isConnected())
            throw new FrameworkException(ComponentsUtil.i18nStringNow("emxTeamCentral.Generic.NotSupportedOnDesktopClient", context.getLocale().getLanguage()));
        return 0;
    }

    /**
     * get folder list for the Workspace.
     *
     * @param context the eMatrix <code>Context</code> object
     * @param args holds the following input arguments:
     * @return Maplist of Workspace Folder names
     * @throws Exception if the operation fails
     * @since AEF Rossini
     */

    public static MapList getdrV6ToolsFolderList(Context context, String[] args) throws
        Exception
    {
         return drV6ToolsFolderList.getdrV6ToolsMenuItems(context, args) ;
     }

}
