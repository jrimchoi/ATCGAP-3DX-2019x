import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import com.matrixone.apps.domain.util.FrameworkException;
import com.matrixone.apps.domain.util.FrameworkUtil;
import com.matrixone.apps.domain.util.MapList;
import com.matrixone.apps.domain.util.MqlUtil;

import matrix.db.BusinessObject;
import matrix.db.BusinessObjectWithSelect;
import matrix.db.BusinessObjectWithSelectItr;
import matrix.db.BusinessObjectWithSelectList;
import matrix.db.Context;
import matrix.db.History;
import matrix.db.HistoryItr;
import matrix.db.HistoryList;
import matrix.db.NameValue;
import matrix.db.NameValueItr;
import matrix.db.NameValueList;
import matrix.db.Policy;
import matrix.util.MatrixException;
import matrix.util.StringList;
import com.matrixone.apps.domain.util.eMatrixDateFormat;
import com.matrixone.apps.framework.ui.UIUtil;
import java.io.File;
import java.io.FileWriter;

public class ${CLASSNAME} {

	public int mxMain(Context context,String[] args) throws Exception {
		FileWriter fw = null;
		FileWriter fw1 = null;
		try{
		// TODO Auto-generated method stub
		if(args.length>0)
		{
			File file  = new File(args[0]);
			File file1 = new File(args[1]);
			if(!file.exists())
				file.mkdir();
			if(!file1.exists())
				file1.mkdir();
			fw = new FileWriter(file);
			fw1 = new FileWriter(file1);
		}
		SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
		Date oldDate = sdformat.parse("2022-04-28");
        SimpleDateFormat sdfFormatter = new SimpleDateFormat("MM/dd/yyyy", Locale.US);
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(eMatrixDateFormat.getEMatrixDateFormat(), Locale.US);
        String strWhereDate = sdfFormatter.format(oldDate) + " " + "12:00:00 AM";
		String strResult = MqlUtil.mqlCommand(context, "temp query bus 'ProE*' * * where 'modified>\""+strWhereDate+"\"' select id dump ,");
		String[] strResultarr = strResult.split("\n");
		StringList slResults = new StringList();
		HashMap mpObjTNRMapping = new HashMap();
		HashMap mpObjFormatMapping = new HashMap();
		if(fw!=null)
			fw.write("===============================Extraction Process Starts=================================\n");
		if(fw1!=null)
			fw1.write("=====================================Last Checkin By Other Users=====================================\n");
		for(String str : strResultarr)
		{
			StringList slResultData = FrameworkUtil.split(str,",");
			slResults.add((String)slResultData.get(3));
			mpObjTNRMapping.put((String)slResultData.get(3), (String)slResultData.get(0)+" "+(String)slResultData.get(1)+" "+(String)slResultData.get(2));
		}
		
		HashMap objHistoryMap = new HashMap();
		HashMap objHistoryOtherUserMap = new HashMap();
		
		HashMap objHistoryList = new HashMap();
		Map totalHistoryMap = getHistoryData(context,slResults.toArray(new String[slResults.size()]));
		if (totalHistoryMap != null && totalHistoryMap.size() > 0) {
          for (Object str1 : totalHistoryMap.keySet()) {
			  MapList mlHistory = new MapList();
            Map map1 = (Map)totalHistoryMap.get((String)str1);
            StringList stringList1 = (StringList)map1.get("time");
            StringList stringList2 = (StringList)map1.get("description");
            StringList stringList3 = (StringList)map1.get("state");
            StringList stringList4 = (StringList)map1.get("user");
            StringList stringList5 = (StringList)map1.get("action");
			for(int i=0;i<stringList5.size();i++)
			{
				Map historyMap = new HashMap();
				historyMap.put("date", ((String)stringList1.get(i)).split(": ")[1]);
				historyMap.put("user", ((String)stringList4.get(i)).split(": ")[1]);
				historyMap.put("action", (String)stringList5.get(i));
				historyMap.put("state", (String)stringList3.get(i));
				historyMap.put("description", (String)stringList2.get(i));
				mlHistory.add(historyMap);
			}
			objHistoryList.put((String)str1,mlHistory);
		  }
		}
		for(int i=0;i<slResults.size();i++)
		{
			MapList mlHistory = (MapList)objHistoryList.get((String)slResults.get(i));
			if(mlHistory!=null){
				mlHistory.sort("date", "ascending", "date");
				int countAdmin=0;
				int countOther=0;
				for(int j=0;j<mlHistory.size();j++)
				{
					Map historyMap = (Map)mlHistory.get(j);
					String strEvent = (String)historyMap.get("action");
					String strDate = (String)historyMap.get("date");
					Date d1 = simpleDateFormat.parse(strDate);
					String strUser = (String)historyMap.get("user");
					if(strEvent.equalsIgnoreCase("checkin") && !strUser.equals("admin_platform") && !strUser.equals("User Agent"))
					{
						countOther++;
						objHistoryMap.put((String)slResults.get(i),historyMap);
					}
					else if(strEvent.equalsIgnoreCase("checkin") && strUser.equals("admin_platform"))
					{
						countAdmin++;
						objHistoryMap.put((String)slResults.get(i),historyMap);
					}
				}
				if(countAdmin>0 && countOther>0)
				{
					Map ObjectMap = (Map)objHistoryMap.get((String)slResults.get(i));
					if(!((String)ObjectMap.get("user")).equalsIgnoreCase("admin_platform"))
					{
						objHistoryOtherUserMap.put((String)slResults.get(i),ObjectMap);
						objHistoryMap.remove((String)slResults.get(i));
					}
				}
				else
				{
					objHistoryMap.remove((String)slResults.get(i));
				}
			}
		}
		if(fw!=null)
		{	
			fw.write("\n");
			fw.write("\n");
		}
		if(fw1!=null)
		{	
			fw1.write("\n");
			fw1.write("\n");
		}
		for(Object key : objHistoryMap.keySet())
		{
			Map historyMap = (Map)objHistoryMap.get((String)key);
			Date d1 = simpleDateFormat.parse((String)historyMap.get("date"));
			if(d1.compareTo(sdformat.parse("2022-04-28"))>0)
			{
				if(fw!=null)
				fw.write("TNR : "+(String)mpObjTNRMapping.get((String)key)+" ID : "+key+"\n");
				System.out.println("TNR : "+(String)mpObjTNRMapping.get((String)key)+" ID : "+key+"\n");
			}
		}
		System.out.println("\n\n=====================================Last Checkin By Other Users=====================================");
		for(Object key : objHistoryOtherUserMap.keySet())
		{
			Map historyMap = (Map)objHistoryOtherUserMap.get((String)key);
			Date d1 = simpleDateFormat.parse((String)historyMap.get("date"));
			if(d1.compareTo(sdformat.parse("2022-04-28"))>0)
			{
				if(fw1!=null)
					fw1.write("TNR : "+(String)mpObjTNRMapping.get((String)key)+" ID : "+key+"\n");
				System.out.println("TNR : "+(String)mpObjTNRMapping.get((String)key)+" ID : "+key+"\n");
			}
		}
		} catch(Exception exc)
		{
			exc.printStackTrace();
		}
		finally
		{
			if(fw!=null)
				fw.close();
			if(fw1!=null)
				fw1.close();
		}
		return 0;
	}
		
	private Map getHistoryData(Context context, String[] paramArrayOfString) throws MatrixException {
	    HashMap<Object, Object> hashMap = new HashMap<>();
	    try {
	      boolean bool = false;
	      StringList stringList1 = new StringList();
	      StringList stringList2 = null;
	      StringList stringList3 = null;
	      StringList stringList4 = null;
	      StringList stringList5 = null;
	      StringList stringList6 = null;
	      String str = "";
	      
	        stringList1.addElement("history.event");
	        stringList1.addElement("history.time");
	        stringList1.addElement("history.user");
	        stringList1.addElement("history.state");
	        stringList1.addElement("history.description");
	      HashMap<Object, Object> hashMap1 = new HashMap<>();
	      BusinessObjectWithSelectList businessObjectWithSelectList = BusinessObject.getSelectBusinessObjectData(context, paramArrayOfString, stringList1);
	      for (BusinessObjectWithSelectItr businessObjectWithSelectItr = new BusinessObjectWithSelectItr(businessObjectWithSelectList); businessObjectWithSelectItr.next(); ) {
	        BusinessObjectWithSelect businessObjectWithSelect = businessObjectWithSelectItr.obj();
	        String str1 = businessObjectWithSelect.getObjectId(context);
	       
	        stringList2 = businessObjectWithSelect.getSelectDataList("history.time");
	        stringList3 = businessObjectWithSelect.getSelectDataList("history.event");
	        stringList4 = businessObjectWithSelect.getSelectDataList("history.user");
	        stringList5 = businessObjectWithSelect.getSelectDataList("history.state");
	        stringList6 = businessObjectWithSelect.getSelectDataList("history.description");
	         
	        
	        if (stringList2 != null && stringList2.size() > 0) {
	          hashMap1 = new HashMap<>();
	          hashMap1.put("time", stringList2);
	          hashMap1.put("user", stringList4);
	          hashMap1.put("action", stringList3);
	          hashMap1.put("state", stringList5);
	          hashMap1.put("description", stringList6);
	          
	          hashMap.put(str1, hashMap1);
	        } 
	      } 
	    } catch (Exception exception) {
			exception.printStackTrace();
	      throw new MatrixException(exception.toString());
	    } 
	    return hashMap;
	  }
}

