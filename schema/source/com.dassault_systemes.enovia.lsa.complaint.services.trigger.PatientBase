
import java.util.Map;

import matrix.db.Context;

import com.dassault_systemes.enovia.lsa.Helper;
import com.dassault_systemes.enovia.lsa.complaint.services.ComplaintException;
import com.dassault_systemes.enovia.lsa.complaint.services.PatientService;
import com.dassault_systemes.enovia.lsa.componentframework.Component;
import com.dassault_systemes.enovia.lsa.componentframework.ComponentException;
import com.dassault_systemes.enovia.lsa.componentframework.ComponentFactory;
import com.dassault_systemes.enovia.lsa.ticket.TicketConstants;
import com.matrixone.apps.domain.DomainObject;
import com.matrixone.apps.domain.util.PropertyUtil;

public class ${CLASSNAME} {
	/**
	 * Constructs a new JPO object.
	 * 
	 * @param context
	 *            the ENOVIA <code>Context</code> object.
	 * @param args
	 *            This argument is ignored, only provided for allowing it to be
	 *            called from UI components.
	 * @throws Exception
	 *             if the operation fails
	 */
	public ${CLASSNAME}(Context context, String[] args) throws ComplaintException {
		super();
	}

	private PatientService getPatientService(Context context) throws ComponentException {
		Component component = ComponentFactory.getInstance(context, TicketConstants.COLS_CORE_COMPONENT);
		PatientService patientService = (PatientService) component.getService(PatientService.class);
		return patientService;

	}

	public void updateAgeAtTimeOfEvent(Context context, String[] args) throws ComplaintException {
		Map<?, ?> programMap;
		try {
			String strObjectId = args[0];
			PatientService patientService = getPatientService(context);
			Map isKindOf = Helper.getTypeKindOf(context, DomainObject.newInstance(context, strObjectId), TicketConstants.SYMBOLIC_TYPE_PATIENT);
			Boolean flag = (Boolean) isKindOf.get(PropertyUtil.getSchemaProperty(context, TicketConstants.SYMBOLIC_TYPE_PATIENT));
			if (flag) {
				patientService.updateAgeAtTimeOfEvent(context, DomainObject.newInstance(context, strObjectId));
			}
		}
		catch (Exception e) {
			throw new ComplaintException(e);
		}
	}
}

