import com.designrule.drv6tools.drlToolsEnoviaObject;
import matrix.db.BusinessObject;
import matrix.db.Context;


public class ${CLASSNAME} {


  /**
   * This method is executed if a specific method is not specified.
   *
   * @param context the eMatrix <code>Context</code> object
   * @param args holds no arguments
   * @returns nothing
   * @throws Exception if the operation fails
   * @since AEF 9.5.1.1
   */
  public int mxMain(Context context, String[] args) throws Exception
  {
    if (!context.isConnected())
       throw new Exception("not supported on desktop client");
    return 0;
  }

  public int RunTypeCheckTrigger(Context context, String[] args) throws Exception
  {
	try
	{
		int retCode;
		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
		retCode = drlToolsEnoviaObject.RunTypeCheckTrigger(context, args, null);
		return retCode;
	} catch  (Exception ex) {
		throw ex;
	}
  }


  public int RunTypeOverrideTrigger(Context context, String[] args) throws Exception
  {
	try
	{
		int retCode;
		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
		retCode = drlToolsEnoviaObject.RunTypeOverrideTrigger(context, args, null);
		return retCode;
	} catch  (Exception ex) {
		throw ex;
	}
  }

  public int RunTypeActionTrigger(Context context, String[] args) throws Exception
  {
	try
	{
		int retCode;
		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
		retCode = drlToolsEnoviaObject.RunTypeActionTrigger(context, args, null);
		return retCode;
	} catch  (Exception ex) {
		throw ex;
	}
  }  
  
    public int RunAttributeActionTrigger(Context context, String[] args) throws Exception
  {
	try
	{
		int retCode;
		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
		retCode = drlToolsEnoviaObject.RunAttributeActionTrigger(context, args, null);
		return retCode;
	} catch  (Exception ex) {
		throw ex;
	}
  }  

    public int RunPolicyActionTrigger(Context context, String[] args) throws Exception
  {
	try
	{
		int retCode;
		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
		retCode = drlToolsEnoviaObject.RunPolicyActionTrigger(context, args, null);
		return retCode;
	} catch  (Exception ex) {
		throw ex;
	}
  }
   
   public int RunPolicyCheckTrigger(Context context, String[] args) throws Exception
  {
  	try
  	{
  		int retCode;
  		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
  		retCode = drlToolsEnoviaObject.RunPolicyCheckTrigger(context, args, null);
  		return retCode;
  	} catch  (Exception ex) {
  		throw ex;
  	}
  } 

    public int RunRelationshipActionTrigger(Context context, String[] args) throws Exception
    {
	  	try
	  	{
	  		int retCode;
	  		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
	  		retCode = drlToolsEnoviaObject.RunRelationshipActionTrigger(context, args, null);
	  		return retCode;
	  	} catch  (Exception ex) {
	  		throw ex;
	  	}
    } 
    
    public int RunRelationshipCheckTrigger(Context context, String[] args) throws Exception
    {
	  	try
	  	{
	  		int retCode;
	  		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
	  		retCode = drlToolsEnoviaObject.RunRelationshipCheckTrigger(context, args, null);
	  		return retCode;
	  	} catch  (Exception ex) {
	  		throw ex;
	  	}
    } 
	
    public int RunAttributeCheckTrigger(Context context, String[] args) throws Exception
    {
    	try
    	{
    		int retCode;
    		drlToolsEnoviaObject drlToolsEnoviaObject = new drlToolsEnoviaObject(context);
    		retCode = drlToolsEnoviaObject.RunAttributeCheckTrigger(context, args, null);
    		return retCode;
    	} catch  (Exception ex) {
    		throw ex;
    	}
    }  

}

